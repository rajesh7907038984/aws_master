# Generated by Django 4.2.19 on 2025-09-23 08:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BranchZoomAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("can_create_meetings", models.BooleanField(default=True)),
                ("can_view_recordings", models.BooleanField(default=True)),
                ("can_view_attendance", models.BooleanField(default=True)),
                ("can_view_chat_logs", models.BooleanField(default=True)),
                ("can_download_files", models.BooleanField(default=True)),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("full", "Full Access"),
                            ("meetings_only", "Meetings Only"),
                            ("view_only", "View Only"),
                            ("restricted", "Restricted Access"),
                        ],
                        default="full",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Conference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField(blank=True, null=True)),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Timezone for the conference",
                        max_length=100,
                    ),
                ),
                (
                    "meeting_link",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                (
                    "meeting_platform",
                    models.CharField(
                        choices=[
                            ("zoom", "Zoom"),
                            ("teams", "Microsoft Teams"),
                            ("google_meet", "Google Meet"),
                            ("webex", "Webex"),
                            ("other", "Other Platform"),
                        ],
                        default="teams",
                        max_length=100,
                    ),
                ),
                (
                    "meeting_id",
                    models.CharField(
                        blank=True,
                        help_text="Platform-specific meeting ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "meeting_password",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "host_url",
                    models.URLField(
                        blank=True,
                        help_text="Host start URL",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "meeting_status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("started", "Started"),
                            ("ended", "Ended"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                (
                    "data_sync_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                (
                    "auto_recording_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Setup"),
                            ("enabled", "Recording Enabled"),
                            ("failed_no_integration", "Failed - No Integration"),
                            (
                                "failed_invalid_credentials",
                                "Failed - Invalid Credentials",
                            ),
                            ("failed_auth", "Failed - Authentication Error"),
                            ("failed_api_error", "Failed - API Error"),
                            ("failed_exception", "Failed - System Error"),
                            ("not_applicable", "Not Applicable"),
                        ],
                        default="pending",
                        help_text="Status of automatic cloud recording setup",
                        max_length=30,
                    ),
                ),
                (
                    "auto_recording_enabled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When auto recording was successfully enabled",
                        null=True,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("public", "Public"), ("private", "Private")],
                        default="public",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published")],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "default_join_type",
                    models.CharField(
                        choices=[
                            ("guest", "Guest Join (No Registration Required)"),
                            ("authenticated", "Authenticated Users Only"),
                            ("registered", "Course Registered Users Only"),
                        ],
                        default="guest",
                        help_text="Default behavior when users access this conference directly",
                        max_length=20,
                    ),
                ),
                (
                    "join_experience",
                    models.CharField(
                        choices=[
                            ("direct", "Direct Join (Name only, immediate join)"),
                            ("standard", "Standard Guest Form (Name + Email)"),
                        ],
                        default="direct",
                        help_text="Type of guest join experience",
                        max_length=20,
                    ),
                ),
                (
                    "allowed_join_methods",
                    models.CharField(
                        choices=[
                            ("auto_registered_only", "Auto-Registered Join Only"),
                            ("manual_registration", "Manual Registration Only"),
                        ],
                        default="auto_registered_only",
                        help_text="Which join methods are allowed for this conference",
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-date", "-start_time"],
            },
        ),
        migrations.CreateModel(
            name="ConferenceAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "participant_id",
                    models.CharField(
                        blank=True,
                        help_text="Platform-specific participant ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("join_time", models.DateTimeField(blank=True, null=True)),
                ("leave_time", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_minutes",
                    models.IntegerField(
                        default=0, help_text="Attendance duration in minutes"
                    ),
                ),
                (
                    "attendance_status",
                    models.CharField(
                        choices=[
                            ("present", "Present"),
                            ("absent", "Absent"),
                            ("late", "Late"),
                            ("left_early", "Left Early"),
                        ],
                        default="absent",
                        max_length=20,
                    ),
                ),
                (
                    "device_info",
                    models.JSONField(
                        blank=True, default=dict, help_text="Device/browser information"
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ConferenceChat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sender_name",
                    models.CharField(
                        help_text="Display name from platform", max_length=255
                    ),
                ),
                ("message_text", models.TextField()),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Message"),
                            ("file", "File Share"),
                            ("system", "System Message"),
                            ("poll", "Poll"),
                            ("reaction", "Reaction"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField()),
                (
                    "platform_message_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["sent_at"],
            },
        ),
        migrations.CreateModel(
            name="ConferenceFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_url",
                    models.URLField(
                        blank=True,
                        help_text="Platform download URL",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(default=0, help_text="File size in bytes"),
                ),
                ("file_type", models.CharField(max_length=50)),
                ("mime_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "local_file",
                    models.FileField(
                        blank=True, null=True, upload_to="conference_files/%Y/%m/%d/"
                    ),
                ),
                ("shared_at", models.DateTimeField()),
                ("downloaded_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ConferenceParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "participant_id",
                    models.CharField(
                        help_text="Unique ID generated on join click",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "session_token",
                    models.CharField(
                        help_text="Unique session token for this participation",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(help_text="Name shown in meeting", max_length=255),
                ),
                (
                    "email_address",
                    models.EmailField(
                        blank=True,
                        help_text="Email used in meeting",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "join_method",
                    models.CharField(
                        choices=[
                            ("auto_registered", "Auto-Registered Join"),
                            ("manual_registration", "Manual Registration"),
                            ("guest", "Guest Join"),
                        ],
                        default="auto_registered",
                        help_text="How the user joined the conference",
                        max_length=30,
                    ),
                ),
                (
                    "participation_status",
                    models.CharField(
                        choices=[
                            ("clicked_join", "Clicked Join Button"),
                            (
                                "redirected_to_platform",
                                "Redirected to Meeting Platform",
                            ),
                            ("joined_meeting", "Joined Meeting"),
                            ("active_in_meeting", "Active in Meeting"),
                            ("left_meeting", "Left Meeting"),
                            ("meeting_ended", "Meeting Ended"),
                            ("sync_completed", "Data Sync Completed"),
                        ],
                        default="clicked_join",
                        max_length=30,
                    ),
                ),
                (
                    "click_timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When user clicked join"
                    ),
                ),
                (
                    "join_timestamp",
                    models.DateTimeField(
                        blank=True,
                        help_text="When user actually joined meeting",
                        null=True,
                    ),
                ),
                (
                    "leave_timestamp",
                    models.DateTimeField(
                        blank=True, help_text="When user left meeting", null=True
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, help_text="Last activity update"
                    ),
                ),
                (
                    "platform_participant_id",
                    models.CharField(
                        blank=True,
                        help_text="Platform's participant ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "platform_user_id",
                    models.CharField(
                        blank=True,
                        help_text="Platform's user ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "platform_session_id",
                    models.CharField(
                        blank=True,
                        help_text="Platform's session ID",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                (
                    "device_fingerprint",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "tracking_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="All tracking information"
                    ),
                ),
                (
                    "total_duration_minutes",
                    models.IntegerField(
                        default=0, help_text="Total participation duration"
                    ),
                ),
                (
                    "attendance_percentage",
                    models.FloatField(
                        default=0.0, help_text="Percentage of meeting attended"
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("pending", "Sync Pending"),
                            ("in_progress", "Sync In Progress"),
                            ("completed", "Sync Completed"),
                            ("partial", "Partial Data"),
                            ("failed", "Sync Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("sync_errors", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-click_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ConferenceRecording",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recording_id",
                    models.CharField(
                        help_text="Platform-specific recording ID",
                        max_length=255,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "recording_type",
                    models.CharField(
                        choices=[
                            ("cloud", "Cloud Recording"),
                            ("local", "Local Recording"),
                            ("audio_only", "Audio Only"),
                            ("shared_screen", "Shared Screen"),
                        ],
                        default="cloud",
                        max_length=50,
                    ),
                ),
                (
                    "file_url",
                    models.URLField(
                        blank=True,
                        help_text="Direct download/stream URL",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(default=0, help_text="File size in bytes"),
                ),
                (
                    "duration_minutes",
                    models.IntegerField(
                        default=0, help_text="Recording duration in minutes"
                    ),
                ),
                ("file_format", models.CharField(default="mp4", max_length=10)),
                (
                    "download_url",
                    models.URLField(
                        blank=True,
                        help_text="Download URL with auth",
                        max_length=500,
                        null=True,
                    ),
                ),
                ("password_protected", models.BooleanField(default=False)),
                (
                    "recording_password",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "Processing"),
                            ("available", "Available"),
                            ("expired", "Expired"),
                            ("deleted", "Deleted"),
                        ],
                        default="processing",
                        max_length=20,
                    ),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ParticipantTrackingData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("attendance", "Attendance Data"),
                            ("recording", "Recording Data"),
                            ("chat", "Chat Messages"),
                            ("files", "Shared Files"),
                            ("polls", "Poll Responses"),
                            ("reactions", "Reactions"),
                            ("breakout", "Breakout Room Data"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "platform_data",
                    models.JSONField(
                        default=dict, help_text="Raw data from meeting platform"
                    ),
                ),
                (
                    "processed_data",
                    models.JSONField(
                        default=dict, help_text="Processed and normalized data"
                    ),
                ),
                (
                    "recorded_at",
                    models.DateTimeField(
                        help_text="When this data was recorded in the platform"
                    ),
                ),
                (
                    "synced_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this data was synced to LMS"
                    ),
                ),
                (
                    "data_quality_score",
                    models.FloatField(
                        default=1.0, help_text="Quality score (0-1) for this data"
                    ),
                ),
                ("has_errors", models.BooleanField(default=False)),
                ("error_details", models.TextField(blank=True, null=True)),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_details",
                        to="conferences.conferenceparticipant",
                    ),
                ),
            ],
            options={
                "ordering": ["-recorded_at"],
            },
        ),
        migrations.CreateModel(
            name="GuestParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "participation_id",
                    models.CharField(
                        help_text="Unique ID for tracking guest participation",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "guest_name",
                    models.CharField(
                        blank=True,
                        help_text="Optional name provided by guest",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "guest_email",
                    models.EmailField(
                        blank=True,
                        help_text="Optional email provided by guest",
                        max_length=254,
                        null=True,
                    ),
                ),
                ("join_time", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("session_duration_minutes", models.IntegerField(default=0)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("device_info", models.JSONField(blank=True, default=dict)),
                (
                    "participation_status",
                    models.CharField(
                        choices=[
                            ("joined", "Joined Conference"),
                            ("active", "Active in Meeting"),
                            ("left", "Left Conference"),
                            ("disconnected", "Disconnected"),
                        ],
                        default="joined",
                        max_length=20,
                    ),
                ),
                (
                    "platform_participant_id",
                    models.CharField(
                        blank=True,
                        help_text="Platform-specific participant ID when available",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "platform_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional platform-specific data",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "conference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guest_participants",
                        to="conferences.conference",
                    ),
                ),
            ],
            options={
                "ordering": ["-join_time"],
            },
        ),
        migrations.CreateModel(
            name="ConferenceSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("attendance", "Attendance Data"),
                            ("recordings", "Recordings"),
                            ("files", "Shared Files"),
                            ("chat", "Chat Messages"),
                            ("full", "Full Sync"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("started", "Started"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        max_length=20,
                    ),
                ),
                ("items_processed", models.IntegerField(default=0)),
                ("items_failed", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("sync_duration_seconds", models.IntegerField(default=0)),
                ("platform_response", models.JSONField(blank=True, default=dict)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "conference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="conferences.conference",
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="ConferenceRubricEvaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.FloatField(default=0)),
                ("comments", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attendance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rubric_evaluations",
                        to="conferences.conferenceattendance",
                    ),
                ),
                (
                    "conference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rubric_evaluations",
                        to="conferences.conference",
                    ),
                ),
            ],
            options={
                "ordering": ["criterion__position"],
            },
        ),
    ]
