{% extends 'base.html' %}
{% load static %}
{% load account_settings_tags %}

{% block extra_head %}
<meta name="csrf-token" content="{{ csrf_token }}">
{% endblock %}

{% block title %}{{ title }}{% endblock %}

{% block extra_css %}
{% load static %}
<link rel="stylesheet" href="{% static 'account_settings/css/settings-optimized.css' %}">
<style>
    body {
        background-color: #ffffff !important;
    }
    
    .accordion-header {
        padding: 16px 24px;
        background-color: #f9fafb;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .accordion-header h3 {
        font-size: 16px;
        font-weight: 600;
        color: #111827;
        margin: 0;
    }
    
    .accordion-content {
        padding: 24px;
        border-top: 1px solid #e5e7eb;
    }
    
    .accordion-icon {
        transition: transform 0.3s ease;
    }
    
    .accordion-section[x-data="{ open: false }"] .accordion-icon[x-show="open"] {
        transform: rotate(180deg);
    }
    
    /* Fix for modal visibility issues */
    .modal.hidden {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
    }
    
    /* Force display of edit buttons */
    .edit-button-debug,
    .edit-btn-debug {
        display: inline-block !important;
        color: #3B82F6 !important;
        cursor: pointer !important;
    }
    
    /* Fix for buttons container */
    div.space-x-2 {
        display: flex !important;
        align-items: center !important;
        flex-wrap: wrap !important;
    }
    
    /* Force integration button containers to be visible */
    div.space-x-2 > div.space-x-2 {
        display: flex !important;
        align-items: center !important;
        flex-wrap: wrap !important;
        width: auto !important;
        visibility: visible !important;
        opacity: 1 !important;
    }
</style>

<!-- Global scripts -->
<script>
    // Central modal management
    function hideAllModals() {
        document.querySelectorAll('.modal').forEach(modal => {
            modal.classList.add('hidden');
            modal.style.display = 'none';
        });
    }
    
    function showModal(modalId) {
        // First hide all modals
        hideAllModals();
        
        // Then show the requested modal
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('hidden');
            modal.style.display = 'block';
            
            // Focus the first input or button for accessibility
            const firstInput = modal.querySelector('input, button');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 100);
            }
        } else {
            console.error(`Modal with ID ${modalId} not found`);
        }
    }

    // Define the function globally to fix the "not defined" error
    function openBranchLimitsModal(buttonElement) {
        // console.log removed for production
        
        // Hide all other modals first
        hideAllModals();
        
        // Get the modal elements
        const modal = document.getElementById('editBranchLimitsModal');
        const branchIdInput = document.getElementById('branchIdInput');
        const branchNameDisplay = document.getElementById('branchNameDisplay');
        const totalLimitInput = document.getElementById('totalLimitInput');
        const totalCurrentUsage = document.getElementById('totalCurrentUsage');
        
        if (!modal) {
            console.error("Modal element not found!");
            return;
        }
        
        // Extract data from button attributes
        const branchId = buttonElement.getAttribute('data-branch-id');
        const branchName = buttonElement.getAttribute('data-branch-name');
        const totalLimit = buttonElement.getAttribute('data-total-limit');
        const totalCurrent = buttonElement.getAttribute('data-total-current');
        
        // console.log removed for production
        
        // Set values in form
        if (branchIdInput) branchIdInput.value = branchId;
        if (branchNameDisplay) branchNameDisplay.textContent = `Setting user limit for: ${branchName}`;
        if (totalLimitInput) totalLimitInput.value = totalLimit;
        
        // Display current usage and set minimum value
        if (totalCurrentUsage) totalCurrentUsage.textContent = `Currently using: ${totalCurrent} of ${totalLimit} total users`;
        
        // Set minimum value to current usage (can't set limit below current usage)
        if (totalLimitInput) totalLimitInput.setAttribute('min', totalCurrent);
        
        // Show the modal
        modal.classList.remove('hidden');
        modal.style.display = 'block';
        
        // Focus the first input
        if (totalLimitInput) {
            setTimeout(() => totalLimitInput.focus(), 100);
        }
    }
    
    // Business Limits Modal Functions
    function openBusinessLimitsModal(buttonElement) {
        // console.log removed for production
        
        // Hide all other modals first
        hideAllModals();
        
        // Get the modal elements
        const modal = document.getElementById('editBusinessLimitsModal');
        const businessIdInput = document.getElementById('businessIdInput');
        const businessNameDisplay = document.getElementById('businessNameDisplay');
        const totalUserLimitInput = document.getElementById('totalUserLimitInput');
        const branchCreationLimitInput = document.getElementById('branchCreationLimitInput');
        const totalUserCurrentUsage = document.getElementById('totalUserCurrentUsage');
        const branchCreationCurrentUsage = document.getElementById('branchCreationCurrentUsage');
        
        if (!modal) {
            console.error("Business modal element not found!");
            return;
        }
        
        // Extract data from button attributes
        const businessId = buttonElement.getAttribute('data-business-id');
        const businessName = buttonElement.getAttribute('data-business-name');
        const userLimit = buttonElement.getAttribute('data-user-limit');
        const branchLimit = buttonElement.getAttribute('data-branch-limit');
        const currentUsers = buttonElement.getAttribute('data-current-users');
        const currentBranches = buttonElement.getAttribute('data-current-branches');
        
        // console.log removed for production
        
        // Set values in form
        if (businessIdInput) businessIdInput.value = businessId;
        if (businessNameDisplay) businessNameDisplay.textContent = `Setting limits for: ${businessName}`;
        if (totalUserLimitInput) totalUserLimitInput.value = userLimit;
        if (branchCreationLimitInput) branchCreationLimitInput.value = branchLimit;
        
        // Display current usage and set minimum values
        if (totalUserCurrentUsage) totalUserCurrentUsage.textContent = `Currently using: ${currentUsers} of ${userLimit} total users`;
        if (branchCreationCurrentUsage) branchCreationCurrentUsage.textContent = `Currently using: ${currentBranches} of ${branchLimit} branches`;
        
        // Set minimum values to current usage (can't set limit below current usage)
        if (totalUserLimitInput) totalUserLimitInput.setAttribute('min', currentUsers);
        if (branchCreationLimitInput) branchCreationLimitInput.setAttribute('min', currentBranches);
        
        // Show the modal
        modal.classList.remove('hidden');
        modal.style.display = 'block';
        
        // Focus the first input
        if (totalUserLimitInput) {
            setTimeout(() => totalUserLimitInput.focus(), 100);
        }
    }

    // Storage Management Modal Functions
    function openStorageModal(branchId, branchName) {
        // console.log removed for production

        // Hide all other modals first
        hideAllModals();

        // Get the modal elements
        const modal = document.getElementById('storageManagementModal');
        const branchIdInput = document.getElementById('storageBranchId');
        const branchNameDisplay = document.getElementById('storageBranchName');
        const storageLimitInput = document.getElementById('storageLimitInput');
        const warningThresholdInput = document.getElementById('warningThresholdInput');
        const unlimitedCheckbox = document.getElementById('unlimitedStorageCheckbox');

        if (!modal) {
            console.error("Storage modal element not found!");
            return;
        }

        // Set branch information
        if (branchIdInput) branchIdInput.value = branchId;
        if (branchNameDisplay) branchNameDisplay.textContent = branchName;

        // Load current storage data
        fetch(`/account/storage/manage/${branchId}/`, {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'Content-Type': 'application/json',
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                const storageData = data.data;

                // Set current values in form
                if (storageLimitInput) {
                    storageLimitInput.value = storageData.is_unlimited ? '' : (storageData.storage_limit / (1024 * 1024 * 1024)); // Convert bytes to GB
                }

                if (warningThresholdInput) {
                    // Get the warning threshold from the backend
                    warningThresholdInput.value = storageData.warning_threshold_percent || 80;
                }

                if (unlimitedCheckbox) {
                    unlimitedCheckbox.checked = storageData.is_unlimited;
                    unlimitedCheckbox.onchange(); // Trigger the change event to update form state
                }

                // Update current usage display
                document.getElementById('currentUsageDisplay').textContent = storageData.current_usage_display;
                document.getElementById('limitDisplay').textContent = storageData.limit_display;
                document.getElementById('usagePercentageDisplay').textContent = storageData.usage_percentage + '%';
                document.getElementById('fileCountDisplay').textContent = storageData.file_count;

                // Update recent uploads table
                updateRecentUploadsTable(storageData.recent_uploads);

            } else {
                console.error("Error loading storage data:", data.error);
                alert('Error loading storage data: ' + data.error);
            }
        })
        .catch(error => {
            console.error("Error fetching storage data:", error);
            alert('Error loading storage data. Please try again.');
        });

        // Show the modal
        modal.classList.remove('hidden');
        modal.style.display = 'block';

        // Focus the first input
        if (storageLimitInput) {
            setTimeout(() => storageLimitInput.focus(), 100);
        }
    }

    // Update recent uploads table
    function updateRecentUploadsTable(uploads) {
        const tableBody = document.getElementById('recentUploadsTableBody');
        if (!tableBody) return;

        if (!uploads || uploads.length === 0) {
            tableBody.innerHTML = '<tr><td colspan="5" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">No recent uploads found.</td></tr>';
            return;
        }

        let html = '';
        uploads.forEach(upload => {
            html += `
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${upload.filename}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${upload.user}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${upload.size}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${upload.uploaded_at}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${upload.source_app}</td>
                </tr>
            `;
        });
        tableBody.innerHTML = html;
    }

    // Handle unlimited checkbox change
    function handleUnlimitedChange() {
        const checkbox = document.getElementById('unlimitedStorageCheckbox');
        const storageLimitInput = document.getElementById('storageLimitInput');
        const warningThresholdInput = document.getElementById('warningThresholdInput');

        if (checkbox && storageLimitInput) {
            if (checkbox.checked) {
                storageLimitInput.disabled = true;
                storageLimitInput.value = '';
            } else {
                storageLimitInput.disabled = false;
            }
        }
    }

    // Execute this immediately to ensure modals are hidden when the page loads
    document.addEventListener('DOMContentLoaded', hideAllModals);
    
    // Accordion Controller Function
    function accordionController() {
        return {
            activeSection: '{{ active_section }}' || '',
            activeIntegration: '{{ active_integration|default:"zoom" }}',
            
            init() {
                // console.log removed for production
                
                // Handle browser back/forward buttons
                window.addEventListener('popstate', () => {
                    const urlParams = new URLSearchParams(window.location.search);
                    const tabParam = urlParams.get('tab');
                    this.activeSection = tabParam || '';
                });
            },
            
            toggleSection(section) {
                // console.log removed for production
                
                if (this.activeSection === section) {
                    // Close the section
                    this.activeSection = '';
                    this.updateURL('');
                } else {
                    // Open the section
                    this.activeSection = section;
                    this.updateURL(section);
                    
                    // Handle special sections
                    if (section === 'data_management') {
                        this.loadDataManagementContent();
                    } else if (section === 'business') {
                        this.loadBusinessData();
                    } else if (section === 'branches') {
                        this.loadBranchesData();
                    } else if (section === 'order_management_system') {
                        this.loadOrderManagementData();
                    } else if (section === 'admin_users') {
                        // Admin users data is loaded via server-side condition now
                        // But we could add additional AJAX loading here if needed
                    } else if (section === 'ai_tokens') {
                        // AI token data is loaded via server-side condition now
                        // But we could add additional AJAX loading here if needed for real-time updates
                    }
                }
            },
            
            updateURL(section) {
                const url = new URL(window.location);
                if (section) {
                    url.searchParams.set('tab', section);
                } else {
                    url.searchParams.delete('tab');
                }
                history.pushState({}, '', url);
            },
            
            setActiveIntegration(integration) {
                this.activeIntegration = integration;
                const url = new URL(window.location);
                url.searchParams.set('integration', integration);
                history.pushState({}, '', url);
            },
            
            loadDataManagementContent() {
                setTimeout(() => {
                    if (typeof loadExportJobs === 'function') loadExportJobs();
                    if (typeof loadImportJobs === 'function') loadImportJobs();
                    {% if user.role == 'superadmin' %}
                    if (typeof loadBackups === 'function') loadBackups();
                    {% endif %}
                }, 100);
            },
            
            loadBusinessData() {
                if (typeof loadBusinessSettings === 'function') {
                    loadBusinessSettings();
                } else {
                    console.warn('loadBusinessSettings function not available');
                }
            },
            
            loadBranchesData() {
                if (typeof loadBranchesSettings === 'function') {
                    loadBranchesSettings();
                } else {
                    console.warn('loadBranchesSettings function not available');
                }
            },
            
            loadOrderManagementData() {
                if (typeof loadOrderManagementBranches === 'function') {
                    loadOrderManagementBranches();
                } else {
                    console.warn('loadOrderManagementBranches function not available');
                }
            }
        }
    }
</script>
{% endblock %}

{% block content %}
<div class="flex-1 overflow-x-hidden overflow-y-auto bg-white">
    <div class="p-6 space-y-6 bg-white">
        <!-- Breadcrumb -->
        {% include 'components/breadcrumb.html' with breadcrumbs=breadcrumbs %}

        <!-- Main Content -->
        <div class="container mx-auto">
            <!-- Page Title -->
            <div class="mb-6">
                <h1 class="text-2xl sm:text-3xl font-bold text-gray-800">Account & Settings</h1>
            </div>

            <!-- Full Width Content -->
            <div class="bg-white rounded-lg overflow-hidden space-y-4">
                <!-- Accordion Content -->
                <div x-data="accordionController()">
                    <!-- Portal Settings Section -->
                    <div class="accordion-section" data-section-id="portal">
                        <div @click="toggleSection('portal')" class="accordion-header">
                            <h3 class="flex items-center">
                                <i class="fas fa-globe text-blue-600 mr-3"></i>
                                Portal Settings
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'portal'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'portal'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Portal Settings</h2>
                                </div>
                                <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                    <p class="text-gray-600 mb-4">Configure your portal's default timezone setting.</p>
                                    
                                    <!-- Portal Settings Form -->
                                    {% if portal_settings or is_superadmin %}
                                    <div class="mt-6">
                                        <h3 class="text-lg font-semibold text-gray-800 mb-4">Portal Configuration</h3>
                                        
                                        <form method="post" action="{% url 'account_settings:settings' %}" class="space-y-6">
                                            {% csrf_token %}
                                            <input type="hidden" name="form_type" value="portal_settings">
                                            
                                            <div class="space-y-4">
                                                <!-- Timezone -->
                                                <div>
                                                    <label for="timezone" class="block text-sm font-medium text-gray-700">Default Timezone</label>
                                                    <select id="timezone" name="timezone" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                                                        {% if portal_settings %}
                                                            {% for tz_value, tz_name in timezone_choices %}
                                                                <option value="{{ tz_value }}" {% if portal_settings.timezone == tz_value %}selected{% endif %}>{{ tz_name }}</option>
                                                            {% endfor %}
                                                        {% else %}
                                                            {% for tz_value, tz_name in timezone_choices %}
                                                                <option value="{{ tz_value }}" {% if tz_value == 'UTC' %}selected{% endif %}>{{ tz_name }}</option>
                                                            {% endfor %}
                                                        {% endif %}
                                                    </select>
                                                    <p class="mt-1 text-sm text-gray-500">Default timezone for displaying dates and times.</p>
                                                </div>
                                            </div>
                                            
                                            <!-- Submit Button -->
                                            <div>
                                                <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2" style="background-color: #191f56;" onmouseover="this.style.backgroundColor='#141a4a'" onmouseout="this.style.backgroundColor='#191f56'">
                                                    Save Settings
                                                </button>
                                            </div>
                                        </form>
                                    </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Integrations Settings Section (Not for Global Admin) -->
                    {% if not is_globaladmin %}
                    <div class="accordion-section" data-section-id="integrations">
                        <div @click="toggleSection('integrations')" class="accordion-header">
                            <h3 class="flex items-center">
                                <i class="fas fa-plug text-purple-600 mr-3"></i>
                                Integrations Settings
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'integrations'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'integrations'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Integrations Settings</h2>
                                </div>
                                <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                    <p class="text-gray-600 mb-4">Configure your platform integrations including video conferencing, data synchronization, and external services.</p>
                                    
                                                                    <!-- Integration type tabs -->
                                <div class="border-b border-gray-200 mb-6">
                                    <nav class="flex space-x-8">
                                        {% if is_branch_admin %}
                                        <button @click="setActiveIntegration('zoom')" 
                                                :class="{ 'border-blue-500 text-blue-600': activeIntegration === 'zoom', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeIntegration !== 'zoom' }" 
                                                class="pb-4 border-b-2 font-medium text-sm">
                                            Zoom
                                        </button>
                                        <button @click="setActiveIntegration('sharepoint')" 
                                                :class="{ 'border-blue-500 text-blue-600': activeIntegration === 'sharepoint', 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300': activeIntegration !== 'sharepoint' }" 
                                                class="pb-4 border-b-2 font-medium text-sm">
                                            SharePoint
                                            {% if not request.user.branch.sharepoint_integration_enabled %}
                                            <span class="ml-1 px-1.5 py-0.5 text-xs bg-yellow-100 text-yellow-800 rounded-full">Disabled</span>
                                            {% endif %}
                                        </button>
                                        <button disabled class="pb-4 border-b-2 border-transparent text-gray-400 font-medium text-sm cursor-not-allowed">Native SCORM (No Setup Required)</button>
                                        {% endif %}
                                    </nav>
                                </div>
                                    

                                    <!-- Zoom Integration Content -->
                                    {% if is_branch_admin %}
                                    <div x-show="activeIntegration === 'zoom'" class="space-y-4">
                                        <div class="bg-white rounded-lg overflow-hidden">
                                            <div class="p-4">
                                                <h3 class="text-lg font-semibold text-gray-800 mb-2">Zoom Integration</h3>
                                                <p class="text-gray-600 mb-4">Connect your Zoom account to schedule and manage meetings directly from the LMS.</p>
                                                
                                                {% if zoom_integration %}
                                                    <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
                                                        <div class="flex items-start">
                                                            <div class="flex-shrink-0 mt-0.5">
                                                                <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                                                </svg>
                                                            </div>
                                                            <div class="ml-3">
                                                                <h3 class="text-sm font-medium text-green-800">Integration Active</h3>
                                                                <div class="mt-2 text-sm text-green-700">
                                                                    <p>Your Zoom integration is set up and working correctly.</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="bg-white border border-gray-200 rounded-lg p-4">
                                                        <div class="flex justify-between items-start">
                                                            <div>
                                                                <h4 class="text-sm font-medium text-gray-900">Integration Details</h4>
                                                                <div class="mt-2 space-y-2">
                                                                    <div class="flex items-center">
                                                                        <span class="text-xs text-gray-500 w-24">Name:</span>
                                                                        <span class="text-sm text-gray-700">{{ zoom_integration.name }}</span>
                                                                    </div>
                                                                    <div class="flex items-center">
                                                                        <span class="text-xs text-gray-500 w-24">Client ID:</span>
                                                                        <span class="text-sm text-gray-700">{{ zoom_integration.api_key|slice:":6" }}****</span>
                                                                    </div>
                                                                    <div class="flex items-center">
                                                                        <span class="text-xs text-gray-500 w-24">Account ID:</span>
                                                                        <span class="text-sm text-gray-700">{{ zoom_integration.account_id|default:"Not set" }}</span>
                                                                    </div>
                                                                    <div class="flex items-center">
                                                                        <span class="text-xs text-gray-500 w-24">Status:</span>
                                                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {% if zoom_integration.is_active %}bg-green-100 text-green-800{% else %}bg-red-100 text-red-800{% endif %}">
                                                                            {{ zoom_integration.is_active|yesno:"Active,Inactive" }}
                                                                        </span>
                                                                    </div>
                                                                    <div class="flex items-center">
                                                                        <span class="text-xs text-gray-500 w-24">Created:</span>
                                                                        <span class="text-sm text-gray-700">{{ zoom_integration.created_at|date:"M d, Y" }}</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            
                                                            <div class="flex flex-col space-y-2">
                                                                <button type="button" class="text-sm font-medium text-blue-600 hover:text-blue-500 integration-edit-btn"
                                                                       data-target="editZoomIntegrationModal">
                                                                    Edit
                                                                </button>
                                                                <button type="button" onclick="testZoomConnection()" class="text-sm font-medium text-green-600 hover:text-green-500">
                                                                    Test Connection
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                {% else %}
                                                    <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
                                                        <div class="flex items-start">
                                                            <div class="flex-shrink-0 mt-0.5">
                                                                <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                                                </svg>
                                                            </div>
                                                            <div class="ml-3">
                                                                <h3 class="text-sm font-medium text-yellow-800">Not Configured</h3>
                                                                <div class="mt-2 text-sm text-yellow-700">
                                                                    <p>You haven't set up Zoom integration yet.</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
                                                        <div class="flex items-start">
                                                            <div class="flex-shrink-0 mt-0.5">
                                                                <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                                                                </svg>
                                                            </div>
                                                            <div class="ml-3">
                                                                <h3 class="text-sm font-medium text-blue-800">Getting Started</h3>
                                                                <div class="mt-2 text-sm text-blue-700">
                                                                    <p>To set up Zoom integration, you'll need to create a Zoom Server-to-Server OAuth app in your <a href="https://marketplace.zoom.us/develop/create" target="_blank" class="underline hover:text-blue-900">Zoom Marketplace</a>. Get your Account ID, Client ID, and Client Secret from the app credentials.</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <form method="post" action="{% url 'account_settings:settings' %}">
                                                        {% csrf_token %}
                                                        <input type="hidden" name="form_type" value="zoom_integration">
                                                        
                                                        <div class="space-y-4">
                                                            <div class="grid grid-cols-1 gap-4">
                                                                <div>
                                                                    <label for="zoom_name" class="block text-sm font-medium text-gray-700">Integration Name</label>
                                                                    <input type="text" name="zoom_name" id="zoom_name" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="e.g., Main Zoom Account">
                                                                </div>
                                                                <div>
                                                                    <label for="zoom_account_id" class="block text-sm font-medium text-gray-700">Account ID</label>
                                                                    <input type="text" name="zoom_account_id" id="zoom_account_id" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Your Zoom Account ID">
                                                                </div>
                                                                <div>
                                                                    <label for="zoom_api_key" class="block text-sm font-medium text-gray-700">Client ID</label>
                                                                    <input type="text" name="zoom_api_key" id="zoom_api_key" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Your Zoom Client ID">
                                                                </div>
                                                                <div>
                                                                    <label for="zoom_api_secret" class="block text-sm font-medium text-gray-700">Client Secret</label>
                                                                    <input type="password" name="zoom_api_secret" id="zoom_api_secret" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Your Zoom Client Secret">
                                                                </div>
                                                                <div>
                                                                    <div class="flex items-center">
                                                                        <input type="checkbox" name="zoom_is_active" id="zoom_is_active" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded" checked>
                                                                        <label for="zoom_is_active" class="ml-2 block text-sm text-gray-700">Activate Integration</label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            
                                                            <div class="flex items-center justify-end">
                                                                <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2" style="background-color: #191f56;" onmouseover="this.style.backgroundColor='#141a4a'" onmouseout="this.style.backgroundColor='#191f56'">
                                                                    <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                                        <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                                                                    </svg>
                                                                    Save Integration
                                                                                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    
                    <!-- SharePoint Integration Content -->
                    {% if is_branch_admin %}
                    <div x-show="activeIntegration === 'sharepoint'" class="space-y-4">
                        
                        <!-- SharePoint Integration Enable/Disable Control -->
                        {% if not request.user.branch.sharepoint_integration_enabled %}
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-exclamation-triangle text-yellow-500 mt-1"></i>
                                </div>
                                <div class="ml-3 flex-1">
                                    <h4 class="text-sm font-medium text-yellow-800">SharePoint Integration Not Enabled</h4>
                                    <p class="mt-1 text-sm text-yellow-700">SharePoint integration is not enabled for your branch. {% if is_globaladmin %}You can enable it below.{% else %}Please contact your global administrator to enable SharePoint integration for your branch.{% endif %}</p>
                                    
                                    {% if is_globaladmin %}
                                    <form method="post" action="{% url 'account_settings:settings' %}" class="mt-3">
                                        {% csrf_token %}
                                        <input type="hidden" name="form_type" value="enable_branch_sharepoint">
                                        <input type="hidden" name="branch_id" value="{{ request.user.branch.id }}">
                                        <button type="submit" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-yellow-700 bg-yellow-100 hover:bg-yellow-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500">
                                            <i class="fas fa-check mr-2"></i>
                                            Enable SharePoint Integration for This Branch
                                        </button>
                                    </form>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                        {% endif %}
                        
                        {% if request.user.branch.sharepoint_integration_enabled %}
                        <div class="bg-white rounded-lg overflow-hidden">
                            <div class="p-4">
                                <h3 class="text-lg font-semibold text-gray-800 mb-2">SharePoint Integration</h3>
                                <p class="text-gray-600 mb-4">Connect your SharePoint account to sync LMS data with SharePoint lists and Power BI.</p>
                                                
                                                <!-- Setup Documentation -->
                                                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                                                    <div class="flex items-start">
                                                        <div class="flex-shrink-0">
                                                            <i class="fas fa-info-circle text-blue-500 mt-1"></i>
                                                        </div>
                                                        <div class="ml-3">
                                                            <h4 class="text-sm font-medium text-blue-800">Setup Documentation & Prerequisites</h4>
                                                            <div class="mt-2 text-sm text-blue-700">
                                                                <p class="mb-2">Before configuring this integration, please complete the following setup checklist:</p>
                                                                <div class="bg-white border border-blue-200 rounded p-3 mb-3">
                                                                    <div class="space-y-2 text-sm">
                                                                        <label class="flex items-center space-x-2">
                                                                            <input type="checkbox" class="rounded border-gray-300 text-blue-600"> 
                                                                            <span><strong>Azure AD App Registration:</strong> Create app named "{{ request.user.branch.name|default:"Your Company" }} LMS SharePoint Integration"</span>
                                                                        </label>
                                                                        <label class="flex items-center space-x-2">
                                                                            <input type="checkbox" class="rounded border-gray-300 text-blue-600"> 
                                                                            <span><strong>API Permissions:</strong> Add Sites.ReadWrite.All, User.Read.All, Files.ReadWrite.All, Directory.Read.All</span>
                                                                        </label>
                                                                        <label class="flex items-center space-x-2">
                                                                            <input type="checkbox" class="rounded border-gray-300 text-blue-600"> 
                                                                            <span><strong>Admin Consent:</strong> Grant admin consent for your organization</span>
                                                                        </label>
                                                                        <label class="flex items-center space-x-2">
                                                                            <input type="checkbox" class="rounded border-gray-300 text-blue-600"> 
                                                                            <span><strong>Client Secret:</strong> Generate and securely save the client secret value</span>
                                                                        </label>
                                                                        <label class="flex items-center space-x-2">
                                                                            <input type="checkbox" class="rounded border-gray-300 text-blue-600"> 
                                                                            <span><strong>SharePoint Site:</strong> Create SharePoint site with required lists and libraries</span>
                                                                        </label>
                                                                        <label class="flex items-center space-x-2">
                                                                            <input type="checkbox" class="rounded border-gray-300 text-blue-600"> 
                                                                            <span><strong>Power BI Setup:</strong> Configure workspace and dataset (optional)</span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div class="flex flex-wrap gap-2">
                                                                    <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app" target="_blank" class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full hover:bg-blue-200 transition-colors">
                                                                        <i class="fas fa-external-link-alt mr-1"></i>
                                                                        Azure App Registration Guide
                                                                    </a>
                                                                    <a href="https://docs.microsoft.com/en-us/graph/permissions-reference" target="_blank" class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full hover:bg-blue-200 transition-colors">
                                                                        <i class="fas fa-external-link-alt mr-1"></i>
                                                                        Graph API Permissions
                                                                    </a>
                                                                    <a href="https://docs.microsoft.com/en-us/sharepoint/dev/sp-add-ins/working-with-lists-and-list-items-with-rest" target="_blank" class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full hover:bg-blue-200 transition-colors">
                                                                        <i class="fas fa-external-link-alt mr-1"></i>
                                                                        SharePoint Lists Setup
                                                                    </a>
                                                                    <a href="https://docs.microsoft.com/en-us/power-bi/developer/embedded/embed-service-principal" target="_blank" class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full hover:bg-blue-200 transition-colors">
                                                                        <i class="fas fa-external-link-alt mr-1"></i>
                                                                        Power BI Integration
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                
                                {% if sharepoint_integration %}
                                    <!-- Existing SharePoint Integration - View Mode -->
                                    <div id="sharepoint-view-mode" class="bg-green-50 border border-green-200 rounded-lg mb-4">
                                        <!-- Integration Status Header -->
                                        <div class="p-4 border-b border-green-300">
                                            <div class="flex items-start justify-between">
                                                <div class="flex-1 min-w-0">
                                                    <div class="flex items-center space-x-3">
                                                        <div class="flex-shrink-0">
                                                            <div class="w-10 h-10 bg-green-600 rounded-lg flex items-center justify-center">
                                                                <svg class="w-6 h-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                                </svg>
                                                            </div>
                                                        </div>
                                                        <div class="flex-1 min-w-0">
                                                            <h4 class="text-lg font-semibold text-green-800 truncate">{{ sharepoint_integration.name }}</h4>
                                                            <div class="flex items-center space-x-4 mt-1">
                                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {% if sharepoint_integration.is_active %}bg-green-100 text-green-800{% else %}bg-red-100 text-red-800{% endif %}">
                                                                    {% if sharepoint_integration.is_active %}
                                                                        ● Active
                                                                    {% else %}
                                                                        ● Inactive
                                                                    {% endif %}
                                                                </span>
                                                                <span class="text-sm text-green-600">
                                                                    Last Sync: {% if sharepoint_integration.last_sync_datetime %}{{ sharepoint_integration.last_sync_datetime|date:"M d, Y H:i" }}{% else %}Never{% endif %}
                                                                </span>
                                                            </div>
                                                            <p class="text-sm text-gray-600 mt-1 truncate" title="{{ sharepoint_integration.site_url }}">
                                                                <span class="font-medium">Site:</span> {{ sharepoint_integration.site_url|truncatechars:60 }}
                                                            </p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="flex-shrink-0 ml-4">
                                                    <div class="flex flex-wrap gap-2">
                                                        <button type="button" onclick="testSharePointConnection()" 
                                                                class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-yellow-500 hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 transition-colors duration-200">
                                                            🔗 Test Connection
                                                        </button>
                                                        <button type="button" onclick="showManualSetupGuide()" 
                                                                class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-purple-500 hover:bg-purple-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors duration-200">
                                                            📋 Setup Guide
                                                        </button>
                                                        <button type="button" onclick="toggleSharePointEditMode()" 
                                                                class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                                            ✏️ Edit
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Manual Sync Section -->
                                        <div class="p-4">
                                            <div class="border-l-4 border-blue-500 pl-4 mb-4">
                                                <h5 class="text-base font-semibold text-gray-900 mb-2">Manual Data Synchronization</h5>
                                                <p class="text-sm text-gray-600 mb-4">Choose the sync direction to manually synchronize data between your LMS and SharePoint.</p>
                                            </div>
                                            
                                            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4">
                                                <button type="button" onclick="startManualSync('to_sharepoint')" 
                                                        class="relative group bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-4 rounded-lg text-sm font-medium hover:from-green-600 hover:to-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-all duration-200 transform hover:scale-105"
                                                        id="sync-to-sharepoint-btn">
                                                    <div class="flex items-center justify-center">
                                                        <span class="text-lg mr-2">📤</span>
                                                        <div class="text-center">
                                                            <div class="font-semibold">LMS → SharePoint</div>
                                                            <div class="text-xs text-green-100 mt-1">Sync TO SharePoint</div>
                                                        </div>
                                                    </div>
                                                </button>
                                                
                                                <button type="button" onclick="startManualSync('from_sharepoint')" 
                                                        class="relative group bg-gradient-to-r from-blue-500 to-blue-600 text-white px-6 py-4 rounded-lg text-sm font-medium hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 transform hover:scale-105"
                                                        id="sync-from-sharepoint-btn">
                                                    <div class="flex items-center justify-center">
                                                        <span class="text-lg mr-2">📥</span>
                                                        <div class="text-center">
                                                            <div class="font-semibold">SharePoint → LMS</div>
                                                            <div class="text-xs text-blue-100 mt-1">Sync FROM SharePoint</div>
                                                        </div>
                                                    </div>
                                                </button>
                                            </div>
                                            
                                            <!-- Sync Status Display -->
                                            <div id="sync-status" class="hidden mb-4">
                                                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                                                    <div class="flex items-center">
                                                        <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600 mr-3"></div>
                                                        <span class="text-sm font-medium text-blue-700" id="sync-status-text">Synchronization in progress...</span>
                                                    </div>
                                                    <div class="mt-3">
                                                        <div class="bg-white rounded-full h-3 overflow-hidden">
                                                            <div class="bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full transition-all duration-500 ease-out" style="width: 0%" id="sync-progress-bar"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <!-- Sync Result Display -->
                                            <div id="sync-result" class="hidden mb-4">
                                                <!-- Sync result will be displayed here -->
                                            </div>
                                            
                                            <!-- Sync Information -->
                                            <div class="bg-gray-50 rounded-lg p-4 mb-4">
                                                <h6 class="text-sm font-medium text-gray-900 mb-2">Sync Information</h6>
                                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-xs text-gray-600">
                                                    <div>
                                                        <div class="font-medium text-green-700 mb-1">📤 LMS → SharePoint</div>
                                                        <ul class="space-y-1 ml-4">
                                                            <li>• User profiles and data</li>
                                                            <li>• Course enrollments</li>
                                                            <li>• Learning progress</li>
                                                            <li>• Certificates and achievements</li>
                                                        </ul>
                                                    </div>
                                                    <div>
                                                        <div class="font-medium text-blue-700 mb-1">📥 SharePoint → LMS</div>
                                                        <ul class="space-y-1 ml-4">
                                                            <li>• Updated user information</li>
                                                            <li>• External enrollment data</li>
                                                            <li>• Modified progress records</li>
                                                            <li>• External certifications</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <!-- Performance Notice -->
                                            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
                                                <div class="flex items-start">
                                                    <div class="flex-shrink-0">
                                                        <svg class="h-5 w-5 text-yellow-400 mt-0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                                        </svg>
                                                    </div>
                                                    <div class="ml-3">
                                                        <h4 class="text-sm font-medium text-green-800">Sync Status</h4>
                                                        <div class="mt-2 text-sm text-green-700">
                                                            {% if sharepoint_sync_status %}
                                                                {% if sharepoint_sync_status.mode == 'async' %}
                                                                    <div class="flex items-center">
                                                                        <svg class="w-4 h-4 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                                                        </svg>
                                                                        <span class="font-semibold text-green-700">Background Processing Active</span>
                                                                    </div>
                                                                    {% if sharepoint_sync_status.celery_status.worker_count %}
                                                                        <p class="text-xs mt-1">Workers: {{ sharepoint_sync_status.celery_status.worker_count }}</p>
                                                                    {% endif %}
                                                                {% else %}
                                                                    <div class="flex items-center">
                                                                        <svg class="w-4 h-4 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                                                        </svg>
                                                                        <span class="font-semibold text-green-700">Sync Active</span>
                                                                    </div>
                                                                {% endif %}
                                                            {% else %}
                                                                <p class="text-xs">Integration not active</p>
                                                            {% endif %}
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Existing SharePoint Integration - Edit Mode -->
                                    <div id="sharepoint-edit-mode" class="hidden">
                                        <form method="post" action="{% url 'account_settings:settings' %}">
                                            {% csrf_token %}
                                            <input type="hidden" name="form_type" value="sharepoint_integration">
                                            
                                            <div class="space-y-4">
                                                <div class="grid grid-cols-1 gap-4">
                                                    <div>
                                                        <label for="edit_sharepoint_name" class="block text-sm font-medium text-gray-700">Integration Name</label>
                                                        <input type="text" name="sharepoint_name" id="edit_sharepoint_name" value="{{ sharepoint_integration.name }}" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                    </div>
                                                    
                                                    <!-- Azure/SharePoint Configuration -->
                                                    <div class="border-t pt-4">
                                                        <div class="flex items-center justify-between mb-3">
                                                            <h4 class="text-md font-medium text-gray-800">Azure AD Configuration</h4>
                                                            <button type="button" onclick="toggleAzureHelp()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                                <i class="fas fa-question-circle mr-1"></i>Setup Help
                                                            </button>
                                                        </div>
                                                        
                                                        <div class="grid grid-cols-1 gap-4">
                                                            <div>
                                                                <label for="edit_sharepoint_tenant_id" class="block text-sm font-medium text-gray-700">Tenant ID</label>
                                                                <input type="text" name="sharepoint_tenant_id" id="edit_sharepoint_tenant_id" value="{{ sharepoint_integration.tenant_id }}" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            
                                                            <div>
                                                                <label for="edit_sharepoint_client_id" class="block text-sm font-medium text-gray-700">Client ID (Application ID)</label>
                                                                <input type="text" name="sharepoint_client_id" id="edit_sharepoint_client_id" value="{{ sharepoint_integration.client_id }}" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            
                                                            <div>
                                                                <label for="edit_sharepoint_client_secret" class="block text-sm font-medium text-gray-700">Client Secret</label>
                                                                <input type="password" name="sharepoint_client_secret" id="edit_sharepoint_client_secret" value="{{ sharepoint_integration.client_secret }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Leave blank to keep existing secret">
                                                                <p class="mt-1 text-xs text-gray-500">Leave blank to keep existing secret</p>
                                                            </div>
                                                            
                                                            <div>
                                                                <label for="edit_sharepoint_site_url" class="block text-sm font-medium text-gray-700">SharePoint Site URL</label>
                                                                <input type="url" name="sharepoint_site_url" id="edit_sharepoint_site_url" value="{{ sharepoint_integration.site_url }}" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <!-- SharePoint Lists Configuration -->
                                                    <div class="border-t pt-4">
                                                        <div class="flex items-center justify-between mb-3">
                                                            <h4 class="text-md font-medium text-gray-800">SharePoint Lists & Libraries</h4>
                                                            <button type="button" onclick="toggleSharePointHelp()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                                <i class="fas fa-question-circle mr-1"></i>Setup Help
                                                            </button>
                                                        </div>
                                                        
                                                        <div class="grid grid-cols-2 gap-4">
                                                            <div>
                                                                <label for="edit_sharepoint_user_list_name" class="block text-sm font-medium text-gray-700">User List Name</label>
                                                                <input type="text" name="sharepoint_user_list_name" id="edit_sharepoint_user_list_name" value="{{ sharepoint_integration.user_list_name|default:'LMS Users' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            <div>
                                                                <label for="edit_sharepoint_enrollment_list_name" class="block text-sm font-medium text-gray-700">Enrollment List Name</label>
                                                                <input type="text" name="sharepoint_enrollment_list_name" id="edit_sharepoint_enrollment_list_name" value="{{ sharepoint_integration.enrollment_list_name|default:'Course Enrollments' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            <div>
                                                                <label for="edit_sharepoint_progress_list_name" class="block text-sm font-medium text-gray-700">Progress List Name</label>
                                                                <input type="text" name="sharepoint_progress_list_name" id="edit_sharepoint_progress_list_name" value="{{ sharepoint_integration.progress_list_name|default:'Learning Progress' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            <div>
                                                                <label for="edit_sharepoint_certificate_library_name" class="block text-sm font-medium text-gray-700">Certificate Library Name</label>
                                                                <input type="text" name="sharepoint_certificate_library_name" id="edit_sharepoint_certificate_library_name" value="{{ sharepoint_integration.certificate_library_name|default:'Certificates' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            <div>
                                                                <label for="edit_sharepoint_reports_library_name" class="block text-sm font-medium text-gray-700">Reports Library Name</label>
                                                                <input type="text" name="sharepoint_reports_library_name" id="edit_sharepoint_reports_library_name" value="{{ sharepoint_integration.reports_library_name|default:'Reports' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            <div>
                                                                <label for="edit_sharepoint_assessment_library_name" class="block text-sm font-medium text-gray-700">Assessment Library Name</label>
                                                                <input type="text" name="sharepoint_assessment_library_name" id="edit_sharepoint_assessment_library_name" value="{{ sharepoint_integration.assessment_library_name|default:'Assessments' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <!-- Power BI Configuration -->
                                                    <div class="border-t pt-4">
                                                        <div class="flex items-center justify-between mb-3">
                                                            <h4 class="text-md font-medium text-gray-800">Power BI Integration (Optional)</h4>
                                                            <button type="button" onclick="togglePowerBIHelp()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                                <i class="fas fa-question-circle mr-1"></i>Setup Help
                                                            </button>
                                                        </div>
                                                        
                                                        <div class="grid grid-cols-2 gap-4">
                                                            <div>
                                                                <label for="edit_sharepoint_powerbi_workspace_id" class="block text-sm font-medium text-gray-700">Power BI Workspace ID</label>
                                                                <input type="text" name="sharepoint_powerbi_workspace_id" id="edit_sharepoint_powerbi_workspace_id" value="{{ sharepoint_integration.powerbi_workspace_id|default:'' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                            <div>
                                                                <label for="edit_sharepoint_powerbi_dataset_id" class="block text-sm font-medium text-gray-700">Power BI Dataset ID</label>
                                                                <input type="text" name="sharepoint_powerbi_dataset_id" id="edit_sharepoint_powerbi_dataset_id" value="{{ sharepoint_integration.powerbi_dataset_id|default:'' }}" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <!-- Sync Configuration -->
                                                    <div class="border-t pt-4">
                                                        <h4 class="text-md font-medium text-gray-800 mb-3">Synchronization Settings</h4>
                                                        <div class="grid grid-cols-2 gap-4">
                                                            <label class="flex items-center space-x-2">
                                                                <input type="checkbox" name="sharepoint_enable_user_sync" {% if sharepoint_integration.enable_user_sync %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                                <span class="text-sm text-gray-700">Enable User Sync</span>
                                                            </label>
                                                            <label class="flex items-center space-x-2">
                                                                <input type="checkbox" name="sharepoint_enable_enrollment_sync" {% if sharepoint_integration.enable_enrollment_sync %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                                <span class="text-sm text-gray-700">Enable Enrollment Sync</span>
                                                            </label>
                                                            <label class="flex items-center space-x-2">
                                                                <input type="checkbox" name="sharepoint_enable_progress_sync" {% if sharepoint_integration.enable_progress_sync %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                                <span class="text-sm text-gray-700">Enable Progress Sync</span>
                                                            </label>
                                                            <label class="flex items-center space-x-2">
                                                                <input type="checkbox" name="sharepoint_enable_certificate_sync" {% if sharepoint_integration.enable_certificate_sync %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                                <span class="text-sm text-gray-700">Enable Certificate Sync</span>
                                                            </label>
                                                            <label class="flex items-center space-x-2">
                                                                <input type="checkbox" name="sharepoint_enable_reports_sync" {% if sharepoint_integration.enable_reports_sync %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                                <span class="text-sm text-gray-700">Enable Reports Sync</span>
                                                            </label>
                                                            <label class="flex items-center space-x-2">
                                                                <input type="checkbox" name="sharepoint_enable_assessment_sync" {% if sharepoint_integration.enable_assessment_sync %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                                <span class="text-sm text-gray-700">Enable Assessment Sync</span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    
                                                    <!-- Integration Status -->
                                                    <div class="border-t pt-4">
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_is_active" {% if sharepoint_integration.is_active %}checked{% endif %} class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                                            <span class="text-sm font-medium text-gray-700">Enable this integration</span>
                                                        </label>
                                                        <p class="mt-1 text-xs text-gray-500">Uncheck to disable the integration temporarily</p>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex justify-end space-x-3 pt-4">
                                                    <button type="button" onclick="toggleSharePointEditMode()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2">
                                                        Cancel
                                                    </button>
                                                    <button type="button" onclick="showManualSetupGuide()" class="bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2">
                                                        📋 Setup Guide
                                                    </button>
                                                    <button type="button" onclick="testSharePointConnectionInEdit()" class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2">
                                                        🔗 Test Connection
                                                    </button>
                                                    <button type="submit" class="text-white px-4 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                                        Save Changes
                                                    </button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                {% endif %}
                                
                                {% if not sharepoint_integration %}
                                    <!-- Create New SharePoint Integration -->
                                    <form method="post" action="{% url 'account_settings:settings' %}">
                                        {% csrf_token %}
                                        <input type="hidden" name="form_type" value="sharepoint_integration">
                                        
                                        <div class="space-y-4">
                                            <div class="grid grid-cols-1 gap-4">
                                                                                                                        <div>
                                                                            <label for="sharepoint_name" class="block text-sm font-medium text-gray-700">Integration Name</label>
                                                                            <input type="text" name="sharepoint_name" id="sharepoint_name" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" value="{{ request.user.branch.name|default:"Your Company" }} SharePoint Integration" placeholder="e.g., Acme Corp SharePoint Integration">
                                                                        </div>
                                                
                                                                                                                <!-- Azure/SharePoint Configuration -->
                                                                <div class="border-t pt-4">
                                                                    <div class="flex items-center justify-between mb-3">
                                                                        <h4 class="text-md font-medium text-gray-800">Azure AD Configuration</h4>
                                                                        <button type="button" onclick="toggleAzureHelp()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                                            <i class="fas fa-question-circle mr-1"></i>Setup Help
                                                                        </button>
                                                                    </div>
                                                                    
                                                                    <!-- Azure Setup Help (Initially Hidden) -->
                                                                    <div id="azureHelpSection" class="hidden bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
                                                                        <h5 class="font-medium text-yellow-800 mb-2">Step-by-Step Azure AD Setup:</h5>
                                                                        <div class="text-sm text-yellow-700 space-y-2">
                                                                            <div>
                                                                                <strong>1. Register Application:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1 space-y-1">
                                                                                    <li>Go to <a href="https://portal.azure.com" target="_blank" class="text-blue-600 underline">Azure Portal</a> → Azure Active Directory → App registrations</li>
                                                                                    <li>Click "New registration"</li>
                                                                                    <li><strong>Name:</strong> <code class="bg-yellow-100 px-2 py-1 rounded">{{ request.user.branch.name|default:"Your Company" }} LMS SharePoint Integration</code></li>
                                                                                    <li><strong>Supported account types:</strong> "Accounts in this organizational directory only"</li>
                                                                                    <li><strong>Redirect URI:</strong> Web → <code class="bg-yellow-100 px-2 py-1 rounded">{{ request.scheme }}://{{ request.get_host }}/account/sharepoint/callback/</code> 
                                                                                        <button type="button" onclick="copyToClipboard('{{ request.scheme }}://{{ request.get_host }}/account/sharepoint/callback/')" class="ml-2 text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded hover:bg-blue-200">
                                                                                            📋 Copy
                                                                                        </button>
                                                                                    </li>
                                                                                </ul>
                                                                            </div>
                                                                            <div>
                                                                                <strong>2. Configure API Permissions:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1 space-y-1">
                                                                                    <li>Go to API permissions → Add permission → Microsoft Graph → Application permissions</li>
                                                                                    <li><strong>Required permissions:</strong>
                                                                                        <div class="ml-4 mt-1 space-y-1">
                                                                                            <div>• <code class="bg-yellow-100 px-2 py-1 rounded">Sites.ReadWrite.All</code> - Read and write to SharePoint sites</div>
                                                                                            <div>• <code class="bg-yellow-100 px-2 py-1 rounded">User.Read.All</code> - Read all user profiles</div>
                                                                                            <div>• <code class="bg-yellow-100 px-2 py-1 rounded">Files.ReadWrite.All</code> - Read and write files in all site collections</div>
                                                                                            <div>• <code class="bg-yellow-100 px-2 py-1 rounded">Directory.Read.All</code> - Read directory data</div>
                                                                                        </div>
                                                                                    </li>
                                                                                    <li><strong>⚠️ Important:</strong> Click "Grant admin consent for [Your Organization]" after adding permissions</li>
                                                                                </ul>
                                                                            </div>
                                                                            <div>
                                                                                <strong>3. Create Client Secret:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1 space-y-1">
                                                                                    <li>Go to Certificates & secrets → Client secrets → New client secret</li>
                                                                                    <li><strong>Description:</strong> <code class="bg-yellow-100 px-2 py-1 rounded">LMS SharePoint Integration Secret</code></li>
                                                                                    <li><strong>Expires:</strong> Select "24 months" (recommended for production)</li>
                                                                                    <li>Click "Add" → <strong>Immediately copy the "Value"</strong> (not the Secret ID)</li>
                                                                                    <li><span class="text-red-600 font-semibold">🚨 CRITICAL: Save the secret value NOW - it disappears forever after you leave this page!</span></li>
                                                                                </ul>
                                                                                <div class="mt-2 p-2 bg-red-50 border border-red-200 rounded">
                                                                                    <strong class="text-red-800">What to copy:</strong>
                                                                                    <div class="text-sm text-red-700 mt-1">
                                                                                        • ✅ <strong>Value:</strong> Long string starting with something like "8Q~3v2..."<br>
                                                                                        • ❌ <strong>Secret ID:</strong> UUID-like "a1b2c3d4-e5f6..."
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                    <div class="grid grid-cols-1 gap-4">
                                                                                                                                                <div>
                                                                            <label for="sharepoint_tenant_id" class="block text-sm font-medium text-gray-700">Tenant ID</label>
                                                                            <input type="text" name="sharepoint_tenant_id" id="sharepoint_tenant_id" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="12345678-1234-1234-1234-123456789abc">
                                                                            <p class="mt-1 text-xs text-gray-500">Found in Azure AD → Properties → Tenant ID (format: 12345678-1234-1234-1234-123456789abc)</p>
                                                                        </div>
                                                                                                                                                <div>
                                                                            <label for="sharepoint_client_id" class="block text-sm font-medium text-gray-700">Client ID (Application ID)</label>
                                                                            <input type="text" name="sharepoint_client_id" id="sharepoint_client_id" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="87654321-4321-4321-4321-abcdef123456">
                                                                            <p class="mt-1 text-xs text-gray-500">Found in Azure AD → App Registrations → Your App → Application (client) ID (format: 87654321-4321-4321-4321-abcdef123456)</p>
                                                                        </div>
                                                                                                                                                <div>
                                                                            <label for="sharepoint_client_secret" class="block text-sm font-medium text-gray-700">Client Secret</label>
                                                                            <input type="password" name="sharepoint_client_secret" id="sharepoint_client_secret" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="8Q~3v2k5n1m8P9w7e4r2t0y6u3i5o8p1">
                                                                            <p class="mt-1 text-xs text-gray-500">Generated in Azure AD → App Registrations → Your App → Certificates & secrets (starts with characters like "8Q~3v2...")</p>
                                                                        </div>
                                                                                                                                                <div>
                                                                            <label for="sharepoint_site_url" class="block text-sm font-medium text-gray-700">SharePoint Site URL</label>
                                                                            <input type="url" name="sharepoint_site_url" id="sharepoint_site_url" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="https://{{ request.user.branch.name|default:"yourcompany"|lower|slugify }}.sharepoint.com/sites/lms">
                                                                            <p class="mt-1 text-xs text-gray-500">Example: https://acmecorp.sharepoint.com/sites/lms or https://contoso.sharepoint.com/sites/training</p>
                                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                                                                                <!-- SharePoint Lists Configuration -->
                                                                <div class="border-t pt-4">
                                                                    <div class="flex items-center justify-between mb-3">
                                                                        <h4 class="text-md font-medium text-gray-800">SharePoint Lists & Libraries</h4>
                                                                        <button type="button" onclick="toggleSharePointHelp()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                                            <i class="fas fa-question-circle mr-1"></i>Setup Help
                                                                        </button>
                                                                    </div>
                                                                    
                                                                    <!-- SharePoint Setup Help (Initially Hidden) -->
                                                                    <div id="sharepointHelpSection" class="hidden bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
                                                                        <h5 class="font-medium text-green-800 mb-2">SharePoint Site Preparation:</h5>
                                                                        <div class="text-sm text-green-700 space-y-2">
                                                                            <div>
                                                                                <strong>Required Lists to Create in SharePoint:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1 space-y-2">
                                                                                    <li><strong>LMS Users</strong> (Custom List)
                                                                                        <div class="ml-4 text-xs text-gray-600 mt-1">
                                                                                            Columns: Title (Single line), Email (Single line), Role (Choice: Admin/Instructor/Learner), Branch (Single line), LastLogin (Date)
                                                                                        </div>
                                                                                    </li>
                                                                                    <li><strong>Course Enrollments</strong> (Custom List)
                                                                                        <div class="ml-4 text-xs text-gray-600 mt-1">
                                                                                            Columns: UserEmail (Single line), CourseTitle (Single line), EnrollmentDate (Date), Status (Choice: Active/Completed/Withdrawn)
                                                                                        </div>
                                                                                    </li>
                                                                                    <li><strong>Learning Progress</strong> (Custom List)
                                                                                        <div class="ml-4 text-xs text-gray-600 mt-1">
                                                                                            Columns: UserEmail (Single line), CourseName (Single line), ProgressPercent (Number), CompletionDate (Date), LastAccessed (Date)
                                                                                        </div>
                                                                                    </li>
                                                                                </ul>
                                                                            </div>
                                                                            <div>
                                                                                <strong>Required Document Libraries:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1 space-y-1">
                                                                                    <li><strong>Certificates:</strong> Document library for completion certificates</li>
                                                                                    <li><strong>Reports:</strong> Document library for LMS analytics reports</li>
                                                                                    <li><strong>Assessments:</strong> Document library for assessment results and documents</li>
                                                                                </ul>
                                                                            </div>
                                                                            <div class="bg-green-100 p-2 rounded">
                                                                                <strong>💡 Tip:</strong> You can customize the list and library names below to match your existing SharePoint structure.
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                    <div class="grid grid-cols-2 gap-4">
                                                        <div>
                                                            <label for="sharepoint_user_list_name" class="block text-sm font-medium text-gray-700">User List Name</label>
                                                            <input type="text" name="sharepoint_user_list_name" id="sharepoint_user_list_name" value="LMS Users" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                        </div>
                                                        <div>
                                                            <label for="sharepoint_enrollment_list_name" class="block text-sm font-medium text-gray-700">Enrollment List Name</label>
                                                            <input type="text" name="sharepoint_enrollment_list_name" id="sharepoint_enrollment_list_name" value="Course Enrollments" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                        </div>
                                                        <div>
                                                            <label for="sharepoint_progress_list_name" class="block text-sm font-medium text-gray-700">Progress List Name</label>
                                                            <input type="text" name="sharepoint_progress_list_name" id="sharepoint_progress_list_name" value="Learning Progress" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                        </div>
                                                        <div>
                                                            <label for="sharepoint_certificate_library_name" class="block text-sm font-medium text-gray-700">Certificate Library Name</label>
                                                            <input type="text" name="sharepoint_certificate_library_name" id="sharepoint_certificate_library_name" value="Certificates" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                        </div>
                                                        <div>
                                                            <label for="sharepoint_reports_library_name" class="block text-sm font-medium text-gray-700">Reports Library Name</label>
                                                            <input type="text" name="sharepoint_reports_library_name" id="sharepoint_reports_library_name" value="Reports" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                        </div>
                                                        <div>
                                                            <label for="sharepoint_assessment_library_name" class="block text-sm font-medium text-gray-700">Assessment Library Name</label>
                                                            <input type="text" name="sharepoint_assessment_library_name" id="sharepoint_assessment_library_name" value="Assessments" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                                                                                <!-- Power BI Configuration -->
                                                                <div class="border-t pt-4">
                                                                    <div class="flex items-center justify-between mb-3">
                                                                        <h4 class="text-md font-medium text-gray-800">Power BI Integration (Optional)</h4>
                                                                        <button type="button" onclick="togglePowerBIHelp()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                                            <i class="fas fa-question-circle mr-1"></i>Setup Help
                                                                        </button>
                                                                    </div>
                                                                    
                                                                    <!-- Power BI Setup Help (Initially Hidden) -->
                                                                    <div id="powerbiHelpSection" class="hidden bg-purple-50 border border-purple-200 rounded-lg p-4 mb-4">
                                                                        <h5 class="font-medium text-purple-800 mb-2">Power BI Configuration:</h5>
                                                                        <div class="text-sm text-purple-700 space-y-2">
                                                                            <div>
                                                                                <strong>1. Create Power BI Workspace:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1 space-y-1">
                                                                                    <li>Go to <a href="https://app.powerbi.com" target="_blank" class="text-blue-600 underline">Power BI Service</a></li>
                                                                                    <li>Click "Workspaces" → "Create a workspace"</li>
                                                                                    <li><strong>Name:</strong> <code class="bg-purple-100 px-2 py-1 rounded">{{ request.user.branch.name|default:"Your Company" }} LMS Analytics</code></li>
                                                                                    <li>Copy workspace ID from URL: <code class="bg-purple-100 px-2 py-1 rounded">app.powerbi.com/groups/[workspace-id]/</code></li>
                                                                                </ul>
                                                                            </div>
                                                                            <div>
                                                                                <strong>2. Setup Dataset:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1">
                                                                                    <li>Create a dataset connected to your SharePoint lists</li>
                                                                                    <li>Use SharePoint as the data source in Power BI Desktop</li>
                                                                                    <li>Publish to your workspace and copy the dataset ID</li>
                                                                                </ul>
                                                                            </div>
                                                                            <div>
                                                                                <strong>3. Configure Service Principal Access:</strong>
                                                                                <ul class="list-disc list-inside ml-4 mt-1">
                                                                                    <li>Add your Azure AD app to the Power BI workspace as a member</li>
                                                                                    <li>Enable service principal access in Power BI admin settings</li>
                                                                                </ul>
                                                                            </div>
                                                                            <div class="bg-purple-100 p-2 rounded">
                                                                                <strong>📊 Note:</strong> Power BI integration enables automatic dashboard updates with LMS data from SharePoint.
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                    <div class="grid grid-cols-2 gap-4">
                                                                                                                                                <div>
                                                                            <label for="sharepoint_powerbi_workspace_id" class="block text-sm font-medium text-gray-700">Power BI Workspace ID</label>
                                                                            <input type="text" name="sharepoint_powerbi_workspace_id" id="sharepoint_powerbi_workspace_id" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="f089354e-8366-4e18-aea3-4cb4a3a50b48">
                                                                            <p class="mt-1 text-xs text-gray-500">Found in Power BI Service URL: app.powerbi.com/groups/[workspace-id]/</p>
                                                                        </div>
                                                                        <div>
                                                                            <label for="sharepoint_powerbi_dataset_id" class="block text-sm font-medium text-gray-700">Power BI Dataset ID</label>
                                                                            <input type="text" name="sharepoint_powerbi_dataset_id" id="sharepoint_powerbi_dataset_id" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="cfafbeb1-8037-4d0c-896e-a46fb27ff229">
                                                                            <p class="mt-1 text-xs text-gray-500">Found in Power BI dataset settings or URL after publishing from Power BI Desktop</p>
                                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <!-- Sync Configuration -->
                                                <div class="border-t pt-4">
                                                    <h4 class="text-md font-medium text-gray-800 mb-3">Synchronization Settings</h4>
                                                    <div class="grid grid-cols-2 gap-4">
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_enable_user_sync" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                            <span class="text-sm text-gray-700">Enable User Sync</span>
                                                        </label>
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_enable_enrollment_sync" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                            <span class="text-sm text-gray-700">Enable Enrollment Sync</span>
                                                        </label>
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_enable_progress_sync" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                            <span class="text-sm text-gray-700">Enable Progress Sync</span>
                                                        </label>
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_enable_certificate_sync" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                            <span class="text-sm text-gray-700">Enable Certificate Sync</span>
                                                        </label>
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_enable_reports_sync" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                            <span class="text-sm text-gray-700">Enable Reports Sync</span>
                                                        </label>
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" name="sharepoint_enable_assessment_sync" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                            <span class="text-sm text-gray-700">Enable Assessment Sync</span>
                                                        </label>
                                                    </div>
                                                </div>
                                                
                                                <!-- Integration Status -->
                                                <div class="border-t pt-4">
                                                    <label class="flex items-center space-x-2">
                                                        <input type="checkbox" name="sharepoint_is_active" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" checked>
                                                        <span class="text-sm font-medium text-gray-700">Enable this integration</span>
                                                    </label>
                                                    <p class="mt-1 text-xs text-gray-500">Uncheck to disable the integration temporarily</p>
                                                </div>
                                            </div>
                                            
                                            <div class="flex justify-end space-x-3 pt-4">
                                                <button type="submit" class="text-white px-4 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                                    Save SharePoint Integration
                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                {% endif %}
                            </div>
                        </div>
                        {% endif %}
                    </div>
                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    
                    <!-- SCORM Integration Content -->
                    {% if is_branch_admin %}
                    
                    <!-- Native SCORM Information -->
                    {% if is_branch_admin %}
                    <div x-show="activeIntegration === 'scorm'" class="space-y-4">
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-6">
                            <div class="flex items-center mb-4">
                                <div class="flex-shrink-0">
                                    <svg class="h-8 w-8 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-lg font-medium text-blue-800">Native SCORM Integration</h3>
                                </div>
                            </div>
                            <div class="text-blue-700">
                                <p class="mb-3">This LMS now uses <strong>native SCORM processing</strong>. No external integration setup is required.</p>
                                <div class="bg-white rounded-lg p-4 border border-blue-200">
                                    <h4 class="font-semibold mb-2">Features:</h4>
                                    <ul class="list-disc list-inside space-y-1 text-sm">
                                        <li>Automatic SCORM 1.2 and SCORM 2004 support</li>
                                        <li>Built-in SCORM player and API</li>
                                        <li>Progress tracking and scoring</li>
                                        <li>No third-party dependencies</li>
                                        <li>Files stored securely in S3</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endif %}

                            </div>
                        </div>
                    </div>
                    {% endif %}

                    <!-- SharePoint Integration Modal Removed - Now Using Inline Editing -->

                    <!-- Security Settings Section -->
                    <div class="accordion-section" data-section-id="security">
                        <div @click="toggleSection('security')" class="accordion-header cursor-pointer">
                            <h3 class="flex items-center">
                                <i class="fas fa-shield-alt text-red-600 mr-3"></i>
                                Security Settings
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'security'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'security'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Security Settings</h2>
                                </div>
                                <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                    <p class="text-gray-600 mb-4">Manage your account security settings and two-factor authentication.</p>
                                    
                                    <!-- Two-Factor Authentication -->
                                    <div class="space-y-6">
                                        <div class="border-b border-gray-200 pb-6">
                                            <h3 class="text-lg font-medium text-gray-900 mb-4">Two-Factor Authentication</h3>
                                            <p class="text-sm text-gray-600 mb-6">
                                                Add an extra layer of security to your account by requiring a verification code sent to your email when you log in.
                                            </p>
                                            
                                            <!-- Regular Login 2FA -->
                                            <div class="mb-6 p-4 border border-gray-200 rounded-lg">
                                                <div class="flex items-center justify-between">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            {% if user_2fa_enabled %}
                                                            <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                                            {% else %}
                                                            <div class="w-3 h-3 bg-gray-300 rounded-full"></div>
                                                            {% endif %}
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-900">
                                                                <i class="fas fa-key text-gray-600 mr-2"></i>Regular Login Verification
                                                            </p>
                                                            <p class="text-sm text-gray-500">
                                                                Email verification for username/password login
                                                            </p>
                                                        </div>
                                                    </div>
                                                    
                                                    <form method="post" action="{% url 'account_settings:toggle_2fa' %}" class="inline">
                                                        {% csrf_token %}
                                                        <button type="submit" 
                                                                class="{% if user_2fa_enabled %}bg-red-600 hover:bg-red-700{% else %}bg-green-600 hover:bg-green-700{% endif %} text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200"
                                                                onclick="return confirm('{% if user_2fa_enabled %}Are you sure you want to disable two-factor authentication for regular login?{% else %}Are you sure you want to enable two-factor authentication for regular login?{% endif %}')">
                                                            {% if user_2fa_enabled %}
                                                            Disable
                                                            {% else %}
                                                            Enable
                                                            {% endif %}
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                            
                                            <!-- OAuth Login 2FA -->
                                            <div class="mb-6 p-4 border border-gray-200 rounded-lg">
                                                <div class="flex items-center justify-between">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            {% if oauth_2fa_enabled %}
                                                            <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                                            {% else %}
                                                            <div class="w-3 h-3 bg-gray-300 rounded-full"></div>
                                                            {% endif %}
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-900">
                                                                <i class="fab fa-google text-gray-600 mr-1"></i><i class="fab fa-microsoft text-gray-600 mr-2"></i>OAuth Login Verification
                                                            </p>
                                                            <p class="text-sm text-gray-500">
                                                                Email verification for Google/Microsoft login
                                                            </p>
                                                        </div>
                                                    </div>
                                                    
                                                    <form method="post" action="{% url 'account_settings:toggle_oauth_2fa' %}" class="inline">
                                                        {% csrf_token %}
                                                        <button type="submit" 
                                                                class="{% if oauth_2fa_enabled %}bg-red-600 hover:bg-red-700{% else %}bg-green-600 hover:bg-green-700{% endif %} text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200"
                                                                onclick="return confirm('{% if oauth_2fa_enabled %}Are you sure you want to disable two-factor authentication for OAuth login?{% else %}Are you sure you want to enable two-factor authentication for OAuth login?{% endif %}')">
                                                            {% if oauth_2fa_enabled %}
                                                            Disable
                                                            {% else %}
                                                            Enable
                                                            {% endif %}
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                            
                                            <!-- Authenticator App 2FA -->
                                            <div class="mb-6 p-4 border border-gray-200 rounded-lg">
                                                <div class="flex items-center justify-between">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            {% if totp_2fa_enabled %}
                                                            <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                                            {% else %}
                                                            <div class="w-3 h-3 bg-gray-300 rounded-full"></div>
                                                            {% endif %}
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-900">
                                                                <i class="fas fa-mobile-alt text-gray-600 mr-2"></i>Authenticator App
                                                            </p>
                                                            <p class="text-sm text-gray-500">
                                                                Use Google Authenticator, Authy, or similar apps
                                                            </p>
                                                        </div>
                                                    </div>
                                                    
                                                    <form method="post" action="{% url 'account_settings:toggle_totp_2fa' %}" class="inline">
                                                        {% csrf_token %}
                                                        <button type="submit" 
                                                                class="{% if totp_2fa_enabled %}bg-red-600 hover:bg-red-700{% else %}text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200{% endif %}" {% if not totp_2fa_enabled %}style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'"{% else %}{% endif %}
                                                                onclick="{% if totp_2fa_enabled %}return confirm('Are you sure you want to disable authenticator app two-factor authentication?'){% endif %}">
                                                            {% if totp_2fa_enabled %}
                                                            Disable
                                                            {% else %}
                                                            Setup
                                                            {% endif %}
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                            
                                            <!-- Status Messages -->
                                            {% if user_2fa_enabled or oauth_2fa_enabled or totp_2fa_enabled %}
                                            <div class="mt-4 p-4 bg-green-50 border border-green-200 rounded-md">
                                                <div class="flex">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-check-circle text-green-400"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <h3 class="text-sm font-medium text-green-800">
                                                            Two-Factor Authentication is Active
                                                        </h3>
                                                        <div class="mt-2 text-sm text-green-700">
                                                            <p>
                                                                {% if user_2fa_enabled and oauth_2fa_enabled and totp_2fa_enabled %}
                                                                All login methods are protected: email verification for regular/OAuth login and authenticator app.
                                                                {% elif user_2fa_enabled and oauth_2fa_enabled %}
                                                                Both regular and OAuth logins are protected with email verification.
                                                                {% elif user_2fa_enabled and totp_2fa_enabled %}
                                                                Regular login protected with email verification and authenticator app enabled.
                                                                {% elif oauth_2fa_enabled and totp_2fa_enabled %}
                                                                OAuth login protected with email verification and authenticator app enabled.
                                                                {% elif user_2fa_enabled %}
                                                                Regular username/password login is protected with email verification.
                                                                {% elif oauth_2fa_enabled %}
                                                                Google/Microsoft OAuth login is protected with email verification.
                                                                {% elif totp_2fa_enabled %}
                                                                Authenticator app two-factor authentication is enabled.
                                                                {% endif %}
                                                            </p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            {% else %}
                                            <div class="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md">
                                                <div class="flex">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-exclamation-triangle text-yellow-400"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <h3 class="text-sm font-medium text-yellow-800">
                                                            Enhance Your Security
                                                        </h3>
                                                        <div class="mt-2 text-sm text-yellow-700">
                                                            <p>Enable two-factor authentication for your preferred login methods to protect your account from unauthorized access.</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            {% endif %}
                                        </div>
                                        
                                        <!-- Security Tips -->
                                        <div>
                                            <h3 class="text-lg font-medium text-gray-900 mb-4">Security Tips</h3>
                                            <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
                                                <div class="flex">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-lightbulb text-blue-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <h3 class="text-sm font-medium text-blue-800">Best Practices</h3>
                                                        <div class="mt-2 text-sm text-blue-700">
                                                            <ul class="list-disc list-inside space-y-1">
                                                                <li>Enable multiple 2FA methods for maximum security</li>
                                                                <li>Authenticator apps work offline and are more secure than email</li>
                                                                <li>You can choose different settings for different login methods</li>
                                                                <li>Save backup codes safely when setting up authenticator apps</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- AI Token Management Section (Global Admin and Branch Admin only) -->
                    {% if ai_token_data %}
                        {% if is_globaladmin or is_branch_admin %}
                    <div class="accordion-section" data-section-id="ai_tokens">
                        <div @click="toggleSection('ai_tokens')" class="accordion-header">
                            <h3 class="flex items-center">
                                <i class="fas fa-robot text-purple-600 mr-3"></i>
                                AI Token Management
                                {% if ai_token_data.is_global_admin %}
                                    <span class="ml-2 px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded-full">Global Admin</span>
                                {% else %}
                                    <span class="ml-2 px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">Branch Admin</span>
                                {% endif %}
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'ai_tokens'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'ai_tokens'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Anthropic Claude AI Token Management</h2>
                                </div>
                                
                                {% if ai_token_data.is_global_admin %}
                                    <!-- Global Admin View: All Branches -->
                                    <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                        <p class="text-gray-600 mb-4">Manage AI token limits and monitor usage across all branches in the system.</p>
                                        
                                        <!-- Quick Stats -->
                                        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                                            <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-building text-blue-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-blue-800">Total Branches</p>
                                                        <p class="text-lg font-bold text-blue-900">{{ ai_token_data.branches|length }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-green-50 p-4 rounded-lg border border-green-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-infinity text-green-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-green-800">Unlimited</p>
                                                        <p class="text-lg font-bold text-green-900">
                                                            {% with unlimited_count=0 %}
                                                                {% for branch_data in ai_token_data.branches %}
                                                                    {% if branch_data.status == 'unlimited' %}
                                                                        {% with unlimited_count=unlimited_count|add:1 %}
                                                                        {% endwith %}
                                                                    {% endif %}
                                                                {% endfor %}
                                                                {{ unlimited_count }}
                                                            {% endwith %}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-yellow-50 p-4 rounded-lg border border-yellow-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-exclamation-triangle text-yellow-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-yellow-800">High Usage</p>
                                                        <p class="text-lg font-bold text-yellow-900">
                                                            {% with warning_count=0 %}
                                                                {% for branch_data in ai_token_data.branches %}
                                                                    {% if branch_data.status == 'warning' %}
                                                                        {% with warning_count=warning_count|add:1 %}
                                                                        {% endwith %}
                                                                    {% endif %}
                                                                {% endfor %}
                                                                {{ warning_count }}
                                                            {% endwith %}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-red-50 p-4 rounded-lg border border-red-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-ban text-red-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-red-800">Exceeded</p>
                                                        <p class="text-lg font-bold text-red-900">
                                                            {% with exceeded_count=0 %}
                                                                {% for branch_data in ai_token_data.branches %}
                                                                    {% if branch_data.status == 'exceeded' %}
                                                                        {% with exceeded_count=exceeded_count|add:1 %}
                                                                        {% endwith %}
                                                                    {% endif %}
                                                                {% endfor %}
                                                                {{ exceeded_count }}
                                                            {% endwith %}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Branch List Table -->
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200">
                                                <thead class="bg-gray-50">
                                                    <tr>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Branch</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Users</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Monthly Limit</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Usage</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                                        <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="bg-white divide-y divide-gray-200">
                                                    {% for branch_data in ai_token_data.branches %}
                                                    <tr class="{% if branch_data.status == 'exceeded' %}bg-red-50{% elif branch_data.status == 'warning' %}bg-yellow-50{% endif %}">
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            <div class="flex items-center">
                                                                <div>
                                                                    <div class="text-sm font-medium text-gray-900">{{ branch_data.branch.name }}</div>
                                                                    <div class="text-sm text-gray-500">{{ branch_data.branch.business.name|default:"No Business" }}</div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                            {{ branch_data.user_count }}
                                                        </td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                            {% if branch_data.token_limits.is_unlimited %}
                                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                                    <i class="fas fa-infinity mr-1"></i> Unlimited
                                                                </span>
                                                            {% else %}
                                                                {{ branch_data.token_limits.monthly_token_limit|floatformat:0 }}
                                                            {% endif %}
                                                        </td>
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            <div class="flex items-center">
                                                                <div class="flex-1">
                                                                    {% if not branch_data.token_limits.is_unlimited %}
                                                                        <div class="w-full bg-gray-200 rounded-full h-2">
                                                                            <div class="h-2 rounded-full {% if branch_data.usage_percentage >= 100 %}bg-red-500{% elif branch_data.usage_percentage >= 80 %}bg-yellow-500{% else %}bg-green-500{% endif %}" style="width: {{ branch_data.usage_percentage|floatformat:0 }}%"></div>
                                                                        </div>
                                                                        <div class="text-xs text-gray-500 mt-1">{{ branch_data.current_usage|floatformat:0 }} / {{ branch_data.token_limits.monthly_token_limit|floatformat:0 }} ({{ branch_data.usage_percentage|floatformat:1 }}%)</div>
                                                                    {% else %}
                                                                        <div class="text-sm text-gray-500">{{ branch_data.current_usage|floatformat:0 }} tokens used</div>
                                                                    {% endif %}
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            {% if branch_data.status == 'unlimited' %}
                                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                                    Unlimited
                                                                </span>
                                                            {% elif branch_data.status == 'exceeded' %}
                                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                                                    Exceeded
                                                                </span>
                                                            {% elif branch_data.status == 'warning' %}
                                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                                                    High Usage
                                                                </span>
                                                            {% else %}
                                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                                    Normal
                                                                </span>
                                                            {% endif %}
                                                        </td>
                                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                                            <a href="{% url 'tinymce_editor:manage_branch_tokens' branch_data.branch.id %}" 
                                                               class="text-purple-600 hover:text-purple-900" 
                                                               data-branch-name="{{ branch_data.branch.name }}"
                                                               onclick="openAITokenModal({{ branch_data.branch.id }}, '{{ branch_data.branch.name|escapejs }}'); return false;">
                                                                Manage
                                                            </a>
                                                        </td>
                                                    </tr>
                                                    {% empty %}
                                                    <tr>
                                                        <td colspan="6" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">No branches found.</td>
                                                    </tr>
                                                    {% endfor %}
                                                </tbody>
                                            </table>
                                        </div>
                                        
                                        <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-info-circle text-blue-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-blue-800">Global Admin Access</h3>
                                                    <div class="mt-2 text-sm text-blue-700">
                                                        <p>As a Global Admin, you can view and manage AI token limits for all branches. Click "Manage" to configure individual branch settings, set unlimited usage, or view detailed usage statistics.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                {% else %}
                                    <!-- Branch Admin View: Single Branch -->
                                    <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                        <p class="text-gray-600 mb-4">Monitor and view AI token usage for your branch: <strong>{{ ai_token_data.branch.name }}</strong></p>
                                        
                                        <!-- Branch Stats -->
                                        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                                            <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-coins text-blue-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-blue-800">Tokens Used</p>
                                                        <p class="text-lg font-bold text-blue-900">{{ ai_token_data.current_usage|floatformat:0 }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-green-50 p-4 rounded-lg border border-green-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-chart-line text-green-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-green-800">Monthly Limit</p>
                                                        <p class="text-lg font-bold text-green-900">
                                                            {% if ai_token_data.token_limits.is_unlimited %}
                                                                ∞
                                                            {% else %}
                                                                {{ ai_token_data.token_limits.monthly_token_limit|floatformat:0 }}
                                                            {% endif %}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-purple-50 p-4 rounded-lg border border-purple-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-users text-purple-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-purple-800">Active Users</p>
                                                        <p class="text-lg font-bold text-purple-900">{{ ai_token_data.user_count }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-orange-50 p-4 rounded-lg border border-orange-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-percentage text-orange-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-orange-800">Usage %</p>
                                                        <p class="text-lg font-bold text-orange-900">
                                                            {% if ai_token_data.token_limits.is_unlimited %}
                                                                0%
                                                            {% else %}
                                                                {{ ai_token_data.usage_percentage|floatformat:1 }}%
                                                            {% endif %}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Usage Progress Bar -->
                                        {% if not ai_token_data.token_limits.is_unlimited %}
                                        <div class="mb-6">
                                            <div class="flex justify-between text-sm font-medium text-gray-700 mb-1">
                                                <span>Monthly Usage Progress</span>
                                                <span>{{ ai_token_data.usage_percentage|floatformat:1 }}%</span>
                                            </div>
                                            <div class="w-full bg-gray-200 rounded-full h-3">
                                                <div class="h-3 rounded-full transition-all duration-300 {% if ai_token_data.usage_percentage >= 100 %}bg-red-500{% elif ai_token_data.usage_percentage >= 80 %}bg-yellow-500{% else %}bg-green-500{% endif %}" style="width: {% if ai_token_data.usage_percentage > 100 %}100{% else %}{{ ai_token_data.usage_percentage|floatformat:0 }}{% endif %}%"></div>
                                            </div>
                                            <div class="flex justify-between text-xs text-gray-500 mt-1">
                                                <span>{{ ai_token_data.current_usage|floatformat:0 }} used</span>
                                                <span>{{ ai_token_data.token_limits.monthly_token_limit|floatformat:0 }} limit</span>
                                            </div>
                                        </div>
                                        
                                        {% if ai_token_data.usage_percentage >= 90 %}
                                        <div class="mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-exclamation-triangle text-red-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-red-800">Token Limit Warning</h3>
                                                    <div class="mt-2 text-sm text-red-700">
                                                        <p>Your branch is approaching its monthly AI token limit. Contact your administrator if you need additional tokens.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {% elif ai_token_data.usage_percentage >= 75 %}
                                        <div class="mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-info-circle text-yellow-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-yellow-800">High Usage Notice</h3>
                                                    <div class="mt-2 text-sm text-yellow-700">
                                                        <p>Your branch has used over 75% of its monthly AI token allowance.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        {% else %}
                                        <div class="mb-4 p-4 bg-gray-50 border border-gray-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-infinity text-gray-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-gray-800">Unlimited Usage</h3>
                                                    <div class="mt-2 text-sm text-gray-700">
                                                        <p>Your branch has unlimited AI token usage enabled.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <!-- Top Users This Month -->
                                        {% if ai_token_data.top_users %}
                                        <div class="mb-6">
                                            <h3 class="text-lg font-medium text-gray-900 mb-4">Top Users This Month</h3>
                                            <div class="bg-gray-50 rounded-lg overflow-hidden">
                                                <table class="min-w-full divide-y divide-gray-200">
                                                    <thead class="bg-gray-50">
                                                        <tr>
                                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tokens Used</th>
                                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Requests</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody class="bg-white divide-y divide-gray-200">
                                                        {% for user in ai_token_data.top_users %}
                                                        <tr>
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ user.user__username }}</td>
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ user.total_tokens|floatformat:0 }}</td>
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ user.request_count }}</td>
                                                        </tr>
                                                        {% endfor %}
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <!-- Recent Activity -->
                                        {% if ai_token_data.recent_usage %}
                                        <div class="mb-6">
                                            <h3 class="text-lg font-medium text-gray-900 mb-4">Recent Activity</h3>
                                            <div class="space-y-3">
                                                {% for usage in ai_token_data.recent_usage %}
                                                <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            {% if usage.success %}
                                                                <i class="fas fa-check-circle text-green-500"></i>
                                                            {% else %}
                                                                <i class="fas fa-times-circle text-red-500"></i>
                                                            {% endif %}
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-900">{{ usage.user.username }}</p>
                                                            <p class="text-sm text-gray-500">{{ usage.prompt_text|truncatechars:60 }}</p>
                                                        </div>
                                                    </div>
                                                    <div class="text-right">
                                                        <p class="text-sm font-medium text-gray-900">{{ usage.tokens_used }} tokens</p>
                                                        <p class="text-sm text-gray-500">{{ usage.created_at|timesince }} ago</p>
                                                    </div>
                                                </div>
                                                {% endfor %}
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-info-circle text-blue-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-blue-800">Branch Admin View</h3>
                                                    <div class="mt-2 text-sm text-blue-700">
                                                        <p>This shows AI token usage for your branch only. Token limits are managed by Global Administrators. Contact them if you need limit adjustments.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                        {% endif %}
                    {% endif %}
                    
                    <!-- Storage Management Section (Global Admin and Branch Admin only) -->
                    {% if storage_data %}
                        {% if is_globaladmin or is_branch_admin %}
                    <div class="accordion-section" data-section-id="storage_management">
                        <div @click="toggleSection('storage_management')" class="accordion-header">
                            <h3 class="flex items-center">
                                <i class="fas fa-hdd text-blue-600 mr-3"></i>
                                Storage Management
                                {% if storage_data.is_global_admin %}
                                    <span class="ml-2 px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">Global Admin</span>
                                {% else %}
                                    <span class="ml-2 px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full">Branch Admin</span>
                                {% endif %}
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'storage_management'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'storage_management'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Branch File Storage Management</h2>
                                </div>
                                
                                {% if storage_data.is_global_admin %}
                                    <!-- Global Admin View: All Branches -->
                                    <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                        <p class="text-gray-600 mb-4">Manage file storage limits and monitor usage across all branches in the system.</p>
                                        
                                        <!-- Quick Stats -->
                                        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                                            <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-building text-blue-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-blue-800">Total Branches</p>
                                                        <p class="text-2xl font-bold text-blue-900">{{ storage_data.branches|length }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-green-50 p-4 rounded-lg border border-green-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-check-circle text-green-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-green-800">Normal Usage</p>
                                                        <p class="text-2xl font-bold text-green-900">
                                                            {{ storage_data.status_counts.normal|default:0 }}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-yellow-50 p-4 rounded-lg border border-yellow-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-exclamation-triangle text-yellow-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-yellow-800">Warning</p>
                                                        <p class="text-2xl font-bold text-yellow-900">
                                                            {{ storage_data.status_counts.warning|default:0 }}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-red-50 p-4 rounded-lg border border-red-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-times-circle text-red-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-red-800">Exceeded</p>
                                                        <p class="text-2xl font-bold text-red-900">
                                                            {{ storage_data.status_counts.exceeded|default:0 }}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Branches Table -->
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200">
                                                <thead class="bg-gray-50">
                                                    <tr>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Branch</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Usage</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Limit</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Files</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="bg-white divide-y divide-gray-200">
                                                    {% for branch_data in storage_data.branches %}
                                                    <tr class="hover:bg-gray-50">
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            <div class="flex items-center">
                                                                <div class="ml-4">
                                                                    <div class="text-sm font-medium text-gray-900">{{ branch_data.branch.name }}</div>
                                                                    {% if branch_data.branch.business %}
                                                                    <div class="text-sm text-gray-500">{{ branch_data.branch.business.name }}</div>
                                                                    {% endif %}
                                                                </div>
                                                            </div>
                                                        </td>
                                                        
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            <div class="text-sm text-gray-900">{{ branch_data.current_usage_display }}</div>
                                                            <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                                                                <div class="h-2 rounded-full transition-all duration-300 {% if branch_data.usage_percentage >= 100 %}bg-red-500{% elif branch_data.usage_percentage >= 80 %}bg-yellow-500{% else %}bg-green-500{% endif %}" style="width: {% if branch_data.usage_percentage > 100 %}100{% else %}{{ branch_data.usage_percentage|floatformat:0 }}{% endif %}%"></div>
                                                            </div>
                                                            <div class="text-xs text-gray-500 mt-1">{{ branch_data.usage_percentage|floatformat:1 }}%</div>
                                                        </td>
                                                        
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                                            {{ branch_data.limit_display }}
                                                        </td>
                                                        
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                                            {{ branch_data.file_count|floatformat:0 }}
                                                        </td>
                                                        
                                                        <td class="px-6 py-4 whitespace-nowrap">
                                                            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full {% if branch_data.status == 'exceeded' %}bg-red-100 text-red-800{% elif branch_data.status == 'warning' %}bg-yellow-100 text-yellow-800{% else %}bg-green-100 text-green-800{% endif %}">
                                                                {% if branch_data.status == 'exceeded' %}Exceeded{% elif branch_data.status == 'warning' %}Warning{% else %}Normal{% endif %}
                                                            </span>
                                                        </td>
                                                        
                                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                                            <button onclick="openStorageModal({{ branch_data.branch.id }}, '{{ branch_data.branch.name }}')" class="text-blue-600 hover:text-blue-900">
                                                                <i class="fas fa-edit"></i> Manage
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    {% empty %}
                                                    <tr>
                                                        <td colspan="6" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                                                            No branches found.
                                                        </td>
                                                    </tr>
                                                    {% endfor %}
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                
                                {% else %}
                                    <!-- Branch Admin View: Single Branch -->
                                    <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                        <div class="flex items-center justify-between mb-4">
                                            <h3 class="text-lg font-medium text-gray-900">{{ storage_data.branch.name }} Storage Usage</h3>
                                            <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full {% if storage_data.usage_percentage >= 100 %}bg-red-100 text-red-800{% elif storage_data.usage_percentage >= 80 %}bg-yellow-100 text-yellow-800{% else %}bg-green-100 text-green-800{% endif %}">
                                                {{ storage_data.usage_percentage|floatformat:1 }}% Used
                                            </span>
                                        </div>
                                        
                                        <!-- Usage Overview -->
                                        {% if not storage_data.is_unlimited %}
                                        {% if storage_data.usage_percentage >= 100 %}
                                        <div class="mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-times-circle text-red-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-red-800">Storage Limit Exceeded</h3>
                                                    <div class="mt-2 text-sm text-red-700">
                                                        <p>Your branch has exceeded its storage limit. New uploads may be blocked. Contact your administrator to increase the limit.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {% elif storage_data.usage_percentage >= 75 %}
                                        <div class="mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-exclamation-triangle text-yellow-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-yellow-800">High Usage Warning</h3>
                                                    <div class="mt-2 text-sm text-yellow-700">
                                                        <p>Your branch has used over 75% of its storage allowance.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <div class="mb-6">
                                            <div class="flex justify-between text-sm font-medium text-gray-700 mb-1">
                                                <span>Storage Usage</span>
                                                <span>{{ storage_data.usage_percentage|floatformat:1 }}%</span>
                                            </div>
                                            <div class="w-full bg-gray-200 rounded-full h-3">
                                                <div class="h-3 rounded-full transition-all duration-300 {% if storage_data.usage_percentage >= 100 %}bg-red-500{% elif storage_data.usage_percentage >= 80 %}bg-yellow-500{% else %}bg-green-500{% endif %}" style="width: {% if storage_data.usage_percentage > 100 %}100{% else %}{{ storage_data.usage_percentage|floatformat:0 }}{% endif %}%"></div>
                                            </div>
                                            <div class="flex justify-between text-xs text-gray-500 mt-1">
                                                <span>{{ storage_data.current_usage_display }} used</span>
                                                <span>{{ storage_data.limit_display }} limit</span>
                                            </div>
                                        </div>
                                        
                                        {% else %}
                                        <div class="mb-4 p-4 bg-gray-50 border border-gray-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-infinity text-gray-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-gray-800">Unlimited Storage</h3>
                                                    <div class="mt-2 text-sm text-gray-700">
                                                        <p>Your branch has unlimited storage enabled.</p>
                                                        <p class="mt-1"><strong>Current Usage:</strong> {{ storage_data.current_usage_display }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <!-- Storage Stats -->
                                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                                            <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-file text-blue-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-blue-800">Total Files</p>
                                                        <p class="text-2xl font-bold text-blue-900">{{ storage_data.file_count|floatformat:0 }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-green-50 p-4 rounded-lg border border-green-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-cloud-upload-alt text-green-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-green-800">Used Space</p>
                                                        <p class="text-2xl font-bold text-green-900">{{ storage_data.current_usage_display }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="bg-purple-50 p-4 rounded-lg border border-purple-200">
                                                <div class="flex items-center">
                                                    <div class="flex-shrink-0">
                                                        <i class="fas fa-hdd text-purple-600"></i>
                                                    </div>
                                                    <div class="ml-3">
                                                        <p class="text-sm font-medium text-purple-800">Available</p>
                                                        <p class="text-2xl font-bold text-purple-900">{{ storage_data.remaining_display }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Top Uploaders -->
                                        {% if storage_data.top_uploaders %}
                                        <div class="mb-6">
                                            <h3 class="text-lg font-medium text-gray-900 mb-4">Top Uploaders</h3>
                                            <div class="bg-gray-50 rounded-lg overflow-hidden">
                                                <table class="min-w-full divide-y divide-gray-200">
                                                    <thead class="bg-gray-50">
                                                        <tr>
                                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Storage Used</th>
                                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Files</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody class="bg-white divide-y divide-gray-200">
                                                        {% for uploader in storage_data.top_uploaders %}
                                                        <tr>
                                                            <td class="px-6 py-4 whitespace-nowrap">
                                                                <div class="text-sm font-medium text-gray-900">
                                                                    {% if uploader.user__first_name or uploader.user__last_name %}
                                                                        {{ uploader.user__first_name }} {{ uploader.user__last_name }}
                                                                    {% else %}
                                                                        {{ uploader.user__username }}
                                                                    {% endif %}
                                                                </div>
                                                                <div class="text-sm text-gray-500">{{ uploader.user__username }}</div>
                                                            </td>
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                                                {% if uploader.total_bytes >= 1073741824 %}
                                                                    {{ uploader.total_bytes|filesizeformat }}
                                                                {% elif uploader.total_bytes >= 1048576 %}
                                                                    {{ uploader.total_bytes|filesizeformat }}
                                                                {% else %}
                                                                    {{ uploader.total_bytes|filesizeformat }}
                                                                {% endif %}
                                                            </td>
                                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{{ uploader.file_count|floatformat:0 }}</td>
                                                        </tr>
                                                        {% endfor %}
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <!-- Recent Uploads -->
                                        {% if storage_data.recent_uploads %}
                                        <div class="mb-6">
                                            <h3 class="text-lg font-medium text-gray-900 mb-4">Recent Uploads</h3>
                                            <div class="space-y-3">
                                                {% for upload in storage_data.recent_uploads %}
                                                <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            <i class="fas fa-file text-gray-500"></i>
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-900">{{ upload.original_filename|truncatechars:40 }}</p>
                                                            <p class="text-sm text-gray-500">{{ upload.user.get_full_name|default:upload.user.username }} - {{ upload.source_app|title }}</p>
                                                        </div>
                                                    </div>
                                                    <div class="text-right">
                                                        <p class="text-sm font-medium text-gray-900">{{ upload.get_file_size_display }}</p>
                                                        <p class="text-sm text-gray-500">{{ upload.created_at|timesince }} ago</p>
                                                    </div>
                                                </div>
                                                {% endfor %}
                                            </div>
                                        </div>
                                        {% endif %}
                                        
                                        <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i class="fas fa-info-circle text-blue-600"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <h3 class="text-sm font-medium text-blue-800">Branch Admin View</h3>
                                                    <div class="mt-2 text-sm text-blue-700">
                                                        <p>This shows storage usage for your branch only. Storage limits are managed by Global Administrators. Contact them if you need limit adjustments.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                        {% endif %}
                    {% endif %}
                    
                    <!-- Email Configuration Section -->

                    





                    <!-- Branch Settings Section (Super Admin and Global Admin only) -->
                    {% if is_superadmin or is_globaladmin %}
                    <div class="accordion-section" data-section-id="branches">
                        <div @click="toggleSection('branches')" class="accordion-header">
                            <h3 class="flex items-center">
                                <i class="fas fa-code-branch text-green-600 mr-3"></i>
                                Branch Settings
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'branches'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'branches'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Branch Settings</h2>
                                </div>
                                
                                
                                <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                    <p class="text-gray-600 mb-4">Manage branch settings and user limits for all branches in the system.</p>
                                    
                                    <!-- Branch List -->
                                    <div class="mt-6">
                                        <h3 class="text-lg font-semibold text-gray-800 mb-4">Branch User Limits</h3>
                                        
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200">
                                                <thead class="bg-gray-50">
                                                    <tr>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Branch Name</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total Users</th>
                                                        <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Edit Limits</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="bg-white divide-y divide-gray-200">
                                                    <!-- Branches data will be loaded via AJAX -->
                                                    <tr>
                                                        <td colspan="3" class="px-6 py-4 text-center text-sm text-gray-500">Loading branches data...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                

                                
                                <!-- Edit Branch Limits Modal -->
                                <div id="editBranchLimitsModal" class="fixed inset-0 z-50 hidden overflow-y-auto modal" aria-modal="true" role="dialog" style="display:none;">
                                    <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
                                        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
                                        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
                                        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                                            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                                                <div class="sm:flex sm:items-start">
                                                    <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                                                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="editBranchLimitsTitle">
                                                            Edit Branch User Limit
                                                        </h3>
                                                        <p class="text-sm text-gray-600 mt-1" id="branchNameDisplay">
                                                            <!-- Branch name will be inserted here -->
                                                        </p>
                                                        <div class="mt-2">
                                                            <form id="branchLimitsForm" class="space-y-4">
                                                                {% csrf_token %}
                                                                <input type="hidden" id="branchIdInput" name="branch_id" value="">
                                                                
                                                                <div>
                                                                    <label for="totalLimitInput" class="block text-sm font-medium text-gray-700">Total User Limit</label>
                                                                    <input type="number" name="total_limit" id="totalLimitInput" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" min="1" value="100">
                                                                    <p class="mt-1 text-xs text-gray-500" id="totalCurrentUsage"><!-- Current usage will be displayed here --></p>
                                                                    <p class="mt-2 text-xs text-gray-600">
                                                                        This limit applies to all users in this branch (admins, instructors, and learners combined).
                                                                    </p>
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                                                <button type="button" id="saveBranchLimits" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                                    Save
                                                </button>
                                                <button type="button" id="cancelEditLimits" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:w-auto sm:text-sm">
                                                    Cancel
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- PropelUp Integration section removed -->
                            </div>
                        </div>
                    </div>
                    {% endif %}

                    <!-- Business Settings Section (Global Admin only) -->
                    {% if is_globaladmin %}
                    <div class="accordion-section" data-section-id="business">
                        <div @click="toggleSection('business')" class="accordion-header">
                            <h3 class="flex items-center">
                                <i class="fas fa-building text-orange-600 mr-3"></i>
                                Business Settings
                            </h3>
                            <svg :class="{'rotate-180': activeSection === 'business'}" class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                        <div x-show="activeSection === 'business'" x-transition class="accordion-content">
                            <div class="space-y-6">
                                <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-bold text-gray-900">Business Settings</h2>
                                </div>
                                
                                <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200 p-6">
                                    <p class="text-gray-600 mb-4">Configure user and branch creation limits for each business in the system.</p>
                                    
                                    <!-- Business List -->
                                    <div class="mt-6">
                                        <h3 class="text-lg font-semibold text-gray-800 mb-4">Business Limits</h3>
                                        
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200">
                                                <thead class="bg-gray-50">
                                                    <tr>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Business Name</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Current Usage</th>
                                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Limits</th>
                                                        <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="bg-white divide-y divide-gray-200">
                                                    <!-- Business data will be loaded via AJAX -->
                                                    <tr>
                                                        <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">Loading business data...</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Edit Business Limits Modal -->
                                <div id="editBusinessLimitsModal" class="fixed inset-0 z-50 hidden overflow-y-auto modal" aria-modal="true" role="dialog" style="display:none;">
                                    <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
                                        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
                                        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
                                        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                                            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                                                <div class="sm:flex sm:items-start">
                                                    <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                                                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="editBusinessLimitsTitle">
                                                            Edit Business Limits
                                                        </h3>
                                                        <p class="text-sm text-gray-600 mt-1" id="businessNameDisplay">
                                                            <!-- Business name will be inserted here -->
                                                        </p>
                                                        <div class="mt-2">
                                                            <form id="businessLimitsForm" class="space-y-4">
                                                                {% csrf_token %}
                                                                <input type="hidden" id="businessIdInput" name="business_id" value="">
                                                                
                                                                <div>
                                                                    <label for="totalUserLimitInput" class="block text-sm font-medium text-gray-700">Total User Limit</label>
                                                                    <input type="number" name="total_user_limit" id="totalUserLimitInput" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" min="1" value="500">
                                                                    <p class="mt-1 text-xs text-gray-500" id="totalUserCurrentUsage"><!-- Current usage will be displayed here --></p>
                                                                </div>
                                                                
                                                                <div>
                                                                    <label for="branchCreationLimitInput" class="block text-sm font-medium text-gray-700">Branch Creation Limit</label>
                                                                    <input type="number" name="branch_creation_limit" id="branchCreationLimitInput" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" min="1" value="10">
                                                                    <p class="mt-1 text-xs text-gray-500" id="branchCreationCurrentUsage"><!-- Current usage will be displayed here --></p>
                                                                </div>
                                                                
                                                                <p class="mt-2 text-xs text-gray-600">
                                                                    These limits apply to the total number of users and branches across all branches in this business.
                                                                </p>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                                                <button type="button" id="saveBusinessLimits" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                                    Save
                                                </button>
                                                <button type="button" id="cancelEditBusinessLimits" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:w-auto sm:text-sm">
                                                    Cancel
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Storage Management Modal -->
                    <div id="storageManagementModal" class="fixed inset-0 z-50 hidden overflow-y-auto modal" aria-modal="true" role="dialog" style="display:none;">
                        <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
                            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
                            <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
                            <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full">
                                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                                    <div class="sm:flex sm:items-start">
                                        <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                                            <h3 class="text-lg leading-6 font-medium text-gray-900" id="storageModalTitle">
                                                <i class="fas fa-hdd text-blue-600 mr-2"></i>
                                                Storage Management
                                            </h3>
                                            <p class="text-sm text-gray-600 mt-1" id="storageBranchName">
                                                <!-- Branch name will be inserted here -->
                                            </p>

                                            <!-- Current Storage Overview -->
                                            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mt-4 mb-6">
                                                <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            <i class="fas fa-database text-gray-600"></i>
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-800">Current Usage</p>
                                                            <p class="text-lg font-bold text-gray-900" id="currentUsageDisplay">Loading...</p>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            <i class="fas fa-server text-gray-600"></i>
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-800">Storage Limit</p>
                                                            <p class="text-lg font-bold text-gray-900" id="limitDisplay">Loading...</p>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            <i class="fas fa-percentage text-gray-600"></i>
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-800">Usage</p>
                                                            <p class="text-lg font-bold text-gray-900" id="usagePercentageDisplay">Loading...</p>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0">
                                                            <i class="fas fa-file text-gray-600"></i>
                                                        </div>
                                                        <div class="ml-3">
                                                            <p class="text-sm font-medium text-gray-800">Total Files</p>
                                                            <p class="text-lg font-bold text-gray-900" id="fileCountDisplay">Loading...</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="mt-2">
                                                <form id="storageManagementForm" class="space-y-4">
                                                    {% csrf_token %}
                                                    <input type="hidden" id="storageBranchId" name="branch_id" value="">

                                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                                        <!-- Storage Settings -->
                                                        <div class="bg-gray-50 p-4 rounded-lg">
                                                            <h4 class="text-md font-medium text-gray-900 mb-3">Storage Settings</h4>

                                                            <div class="mb-4">
                                                                <label class="inline-flex items-center">
                                                                    <input type="checkbox" id="unlimitedStorageCheckbox" name="is_unlimited" onchange="handleUnlimitedChange()" class="form-checkbox h-4 w-4 text-blue-600">
                                                                    <span class="ml-2 text-sm text-gray-700">Unlimited Storage</span>
                                                                </label>
                                                            </div>

                                                            <div id="storageLimitSection">
                                                                <label for="storageLimitInput" class="block text-sm font-medium text-gray-700">Storage Limit (GB)</label>
                                                                <input type="number" id="storageLimitInput" name="storage_limit" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" min="1" step="0.1" placeholder="Enter storage limit in GB">
                                                                <p class="mt-1 text-xs text-gray-500">Set the maximum storage limit for this branch</p>
                                                            </div>

                                                            <div class="mt-4">
                                                                <label for="warningThresholdInput" class="block text-sm font-medium text-gray-700">Warning Threshold (%)</label>
                                                                <input type="number" id="warningThresholdInput" name="warning_threshold" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" min="1" max="100" value="80">
                                                                <p class="mt-1 text-xs text-gray-500">Warning notification will be sent when usage exceeds this percentage</p>
                                                            </div>
                                                        </div>

                                                        <!-- Recent Uploads -->
                                                        <div class="bg-gray-50 p-4 rounded-lg">
                                                            <h4 class="text-md font-medium text-gray-900 mb-3">Recent Uploads</h4>

                                                            <div class="overflow-x-auto max-h-60">
                                                                <table class="min-w-full divide-y divide-gray-200">
                                                                    <thead class="bg-gray-100">
                                                                        <tr>
                                                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">File</th>
                                                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Size</th>
                                                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Source</th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="recentUploadsTableBody" class="bg-white divide-y divide-gray-200">
                                                                        <tr>
                                                                            <td colspan="5" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                                                                                Loading recent uploads...
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                                    <button type="button" id="saveStorageSettings" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                        Save Changes
                                    </button>
                                    <button type="button" id="cancelStorageManagement" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:w-auto sm:text-sm">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- AI Token Management Modal -->
                    <div id="aiTokenManagementModal" class="fixed inset-0 z-50 hidden overflow-y-auto modal" aria-modal="true" role="dialog" style="display:none;">
                        <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
                            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
                            <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
                            <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full">
                                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                                    <div class="sm:flex sm:items-start">
                                        <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                                            <h3 class="text-lg leading-6 font-medium text-gray-900" id="aiTokenModalTitle">
                                                <i class="fas fa-robot text-purple-600 mr-2"></i>
                                                AI Token Management
                                            </h3>
                                            <p class="text-sm text-gray-600 mt-1" id="aiTokenBranchNameDisplay">
                                                <!-- Branch name will be inserted here -->
                                            </p>
                                            
                                            <!-- Loading State -->
                                            <div id="aiTokenLoadingState" class="mt-4">
                                                <div class="flex items-center justify-center py-8">
                                                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600"></div>
                                                    <span class="ml-3 text-sm text-gray-600">Loading token data...</span>
                                                </div>
                                            </div>
                                            
                                            <!-- Token Management Content -->
                                            <div id="aiTokenModalContent" class="mt-4 hidden">
                                                <!-- Current Statistics -->
                                                <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                                                    <div class="bg-blue-50 p-4 rounded-lg border border-blue-200">
                                                        <div class="flex items-center">
                                                            <div class="flex-shrink-0">
                                                                <i class="fas fa-chart-bar text-blue-600"></i>
                                                            </div>
                                                            <div class="ml-3">
                                                                <p class="text-sm font-medium text-blue-800">Tokens Used</p>
                                                                <p class="text-lg font-bold text-blue-900" id="aiTokenCurrentUsage">0</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="bg-green-50 p-4 rounded-lg border border-green-200">
                                                        <div class="flex items-center">
                                                            <div class="flex-shrink-0">
                                                                <i class="fas fa-target text-green-600"></i>
                                                            </div>
                                                            <div class="ml-3">
                                                                <p class="text-sm font-medium text-green-800">Monthly Limit</p>
                                                                <p class="text-lg font-bold text-green-900" id="aiTokenMonthlyLimit">0</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="bg-yellow-50 p-4 rounded-lg border border-yellow-200">
                                                        <div class="flex items-center">
                                                            <div class="flex-shrink-0">
                                                                <i class="fas fa-clock text-yellow-600"></i>
                                                            </div>
                                                            <div class="ml-3">
                                                                <p class="text-sm font-medium text-yellow-800">Remaining</p>
                                                                <p class="text-lg font-bold text-yellow-900" id="aiTokenRemaining">0</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="bg-purple-50 p-4 rounded-lg border border-purple-200">
                                                        <div class="flex items-center">
                                                            <div class="flex-shrink-0">
                                                                <i class="fas fa-users text-purple-600"></i>
                                                            </div>
                                                            <div class="ml-3">
                                                                <p class="text-sm font-medium text-purple-800">Active Users</p>
                                                                <p class="text-lg font-bold text-purple-900" id="aiTokenActiveUsers">0</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <!-- Usage Progress Bar -->
                                                <div class="mb-6" id="aiTokenProgressContainer">
                                                    <h4 class="text-md font-semibold text-gray-800 mb-2">Monthly Usage Progress</h4>
                                                    <div class="bg-gray-200 rounded-full h-3 mb-2">
                                                        <div id="aiTokenProgressBar" class="bg-blue-600 h-3 rounded-full transition-all duration-300" style="width: 0%"></div>
                                                    </div>
                                                    <p class="text-sm text-gray-600" id="aiTokenUsageText">0% of monthly limit used</p>
                                                </div>
                                                
                                                <!-- Configuration Form -->
                                                <div class="bg-gray-50 p-4 rounded-lg mb-6">
                                                    <h4 class="text-md font-semibold text-gray-800 mb-3">Configure Token Limits</h4>
                                                    <form id="aiTokenConfigForm" class="space-y-4">
                                                        <input type="hidden" id="aiTokenBranchId" name="branch_id" value="">
                                                        
                                                        <div class="flex items-center mb-3">
                                                            <input type="checkbox" id="aiTokenUnlimited" name="is_unlimited" class="rounded border-gray-300 text-purple-600 focus:ring-purple-500">
                                                            <label for="aiTokenUnlimited" class="ml-2 text-sm font-medium text-gray-700">
                                                                Enable unlimited AI token usage
                                                            </label>
                                                        </div>
                                                        
                                                        <div id="aiTokenLimitGroup">
                                                            <label for="aiTokenMonthlyLimitInput" class="block text-sm font-medium text-gray-700">Monthly Token Limit</label>
                                                            <input type="number" id="aiTokenMonthlyLimitInput" name="monthly_token_limit" 
                                                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-purple-500 focus:border-purple-500 sm:text-sm" 
                                                                   min="1" value="10000">
                                                            <p class="mt-1 text-xs text-gray-500">
                                                                Set the maximum number of AI tokens this branch can use per month.
                                                            </p>
                                                        </div>
                                                    </form>
                                                </div>
                                                
                                                <!-- Recent Usage -->
                                                <div class="mb-4">
                                                    <h4 class="text-md font-semibold text-gray-800 mb-3">Recent Usage Activity</h4>
                                                    <div id="aiTokenRecentUsage" class="max-h-48 overflow-y-auto bg-gray-50 rounded-lg p-3">
                                                        <!-- Recent usage will be loaded here -->
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                                    <button type="button" id="saveAITokenLimits" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:ml-3 sm:w-auto sm:text-sm bg-purple-600 hover:bg-purple-700">
                                        Save Changes
                                    </button>
                                    <button type="button" id="cancelAITokenModal" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:w-auto sm:text-sm">
                                        Cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endif %}



                    <!-- Data Management Section (Global Admin only) -->
    {% if is_globaladmin %}
    <div class="accordion-section" data-section-id="data_management">
        <div class="accordion-header" @click="toggleSection('data_management')" :class="{ 'border-blue-500': activeSection === 'data_management' }">
            <h3 class="flex items-center">
                <i class="fas fa-database text-blue-600 mr-3"></i>
                Data Management
            </h3>
            <svg class="w-5 h-5 transform transition-transform duration-300" :class="{ 'rotate-180': activeSection === 'data_management' }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </div>
        
        <div x-show="activeSection === 'data_management'" x-transition class="accordion-content">
            <div class="bg-white p-6">
                <div class="mb-6">
                    <p class="text-gray-600">Export and import LMS data including users, courses, topics, assignments, quizzes, and related files.</p>
                </div>

                <!-- Export Section -->
                <div class="mb-8">
                    <h4 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <i class="fas fa-download text-green-600 mr-2"></i>
                        Export Data
                    </h4>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <div>
                            <label for="export_type" class="block text-sm font-medium text-gray-700 mb-2">Data Type</label>
                            <select id="export_type" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                <option value="users">Users</option>
                                <option value="courses">Courses</option>
                                <option value="topics">Topics</option>
                                <option value="assignments">Assignments</option>
                                <option value="quizzes">Quizzes</option>
                                <option value="discussions">Discussions</option>
                                <option value="conferences">Conferences</option>
                                <option value="all">All Data</option>
                            </select>
                        </div>
                        <div class="flex items-end">
                            <label class="flex items-center space-x-2">
                                <input type="checkbox" id="include_files" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                <span class="text-sm text-gray-700">Include uploaded files</span>
                            </label>
                        </div>
                    </div>
                    
                    <button onclick="startExport()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md font-medium">
                        <i class="fas fa-download mr-2"></i>Start Export
                    </button>
                </div>

                <!-- Import Section -->
                <div class="mb-8">
                    <h4 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <i class="fas fa-upload text-blue-600 mr-2"></i>
                        Import Data
                    </h4>
                    
                    <form id="importForm" enctype="multipart/form-data">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                            <div>
                                <label for="import_type" class="block text-sm font-medium text-gray-700 mb-2">Data Type</label>
                                <select id="import_type" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                    <option value="users">Users</option>
                                    <option value="courses">Courses</option>
                                    <option value="topics">Topics</option>
                                    <option value="assignments">Assignments</option>
                                    <option value="quizzes">Quizzes</option>
                                    <option value="discussions">Discussions</option>
                                    <option value="conferences">Conferences</option>
                                </select>
                            </div>
                            <div class="flex items-end">
                                <label class="flex items-center space-x-2">
                                    <input type="checkbox" id="replace_existing" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                    <span class="text-sm text-gray-700">Replace existing records</span>
                                </label>
                            </div>
                        </div>
                        
                        <div class="mb-4">
                            <label for="import_file" class="block text-sm font-medium text-gray-700 mb-2">Import File (ZIP)</label>
                            <input type="file" id="import_file" accept=".zip" class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100">
                        </div>
                        
                        <button type="button" onclick="startImport()" class="text-white px-4 py-2 rounded-md font-medium" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                            <i class="fas fa-upload mr-2"></i>Start Import
                        </button>
                    </form>
                </div>

                <!-- Job Status Section -->
                <div class="mb-8">
                    <h4 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <i class="fas fa-tasks text-purple-600 mr-2"></i>
                        Recent Jobs
                    </h4>
                    
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <!-- Export Jobs -->
                        <div>
                            <h5 class="text-md font-medium text-gray-800 mb-3">Export Jobs</h5>
                            <div id="export_jobs" class="space-y-2 max-h-60 overflow-y-auto">
                                <!-- Jobs will be loaded here -->
                            </div>
                        </div>
                        
                        <!-- Import Jobs -->
                        <div>
                            <h5 class="text-md font-medium text-gray-800 mb-3">Import Jobs</h5>
                            <div id="import_jobs" class="space-y-2 max-h-60 overflow-y-auto">
                                <!-- Jobs will be loaded here -->
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Backup Section -->
                <div class="border-t pt-6">
                    <h4 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <i class="fas fa-shield-alt text-orange-600 mr-2"></i>
                        System Backup
                    </h4>
                    
                    <!-- Create Backup -->
                    <div class="mb-6">
                        <h5 class="text-md font-medium text-gray-800 mb-3">Create New Backup</h5>
                        <div class="mb-4">
                            <label for="backup_description" class="block text-sm font-medium text-gray-700 mb-2">Backup Description</label>
                            <input type="text" id="backup_description" placeholder="Enter backup description..." class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        
                        <button onclick="createBackup()" class="bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 rounded-md font-medium">
                            <i class="fas fa-shield-alt mr-2"></i>Create Full Backup
                        </button>
                        
                        <div class="mt-4 text-sm text-gray-600">
                            <p><i class="fas fa-info-circle mr-1"></i> This will create a complete backup of all system data and files.</p>
                        </div>
                    </div>
                    
                    <!-- Existing Backups -->
                    <div class="border-t pt-4">
                        <h5 class="text-md font-medium text-gray-800 mb-3">Existing Backups</h5>
                        <div id="backup_list" class="space-y-2 max-h-60 overflow-y-auto">
                            <!-- Backups will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {% endif %}


    <!-- Global Admin Settings Section (Global Admin only) -->
    {% if is_globaladmin %}
    
    <!-- SharePoint System Configuration Section -->
    <div class="accordion-section" data-section-id="sharepoint_system">
        <div class="accordion-header" @click="toggleSection('sharepoint_system')" :class="{ 'border-blue-500': activeSection === 'sharepoint_system' }">
            <h3 class="flex items-center">
                <i class="fab fa-microsoft text-blue-600 mr-3"></i>
                SharePoint System Configuration
            </h3>
            <svg class="w-5 h-5 transform transition-transform duration-300" :class="{ 'rotate-180': activeSection === 'sharepoint_system' }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </div>
        
        <div x-show="activeSection === 'sharepoint_system'" x-transition class="accordion-content">
            <div class="bg-white p-6">
                <div class="mb-6">
                    <h2 class="text-xl font-bold text-gray-900">SharePoint System Configuration</h2>
                    <p class="text-gray-600">Configure SharePoint integration system-wide and manage branch-level access.</p>
                </div>

                <form action="{% url 'account_settings:settings' %}" method="post">
                    {% csrf_token %}
                    <input type="hidden" name="form_type" value="sharepoint_system_settings">
                    
                    <div class="space-y-6">
                        <!-- SharePoint Global Enable/Disable -->
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-info-circle text-blue-500 mt-1"></i>
                                </div>
                                <div class="ml-3 flex-1">
                                    <h4 class="text-sm font-medium text-blue-800">SharePoint Integration Control</h4>
                                    <p class="mt-1 text-sm text-blue-700">
                                        Enable or disable SharePoint integration system-wide. When disabled, all existing integrations will be deactivated.
                                    </p>
                                    <div class="mt-3">
                                        <label class="flex items-center space-x-2">
                                            <input type="checkbox" name="sharepoint_integration_enabled" 
                                                   {% if global_admin_settings.sharepoint_integration_enabled %}checked{% endif %}
                                                   class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                                            <span class="text-sm font-medium text-blue-800">Enable SharePoint Integration System-Wide</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Branch Management -->
                        <div class="border-t pt-4">
                            <h4 class="text-md font-medium text-gray-800 mb-3">Branch SharePoint Access</h4>
                            <p class="text-sm text-gray-600 mb-4">Manage which branches have access to SharePoint integration.</p>
                            
                            <!-- Search and Filter Controls -->
                            <div class="mb-6 space-y-3">
                                <div class="flex flex-col sm:flex-row gap-3">
                                    <div class="flex-1">
                                        <label for="business-search" class="sr-only">Search businesses and branches</label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <i class="fas fa-search text-gray-400"></i>
                                            </div>
                                            <input type="text" id="business-search" 
                                                   class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
                                                   placeholder="Search businesses or branches..." 
                                                   oninput="filterBusinesses(this.value)">
                                        </div>
                                    </div>
                                    <div class="flex gap-2">
                                        <button type="button" onclick="toggleAllBusinesses(true)" 
                                                class="px-3 py-2 text-sm font-medium text-blue-700 bg-blue-100 border border-blue-300 rounded-md hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                            <i class="fas fa-chevron-down mr-1"></i>
                                            Expand All
                                        </button>
                                        <button type="button" onclick="toggleAllBusinesses(false)" 
                                                class="px-3 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500">
                                            <i class="fas fa-chevron-up mr-1"></i>
                                            Collapse All
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Quick Actions -->
                                <div class="flex flex-wrap gap-2">
                                    <button type="button" onclick="toggleAllSharePoint(true)" 
                                            class="px-3 py-1.5 text-xs font-medium text-green-700 bg-green-100 border border-green-300 rounded-md hover:bg-green-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                        <i class="fas fa-check-circle mr-1"></i>
                                        Enable All SharePoint
                                    </button>
                                    <button type="button" onclick="toggleAllSharePoint(false)" 
                                            class="px-3 py-1.5 text-xs font-medium text-red-700 bg-red-100 border border-red-300 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                        <i class="fas fa-times-circle mr-1"></i>
                                        Disable All SharePoint
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Business-wise Branch Grouping -->
                            <div class="space-y-4" id="business-groups">
                                {% if businesses_with_branches %}
                                    {% for business_group in businesses_with_branches %}
                                    <div class="business-group border border-gray-200 rounded-lg" data-business-name="{{ business_group.business.name|default:'No Business' }}">
                                        <!-- Business Header -->
                                        <div class="business-header bg-gray-50 px-4 py-3 border-b border-gray-200 cursor-pointer" 
                                             onclick="toggleBusinessGroup('{{ forloop.counter0 }}')">
                                            <div class="flex items-center justify-between">
                                                <div class="flex items-center space-x-3">
                                                    <i class="fas fa-building text-gray-600"></i>
                                                    <div>
                                                        <h5 class="font-medium text-gray-900">
                                                            {% if business_group.business %}
                                                                {{ business_group.business.name }}
                                                            {% else %}
                                                                No Business Assigned
                                                            {% endif %}
                                                        </h5>
                                                        <p class="text-sm text-gray-500">
                                                            {{ business_group.branches|length }} branch{{ business_group.branches|length|pluralize:"es" }}
                                                        </p>
                                                    </div>
                                                </div>
                                                <div class="flex items-center space-x-3">
                                                    <!-- Business-level toggle -->
                                                    <label class="flex items-center space-x-2" onclick="event.stopPropagation()">
                                                        <input type="checkbox" 
                                                               class="business-toggle rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50" 
                                                               onchange="toggleBusinessSharePoint('{{ forloop.counter0 }}', this.checked)">
                                                        <span class="text-sm text-gray-700">Toggle All</span>
                                                    </label>
                                                    <i class="fas fa-chevron-down text-gray-400 transform transition-transform duration-200 business-chevron-{{ forloop.counter0 }}"></i>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Branches List -->
                                        <div class="business-branches-{{ forloop.counter0 }} hidden">
                                            <div class="p-4 space-y-3">
                                                {% for branch_data in business_group.branches %}
                                                <div class="branch-item flex items-center justify-between p-3 bg-white border border-gray-100 rounded-md hover:bg-gray-50" 
                                                     data-branch-name="{{ branch_data.branch.name }}">
                                                    <div class="flex items-center space-x-3">
                                                        <i class="fas fa-code-branch text-gray-400"></i>
                                                        <div>
                                                            <p class="font-medium text-gray-900">{{ branch_data.branch.name }}</p>
                                                            <p class="text-sm text-gray-500">
                                                                <span class="inline-flex items-center">
                                                                    <i class="fas fa-users mr-1"></i>
                                                                    {{ branch_data.usage_data.total.current }} users
                                                                </span>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <div class="flex items-center space-x-2">
                                                        <label class="flex items-center space-x-2">
                                                            <input type="checkbox" 
                                                                   name="branch_sharepoint_{{ branch_data.branch.id }}" 
                                                                   class="branch-sharepoint-checkbox rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                                                   {% if branch_data.branch.sharepoint_integration_enabled %}checked{% endif %}
                                                                   onchange="updateBusinessToggle('{{ forloop.parentloop.counter0 }}')">
                                                            <span class="text-sm text-gray-700">Enable SharePoint</span>
                                                        </label>
                                                    </div>
                                                </div>
                                                {% endfor %}
                                            </div>
                                        </div>
                                    </div>
                                    {% endfor %}
                                {% else %}
                                    <!-- Fallback to flat branch list if no business grouping available -->
                                    <div class="space-y-3">
                                        {% for branch_data in branches %}
                                        <div class="branch-item flex items-center justify-between p-3 border border-gray-200 rounded-lg" 
                                             data-branch-name="{{ branch_data.branch.name }}">
                                            <div class="flex items-center space-x-3">
                                                <i class="fas fa-code-branch text-gray-400"></i>
                                                <div>
                                                    <p class="font-medium text-gray-900">{{ branch_data.branch.name }}</p>
                                                    {% if branch_data.branch.business_name and branch_data.branch.business_name != 'No Business' %}
                                                    <p class="text-sm text-gray-500">{{ branch_data.branch.business_name }}</p>
                                                    {% endif %}
                                                </div>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <label class="flex items-center space-x-2">
                                                    <input type="checkbox" name="branch_sharepoint_{{ branch_data.branch.id }}" 
                                                           class="branch-sharepoint-checkbox rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                                           {% if branch_data.branch.sharepoint_integration_enabled %}checked{% endif %}>
                                                    <span class="text-sm text-gray-700">Enable SharePoint</span>
                                                </label>
                                            </div>
                                        </div>
                                        {% endfor %}
                                    </div>
                                {% endif %}
                                
                                <!-- No Results Message -->
                                <div id="no-results" class="hidden text-center py-8">
                                    <i class="fas fa-search text-gray-400 text-3xl mb-3"></i>
                                    <p class="text-gray-500">No businesses or branches found matching your search.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Save Button -->
                    <div class="mt-6 flex justify-end">
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                            <i class="fas fa-save mr-2"></i>
                            Save SharePoint System Settings
                        </button>
                    </div>
                </form>
                
                <!-- SharePoint System Configuration JavaScript -->
                <script>
                    // Toggle individual business group
                    function toggleBusinessGroup(groupIndex) {
                        const branchesDiv = document.querySelector(`.business-branches-${groupIndex}`);
                        const chevron = document.querySelector(`.business-chevron-${groupIndex}`);
                        
                        if (branchesDiv.classList.contains('hidden')) {
                            branchesDiv.classList.remove('hidden');
                            chevron.classList.add('rotate-180');
                        } else {
                            branchesDiv.classList.add('hidden');
                            chevron.classList.remove('rotate-180');
                        }
                    }
                    
                    // Toggle all businesses (expand/collapse)
                    function toggleAllBusinesses(expand) {
                        const businessGroups = document.querySelectorAll('.business-group');
                        businessGroups.forEach((group, index) => {
                            const branchesDiv = group.querySelector(`.business-branches-${index}`);
                            const chevron = group.querySelector(`.business-chevron-${index}`);
                            
                            if (expand) {
                                branchesDiv.classList.remove('hidden');
                                chevron.classList.add('rotate-180');
                            } else {
                                branchesDiv.classList.add('hidden');
                                chevron.classList.remove('rotate-180');
                            }
                        });
                    }
                    
                    // Toggle SharePoint for all branches in a business
                    function toggleBusinessSharePoint(groupIndex, enabled) {
                        const businessGroup = document.querySelector(`.business-group:nth-child(${parseInt(groupIndex) + 1})`);
                        const checkboxes = businessGroup.querySelectorAll('.branch-sharepoint-checkbox');
                        
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = enabled;
                        });
                    }
                    
                    // Update business toggle state based on branch checkboxes
                    function updateBusinessToggle(groupIndex) {
                        const businessGroup = document.querySelector(`.business-group:nth-child(${parseInt(groupIndex) + 1})`);
                        const businessToggle = businessGroup.querySelector('.business-toggle');
                        const branchCheckboxes = businessGroup.querySelectorAll('.branch-sharepoint-checkbox');
                        
                        const checkedCount = Array.from(branchCheckboxes).filter(cb => cb.checked).length;
                        const totalCount = branchCheckboxes.length;
                        
                        if (checkedCount === 0) {
                            businessToggle.checked = false;
                            businessToggle.indeterminate = false;
                        } else if (checkedCount === totalCount) {
                            businessToggle.checked = true;
                            businessToggle.indeterminate = false;
                        } else {
                            businessToggle.checked = false;
                            businessToggle.indeterminate = true;
                        }
                    }
                    
                    // Toggle all SharePoint checkboxes
                    function toggleAllSharePoint(enabled) {
                        const checkboxes = document.querySelectorAll('.branch-sharepoint-checkbox');
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = enabled;
                        });
                        
                        // Update all business toggles
                        const businessGroups = document.querySelectorAll('.business-group');
                        businessGroups.forEach((group, index) => {
                            updateBusinessToggle(index);
                        });
                    }
                    
                    // Filter businesses and branches
                    function filterBusinesses(searchTerm) {
                        const businessGroups = document.querySelectorAll('.business-group');
                        const noResults = document.getElementById('no-results');
                        let visibleCount = 0;
                        
                        businessGroups.forEach(group => {
                            const businessName = group.getAttribute('data-business-name').toLowerCase();
                            const branchItems = group.querySelectorAll('.branch-item');
                            let hasVisibleBranches = false;
                            
                            // Check if business name matches
                            const businessMatches = businessName.includes(searchTerm.toLowerCase());
                            
                            // Filter branches within this business
                            branchItems.forEach(branchItem => {
                                const branchName = branchItem.getAttribute('data-branch-name').toLowerCase();
                                const branchMatches = branchName.includes(searchTerm.toLowerCase());
                                
                                if (businessMatches || branchMatches || searchTerm === '') {
                                    branchItem.style.display = '';
                                    hasVisibleBranches = true;
                                } else {
                                    branchItem.style.display = 'none';
                                }
                            });
                            
                            // Show/hide business group based on whether it has visible branches
                            if (hasVisibleBranches || businessMatches || searchTerm === '') {
                                group.style.display = '';
                                visibleCount++;
                                
                                // Auto-expand if searching
                                if (searchTerm !== '') {
                                    const branchesDiv = group.querySelector('[class*="business-branches-"]');
                                    const chevron = group.querySelector('[class*="business-chevron-"]');
                                    if (branchesDiv) branchesDiv.classList.remove('hidden');
                                    if (chevron) chevron.classList.add('rotate-180');
                                }
                            } else {
                                group.style.display = 'none';
                            }
                        });
                        
                        // Show/hide no results message
                        if (visibleCount === 0 && searchTerm !== '') {
                            noResults.classList.remove('hidden');
                        } else {
                            noResults.classList.add('hidden');
                        }
                    }
                    
                    // Initialize business toggles on page load
                    document.addEventListener('DOMContentLoaded', function() {
                        const businessGroups = document.querySelectorAll('.business-group');
                        businessGroups.forEach((group, index) => {
                            updateBusinessToggle(index);
                        });
                    });
                </script>
            </div>
        </div>
    </div>
    
    <!-- Order Management Features Control Section -->
    <div class="accordion-section" data-section-id="order_management_system">
        <div class="accordion-header" @click="toggleSection('order_management_system')" :class="{ 'border-blue-500': activeSection === 'order_management_system' }">
            <h3 class="flex items-center">
                <i class="fas fa-shopping-cart text-green-600 mr-3"></i>
                Order Management Features Control
            </h3>
            <svg class="w-5 h-5 transform transition-transform duration-300" :class="{ 'rotate-180': activeSection === 'order_management_system' }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </div>
        
        <div x-show="activeSection === 'order_management_system'" x-transition class="accordion-content">
            <div class="bg-white p-6">
                <div class="mb-6">
                    <h2 class="text-xl font-bold text-gray-900">Order Management Features Control</h2>
                    <p class="text-gray-600">Configure order management features system-wide and manage branch-level access to e-commerce functionality.</p>
                </div>

                <form action="{% url 'account_settings:settings' %}" method="post">
                    {% csrf_token %}
                    <input type="hidden" name="form_type" value="order_management_system_settings">
                    
                    <div class="space-y-6">
                        <!-- Order Management Global Enable/Disable -->
                        <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-info-circle text-green-500 mt-1"></i>
                                </div>
                                <div class="ml-3 flex-1">
                                    <h4 class="text-sm font-medium text-green-800">Order Management Control</h4>
                                    <p class="mt-1 text-sm text-green-700">
                                        Enable or disable order management features system-wide. When enabled, branches can sell courses with pricing, coupons, and checkout functionality.
                                    </p>
                                    <div class="mt-3">
                                        <label class="flex items-center space-x-2">
                                            <input type="checkbox" name="order_management_enabled" 
                                                   {% if global_admin_settings.order_management_enabled %}checked{% endif %}
                                                   class="rounded border-gray-300 text-green-600 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50">
                                            <span class="text-sm font-medium text-green-800">Enable Order Management System-Wide</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Branch Management -->
                        <div class="border-t pt-4">
                            <h4 class="text-md font-medium text-gray-800 mb-3">Branch Order Management Access</h4>
                            <p class="text-sm text-gray-600 mb-4">Manage which branches have access to order management features including course pricing, cart, and checkout.</p>
                            
                            <!-- Search and Filter Controls -->
                            <div class="mb-6 space-y-3">
                                <div class="flex flex-col sm:flex-row gap-3">
                                    <div class="flex-1">
                                        <label for="order-business-search" class="sr-only">Search businesses and branches</label>
                                        <div class="relative">
                                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <i class="fas fa-search text-gray-400"></i>
                                            </div>
                                            <input type="text" id="order-business-search" 
                                                   class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-green-500 focus:border-green-500"
                                                   placeholder="Search businesses or branches..." 
                                                   oninput="filterOrderBusinesses(this.value)">
                                        </div>
                                    </div>
                                    <div class="flex gap-2">
                                        <button type="button" onclick="toggleAllOrderBusinesses(true)" 
                                                class="px-3 py-2 text-sm font-medium text-green-700 bg-green-100 border border-green-300 rounded-md hover:bg-green-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                            <i class="fas fa-chevron-down mr-1"></i>
                                            Expand All
                                        </button>
                                        <button type="button" onclick="toggleAllOrderBusinesses(false)" 
                                                class="px-3 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500">
                                            <i class="fas fa-chevron-up mr-1"></i>
                                            Collapse All
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Quick Actions -->
                                <div class="flex flex-wrap gap-2">
                                    <button type="button" onclick="toggleAllOrderManagement(true)" 
                                            class="px-3 py-1.5 text-xs font-medium text-green-700 bg-green-100 border border-green-300 rounded-md hover:bg-green-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                        <i class="fas fa-check-circle mr-1"></i>
                                        Enable All Order Management
                                    </button>
                                    <button type="button" onclick="toggleAllOrderManagement(false)" 
                                            class="px-3 py-1.5 text-xs font-medium text-red-700 bg-red-100 border border-red-300 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                        <i class="fas fa-times-circle mr-1"></i>
                                        Disable All Order Management
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Business/Branch Listing -->
                            <div class="max-h-96 overflow-y-auto border border-gray-200 rounded-md" id="order-businesses-container">
                                <div class="p-8 text-center text-gray-500" id="order-loading">
                                    <i class="fas fa-spinner fa-spin text-2xl text-gray-400 mb-3"></i>
                                    <p>Loading branches...</p>
                                </div>
                                <div class="p-8 text-center text-gray-500" id="order-no-results" style="display: none;">
                                    <i class="fas fa-search text-3xl text-gray-300 mb-3"></i>
                                    <p>No businesses or branches found matching your search.</p>
                                </div>
                                <div class="p-8 text-center text-red-500" id="order-error" style="display: none;">
                                    <i class="fas fa-exclamation-triangle text-2xl text-red-400 mb-3"></i>
                                    <p id="order-error-message">Error loading branches data.</p>
                                    <button type="button" onclick="loadOrderManagementBranches()" 
                                            class="mt-2 inline-flex items-center px-3 py-1 border border-transparent text-xs font-medium rounded text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                        <i class="fas fa-redo mr-1"></i>
                                        Retry
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Save Button -->
                    <div class="mt-6 pt-4 border-t border-gray-200">
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                            <i class="fas fa-save mr-2"></i>
                            Save Order Management Settings
                        </button>
                    </div>
                </form>
                
                <!-- Order Management System Configuration JavaScript -->
                <script>
                    // Toggle individual business group for order management
                    function toggleOrderBusinessGroup(groupIndex) {
                        const branchesDiv = document.querySelector(`#order-businesses-container .business-branches-${groupIndex}`);
                        const chevron = document.querySelector(`#order-businesses-container .business-chevron-${groupIndex}`);
                        
                        if (branchesDiv && branchesDiv.classList.contains('hidden')) {
                            branchesDiv.classList.remove('hidden');
                            if (chevron) chevron.classList.add('rotate-90');
                        } else if (branchesDiv) {
                            branchesDiv.classList.add('hidden');
                            if (chevron) chevron.classList.remove('rotate-90');
                        }
                    }
                    
                    // Toggle all businesses for order management (expand/collapse)
                    function toggleAllOrderBusinesses(expand) {
                        const businessGroups = document.querySelectorAll('#order-businesses-container .business-group');
                        businessGroups.forEach((group, index) => {
                            const branchesDiv = group.querySelector(`.business-branches-${index}`);
                            const chevron = group.querySelector(`.business-chevron-${index}`);
                            
                            if (branchesDiv) {
                                if (expand) {
                                    branchesDiv.classList.remove('hidden');
                                    if (chevron) chevron.classList.add('rotate-90');
                                } else {
                                    branchesDiv.classList.add('hidden');
                                    if (chevron) chevron.classList.remove('rotate-90');
                                }
                            }
                        });
                    }
                    
                    // Toggle business branches for order management (using nth-child like SharePoint)
                    function toggleOrderBusinessBranches(businessIndex, checked) {
                        const businessGroup = document.querySelector(`#order-businesses-container .business-group:nth-child(${parseInt(businessIndex) + 1})`);
                        if (!businessGroup) {
                            return;
                        }
                        
                        const branchCheckboxes = businessGroup.querySelectorAll('.branch-order-checkbox');
                        branchCheckboxes.forEach(checkbox => {
                            checkbox.checked = checked;
                        });
                    }
                    
                    // Update business toggle state for order management (using nth-child like SharePoint)
                    function updateOrderBusinessToggle(businessIndex) {
                        const businessGroup = document.querySelector(`#order-businesses-container .business-group:nth-child(${parseInt(businessIndex) + 1})`);
                        if (!businessGroup) {
                            return;
                        }
                        
                        const businessToggle = businessGroup.querySelector('.business-order-toggle');
                        const branchCheckboxes = businessGroup.querySelectorAll('.branch-order-checkbox');
                        
                        if (!businessToggle) {
                            return;
                        }
                        
                        const checkedCount = Array.from(branchCheckboxes).filter(cb => cb.checked).length;
                        const totalCount = branchCheckboxes.length;
                        
                        if (checkedCount === 0) {
                            businessToggle.checked = false;
                            businessToggle.indeterminate = false;
                        } else if (checkedCount === totalCount) {
                            businessToggle.checked = true;
                            businessToggle.indeterminate = false;
                        } else {
                            businessToggle.checked = false;
                            businessToggle.indeterminate = true;
                        }
                    }
                    
                    // Toggle all order management checkboxes
                    function toggleAllOrderManagement(enabled) {
                        const checkboxes = document.querySelectorAll('#order-businesses-container .branch-order-checkbox');
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = enabled;
                        });
                        
                        // Update all business toggles
                        const businessGroups = document.querySelectorAll('#order-businesses-container .business-group');
                        businessGroups.forEach((group, index) => {
                            updateOrderBusinessToggle(index);
                        });
                    }
                    
                    // Filter businesses and branches for order management
                    function filterOrderBusinesses(searchTerm) {
                        const businessGroups = document.querySelectorAll('#order-businesses-container .business-group');
                        const noResults = document.getElementById('order-no-results');
                        let visibleCount = 0;
                        
                        businessGroups.forEach(group => {
                            const businessName = group.getAttribute('data-business-name').toLowerCase();
                            const branchItems = group.querySelectorAll('.branch-item');
                            let hasVisibleBranches = false;
                            
                            // Check if business name matches
                            const businessMatches = businessName.includes(searchTerm.toLowerCase());
                            
                            // Filter branches within this business
                            branchItems.forEach(branchItem => {
                                const branchName = branchItem.getAttribute('data-branch-name').toLowerCase();
                                const branchMatches = branchName.includes(searchTerm.toLowerCase());
                                
                                if (businessMatches || branchMatches || searchTerm === '') {
                                    branchItem.style.display = '';
                                    hasVisibleBranches = true;
                                } else {
                                    branchItem.style.display = 'none';
                                }
                            });
                            
                                                        // Show/hide business group based on visible branches
                            if (hasVisibleBranches) {
                                group.style.display = '';
                                visibleCount++;
                            } else {
                                group.style.display = 'none';
                            }
                        });
                        
                        // Show/hide "no results" message
                        if (noResults) {
                            if (visibleCount === 0 && searchTerm !== '') {
                                noResults.style.display = '';
                            } else {
                                noResults.style.display = 'none';
                            }
                        }
                    }
                    
                    // Load order management branches data
                    function loadOrderManagementBranches() {
                        // console.log removed for production
                        const container = document.getElementById('order-businesses-container');
                        const loadingEl = document.getElementById('order-loading');
                        const errorEl = document.getElementById('order-error');
                        const noResultsEl = document.getElementById('order-no-results');
                        
                        if (!container) {
                            console.error('Order businesses container not found');
                            return;
                        }
                        
                        // Show loading state
                        if (loadingEl) loadingEl.style.display = '';
                        if (errorEl) errorEl.style.display = 'none';
                        if (noResultsEl) noResultsEl.style.display = 'none';
                        
                        // Clear existing business groups
                        const existingGroups = container.querySelectorAll('.business-group');
                        existingGroups.forEach(group => group.remove());
                        
                        fetch('/account/load-order-management-branches/')
                        .then(response => {
                            // console.log removed for production
                            if (!response.ok) {
                                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            // console.log removed for production
                            if (loadingEl) loadingEl.style.display = 'none';
                            
                            if (data.success) {
                                if (data.businesses_with_branches.length === 0) {
                                    if (noResultsEl) {
                                        noResultsEl.querySelector('p').textContent = 'No businesses or branches found.';
                                        noResultsEl.style.display = '';
                                    }
                                    return;
                                }
                                
                                // Create businesses list HTML
                                const businessesHtml = createOrderManagementBusinessesHtml(data.businesses_with_branches);
                                container.insertAdjacentHTML('beforeend', businessesHtml);
                                
                                // Initialize business toggles after adding HTML
                                initializeOrderManagementToggles();
                                
                                // console.log removed for production
                            } else {
                                if (errorEl) {
                                    document.getElementById('order-error-message').textContent = data.error || 'Unknown error occurred';
                                    errorEl.style.display = '';
                                }
                            }
                        })
                        .catch(error => {
                            console.error('Error loading order management branches:', error);
                            if (loadingEl) loadingEl.style.display = 'none';
                            if (errorEl) {
                                document.getElementById('order-error-message').textContent = `Error loading branches: ${error.message}`;
                                errorEl.style.display = '';
                            }
                        });
                    }
                    
                    // Create HTML for order management businesses and branches
                    function createOrderManagementBusinessesHtml(businessesWithBranches) {
                        let html = '';
                        
                        businessesWithBranches.forEach((businessData, businessIndex) => {
                            const business = businessData.business;
                            const branches = businessData.branches;
                            
                            html += `
                                <div class="business-group border-b border-gray-100 last:border-b-0" 
                                     data-business-name="${business.name}" 
                                     id="order-business-group-${businessIndex}">
                                    
                                    <!-- Business Header -->
                                    <div class="flex items-center justify-between p-4 bg-gray-50 hover:bg-gray-100 cursor-pointer" 
                                         onclick="toggleOrderBusinessGroup(${businessIndex})">
                                        <div class="flex items-center space-x-3 flex-1">
                                            <div class="flex items-center space-x-2">
                                                <svg class="w-4 h-4 text-gray-600 transition-transform duration-200 business-chevron-${businessIndex}" 
                                                     fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                                </svg>
                                                <i class="fas fa-building text-blue-600"></i>
                                            </div>
                                            <div class="flex-1">
                                                <h5 class="font-medium text-gray-900">${business.name}</h5>
                                                <p class="text-sm text-gray-500">${branches.length} branch${branches.length !== 1 ? 'es' : ''}</p>
                                            </div>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <label class="flex items-center space-x-1" onclick="event.stopPropagation()">
                                                <input type="checkbox" 
                                                       class="business-order-toggle rounded border-gray-300 text-green-600 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50"
                                                       onchange="toggleOrderBusinessBranches(${businessIndex}, this.checked); event.stopPropagation();">
                                                <span class="text-xs text-gray-600">All</span>
                                            </label>
                                        </div>
                                    </div>
                                    
                                    <!-- Branches List -->
                                    <div class="business-branches-${businessIndex} hidden bg-white">`;
                            
                            branches.forEach(branch => {
                                html += `
                                        <div class="branch-item flex items-center justify-between px-6 py-3 border-b border-gray-100 last:border-b-0 hover:bg-gray-50" 
                                             data-branch-name="${branch.name}">
                                            <div class="flex items-center space-x-3 flex-1">
                                                <i class="fas fa-code-branch text-gray-400 text-sm"></i>
                                                <div>
                                                    <span class="text-sm font-medium text-gray-900">${branch.name}</span>
                                                </div>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <label class="flex items-center space-x-2">
                                                    <input type="checkbox" name="branch_order_management" value="${branch.id}" 
                                                           ${branch.order_management_enabled ? 'checked' : ''}
                                                           class="branch-order-checkbox rounded border-gray-300 text-green-600 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50"
                                                           onchange="updateOrderBusinessToggle(${businessIndex})">
                                                    <span class="text-sm text-gray-700">Order Management</span>
                                                </label>
                                            </div>
                                        </div>`;
                            });
                            
                            html += `
                                    </div>
                                </div>`;
                        });
                        
                        return html;
                    }
                    
                    // Initialize business toggles for order management after dynamic loading
                    function initializeOrderManagementToggles() {
                        const orderContainer = document.getElementById('order-businesses-container');
                        if (!orderContainer) {
                            return;
                        }
                        
                        const businessGroups = orderContainer.querySelectorAll('.business-group');
                        businessGroups.forEach((group, index) => {
                            // Update initial toggle state
                            updateOrderBusinessToggle(index);
                            
                            // Add change listeners to branch checkboxes
                            const branchCheckboxes = group.querySelectorAll('.branch-order-checkbox');
                            branchCheckboxes.forEach(checkbox => {
                                checkbox.addEventListener('change', () => {
                                    updateOrderBusinessToggle(index);
                                });
                            });
                        });
                    }
                    
                    // Initialize business toggles for order management on page load (like SharePoint)
                    document.addEventListener('DOMContentLoaded', function() {
                        // Load order management branches on page load
                        if (document.getElementById('order-businesses-container')) {
                            loadOrderManagementBranches();
                        }
                    });
                </script>
            </div>
        </div>
    </div>
    
    <!-- Google OAuth Configuration Section -->
    <div class="accordion-section" data-section-id="google_oauth">
        <div class="accordion-header" @click="toggleSection('google_oauth')" :class="{ 'border-blue-500': activeSection === 'google_oauth' }">
            <h3 class="flex items-center">
                <i class="fab fa-google text-red-600 mr-3"></i>
                Google OAuth Configuration
            </h3>
            <svg class="w-5 h-5 transform transition-transform duration-300" :class="{ 'rotate-180': activeSection === 'google_oauth' }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </div>
        
        <div x-show="activeSection === 'google_oauth'" x-transition class="accordion-content">
            <div class="bg-white p-6">
                <div class="mb-6">
                    <h2 class="text-xl font-bold text-gray-900">Google OAuth Configuration</h2>
                    <p class="text-gray-600">Configure Google OAuth for system-wide authentication.</p>
                </div>

                <form action="{% url 'account_settings:settings' %}" method="post">
                    {% csrf_token %}
                    <input type="hidden" name="form_type" value="google_oauth_settings">
                    
                    <div class="space-y-6">
                        <!-- Google OAuth Status -->
                        <div class="bg-green-50 border border-green-200 rounded-md p-4">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-check-circle text-green-600"></i>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-green-800">Google OAuth Always Enabled</h3>
                                    <p class="text-sm text-green-700 mt-1">
                                        Google OAuth authentication is permanently enabled. Users can always sign in with Google when credentials are configured.
                                    </p>
                                </div>
                            </div>
                        </div>

                        <!-- Google Client ID -->
                        <div>
                            <label for="google_client_id" class="block text-sm font-medium text-gray-700 mb-2">
                                Google Client ID
                            </label>
                            <input type="text" id="google_client_id" name="google_client_id" 
                                   value="{{ global_admin_settings.google_client_id|default:'' }}"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Enter Google OAuth Client ID">
                        </div>

                        <!-- Google Client Secret -->
                        <div>
                            <label for="google_client_secret" class="block text-sm font-medium text-gray-700 mb-2">
                                Google Client Secret
                            </label>
                            <input type="password" id="google_client_secret" name="google_client_secret" 
                                   value="{{ global_admin_settings.google_client_secret|default:'' }}"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Enter Google OAuth Client Secret">
                        </div>

                        <!-- Allowed Domains -->
                        <div>
                            <label for="google_oauth_domains" class="block text-sm font-medium text-gray-700 mb-2">
                                Allowed Domains (Optional)
                            </label>
                            <textarea id="google_oauth_domains" name="google_oauth_domains" rows="3"
                                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                      placeholder="Enter allowed domains separated by commas (e.g., company.com, organization.edu)">{{ global_admin_settings.google_oauth_domains|default:'' }}</textarea>
                            <p class="text-sm text-gray-500 mt-1">Leave empty to allow all domains</p>
                        </div>

                        <!-- Authorized Redirect URIs -->
                        {% if google_oauth_redirect_uri %}
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                Authorized Redirect URIs
                                <span class="text-xs text-gray-500">(for Google Cloud Console configuration)</span>
                            </label>
                            <div class="bg-gray-50 border border-gray-300 rounded-md p-3">
                                <div class="flex items-center justify-between">
                                    <code class="text-sm text-gray-800 font-mono">{{ google_oauth_redirect_uri }}</code>
                                    <button type="button" 
                                            onclick="navigator.clipboard.writeText('{{ google_oauth_redirect_uri }}'); this.innerHTML='<i class=\'fas fa-check\'></i> Copied'; setTimeout(() => this.innerHTML='<i class=\'fas fa-copy\'></i> Copy', 2000);"
                                            class="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors">
                                        <i class="fas fa-copy"></i> Copy
                                    </button>
                                </div>
                            </div>
                            <p class="text-sm text-gray-500 mt-1">
                                <i class="fas fa-info-circle mr-1"></i>
                                Add this URI to your Google Cloud Console OAuth 2.0 configuration under "Authorized redirect URIs"
                            </p>
                            <div class="mt-2 p-3 bg-amber-50 border border-amber-200 rounded-md">
                                <p class="text-sm text-amber-800 font-medium">
                                    <i class="fas fa-exclamation-triangle mr-1"></i>
                                    For development, also add: <code class="bg-amber-100 px-2 py-1 rounded">https://lms.nexsy.io/users/auth/google/callback/</code>
                                </p>
                                <p class="text-xs text-amber-700 mt-1">
                                    Users may access your app via localhost or 127.0.0.1, so both URIs should be configured in Google Cloud Console. (Documentation reference)
                                </p>
                            </div>
                            <div class="mt-2 p-3 bg-blue-50 rounded-md">
                                <p class="text-sm text-blue-800">
                                    <strong>Setup Instructions:</strong>
                                </p>
                                <ol class="text-sm text-blue-700 mt-1 space-y-1 list-decimal list-inside">
                                    <li>Go to <a href="https://console.cloud.google.com/apis/credentials" target="_blank" class="underline hover:text-blue-800">Google Cloud Console</a></li>
                                    <li>Create or edit your OAuth 2.0 Client ID</li>
                                    <li>Add the URI above to "Authorized redirect URIs"</li>
                                    <li>Copy the Client ID and Secret to the fields above</li>
                                </ol>
                            </div>
                        </div>
                        {% endif %}

                        <!-- Save Button -->
                        <div class="flex justify-end">
                            <button type="submit" class="bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-md font-medium">
                                <i class="fab fa-google mr-2"></i>Save Google OAuth Settings
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Microsoft OAuth Configuration Section -->
    <div class="accordion-section" data-section-id="microsoft_oauth">
        <div class="accordion-header" @click="toggleSection('microsoft_oauth')" :class="{ 'border-blue-500': activeSection === 'microsoft_oauth' }">
            <h3 class="flex items-center">
                <i class="fab fa-microsoft text-blue-600 mr-3"></i>
                Microsoft OAuth Configuration
            </h3>
            <svg class="w-5 h-5 transform transition-transform duration-300" :class="{ 'rotate-180': activeSection === 'microsoft_oauth' }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </div>
        
        <div x-show="activeSection === 'microsoft_oauth'" x-transition class="accordion-content">
            <div class="bg-white p-6">
                <div class="mb-6">
                    <h2 class="text-xl font-bold text-gray-900">Microsoft OAuth Configuration</h2>
                    <p class="text-gray-600">Configure Microsoft OAuth for system-wide authentication using Azure AD.</p>
                </div>

                <form action="{% url 'account_settings:settings' %}" method="post">
                    {% csrf_token %}
                    <input type="hidden" name="form_type" value="microsoft_oauth_settings">
                    
                    <div class="space-y-6">
                        <!-- Microsoft OAuth Status -->
                        <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-check-circle text-blue-600"></i>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-blue-800">Microsoft OAuth Always Enabled</h3>
                                    <p class="text-sm text-blue-700 mt-1">
                                        Microsoft OAuth authentication is permanently enabled. Users can always sign in with Microsoft when credentials are configured.
                                    </p>
                                </div>
                            </div>
                        </div>

                        <!-- Microsoft Client ID -->
                        <div>
                            <label for="microsoft_client_id" class="block text-sm font-medium text-gray-700 mb-2">
                                Microsoft Client ID (Application ID)
                            </label>
                            <input type="text" id="microsoft_client_id" name="microsoft_client_id" 
                                   value="{{ global_admin_settings.microsoft_client_id|default:'' }}"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Enter Microsoft OAuth Client ID">
                        </div>

                        <!-- Microsoft Client Secret -->
                        <div>
                            <label for="microsoft_client_secret" class="block text-sm font-medium text-gray-700 mb-2">
                                Microsoft Client Secret
                            </label>
                            <input type="password" id="microsoft_client_secret" name="microsoft_client_secret" 
                                   value="{{ global_admin_settings.microsoft_client_secret|default:'' }}"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Enter Microsoft OAuth Client Secret">
                            <div class="mt-2 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
                                <div class="flex">
                                    <div class="flex-shrink-0">
                                        <i class="fas fa-exclamation-triangle text-yellow-400"></i>
                                    </div>
                                    <div class="ml-3">
                                        <h3 class="text-sm font-medium text-yellow-800">Important: Use Client Secret Value</h3>
                                        <div class="mt-2 text-sm text-yellow-700">
                                            <p>When creating a client secret in Azure:</p>
                                            <ul class="list-disc pl-5 mt-1">
                                                <li><strong>DO NOT</strong> use the Secret ID (40 characters, UUID format)</li>
                                                <li><strong>DO</strong> use the Secret Value (44+ characters, shown only once)</li>
                                                <li>Copy the secret value immediately - it cannot be viewed again</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Microsoft Tenant ID -->
                        <div>
                            <label for="microsoft_tenant_id" class="block text-sm font-medium text-gray-700 mb-2">
                                Microsoft Tenant ID (Optional)
                            </label>
                            <input type="text" id="microsoft_tenant_id" name="microsoft_tenant_id" 
                                   value="{{ global_admin_settings.microsoft_tenant_id|default:'' }}"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Enter Tenant ID or leave empty for 'common'">
                            <p class="text-sm text-gray-500 mt-1">Leave empty to use 'common' for multi-tenant authentication</p>
                        </div>

                        <!-- Allowed Domains -->
                        <div>
                            <label for="microsoft_oauth_domains" class="block text-sm font-medium text-gray-700 mb-2">
                                Allowed Domains (Optional)
                            </label>
                            <textarea id="microsoft_oauth_domains" name="microsoft_oauth_domains" rows="3"
                                      class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                      placeholder="Enter allowed domains separated by commas (e.g., company.com, organization.edu)">{{ global_admin_settings.microsoft_oauth_domains|default:'' }}</textarea>
                            <p class="text-sm text-gray-500 mt-1">Leave empty to allow all domains</p>
                        </div>

                        <!-- Authorized Redirect URIs -->
                        {% if microsoft_oauth_redirect_uri %}
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                Authorized Redirect URI
                            </label>
                            <div class="bg-gray-50 border border-gray-300 rounded-md p-3">
                                <code class="text-sm text-gray-800">{{ microsoft_oauth_redirect_uri }}</code>
                                <div class="mt-2">
                                    <button type="button" onclick="copyToClipboard('{{ microsoft_oauth_redirect_uri }}')" 
                                            class="text-blue-600 hover:text-blue-800 text-sm">
                                        <i class="fas fa-copy mr-1"></i>Copy URI
                                    </button>
                                </div>
                            </div>
                            <p class="text-sm text-gray-500 mt-1">Add this URI to your Microsoft App Registration redirect URIs</p>
                        </div>
                        {% endif %}

                        <!-- Configuration Instructions -->
                        <div class="bg-yellow-50 border border-yellow-200 rounded-md p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-info-circle text-yellow-600"></i>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-yellow-800">Microsoft OAuth Setup Instructions</h3>
                                    <div class="mt-2 text-sm text-yellow-700">
                                        <ol class="list-decimal list-inside space-y-1">
                                            <li>Go to <a href="https://portal.azure.com" target="_blank" class="text-blue-600 hover:text-blue-800">Azure Portal</a></li>
                                            <li>Navigate to Azure Active Directory > App registrations</li>
                                            <li>Create a new registration or select existing app</li>
                                            <li>Copy the Application (client) ID and Tenant ID</li>
                                            <li>Create a client secret under "Certificates & secrets"</li>
                                            <li>Add the redirect URI shown above to "Authentication" settings</li>
                                            <li>Configure API permissions for Microsoft Graph (User.Read, email, profile)</li>
                                        </ol>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Save Button -->
                        <div class="flex justify-end">
                            <button type="submit" class="text-white px-6 py-2 rounded-md font-medium" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                <i class="fab fa-microsoft mr-2"></i>Save Microsoft OAuth Settings
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        </div>
    </div>
    {% endif %}

    {% if is_globaladmin %}
    <!-- Anthropic AI Configuration Section -->
    <div class="accordion-section" data-section-id="anthropic_ai_configuration">
        <div class="accordion-header" @click="toggleSection('anthropic_ai_configuration')" :class="{ 'border-blue-500': activeSection === 'anthropic_ai_configuration' }">
            <h3 class="flex items-center">
                <i class="fas fa-brain text-purple-600 mr-3"></i>
                Anthropic AI Configuration
            </h3>
            <svg class="w-5 h-5 transform transition-transform duration-300" :class="{ 'rotate-180': activeSection === 'anthropic_ai_configuration' }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </div>
        
        <div x-show="activeSection === 'anthropic_ai_configuration'" x-transition class="accordion-content">
            <div class="bg-white p-6">
                <div class="mb-6">
                    <h2 class="text-xl font-bold text-gray-900">Anthropic AI Configuration</h2>
                    <p class="text-gray-600">Configure Anthropic Claude AI integration for AI-powered content generation in TinyMCE editors.</p>
                </div>

                <div class="bg-white shadow-sm rounded-lg overflow-hidden border border-gray-200">
                    <div class="p-6">
                        <form method="post" action="{% url 'account_settings:settings' %}" class="space-y-6">
                            {% csrf_token %}
                            <input type="hidden" name="form_type" value="anthropic_ai_settings">

                            <div class="flex items-center justify-between">
                                <div class="flex flex-col">
                                    <h3 class="text-lg font-medium text-gray-900">Enable Anthropic AI</h3>
                                    <p class="text-sm text-gray-600">Enable Anthropic Claude AI content generation for TinyMCE editors system-wide</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" name="anthropic_ai_enabled" class="sr-only peer" {% if global_admin_settings.anthropic_ai_enabled %}checked{% endif %}>
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                </label>
                            </div>

                            <div class="border-t pt-4">
                                <h4 class="text-md font-medium text-gray-800 mb-4">Anthropic API Configuration</h4>
                                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                    <div class="md:col-span-2">
                                        <label for="anthropic_api_key" class="block text-sm font-medium text-gray-700 mb-2">API Key</label>
                                        <input type="password" id="anthropic_api_key" name="anthropic_api_key" 
                                               value="{{ global_admin_settings.anthropic_api_key|default:'' }}"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                               placeholder="sk-ant-api03-your_anthropic_api_key_here">
                                        <p class="text-xs text-gray-500 mt-1">Get your API key from <a href="https://console.anthropic.com/" target="_blank" class="text-blue-600 hover:text-blue-800">Anthropic Console</a></p>
                                    </div>
                                    <div>
                                        <label for="anthropic_model" class="block text-sm font-medium text-gray-700 mb-2">Model</label>
                                        <select id="anthropic_model" name="anthropic_model" 
                                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <!-- Claude 3.5 Models (Latest) -->
                                            <option value="claude-3-5-sonnet-20241022" {% if global_admin_settings.anthropic_model == 'claude-3-5-sonnet-20241022' %}selected{% endif %}>Claude 3.5 Sonnet (Latest - Oct 2024)</option>
                                            <option value="claude-3-5-sonnet-20240620" {% if global_admin_settings.anthropic_model == 'claude-3-5-sonnet-20240620' %}selected{% endif %}>Claude 3.5 Sonnet (June 2024)</option>
                                            <option value="claude-3-5-haiku-20241022" {% if global_admin_settings.anthropic_model == 'claude-3-5-haiku-20241022' %}selected{% endif %}>Claude 3.5 Haiku (Latest - Fast & Efficient)</option>
                                            
                                            <!-- Claude 3 Models (Legacy) -->
                                            <option value="claude-3-opus-20240229" {% if global_admin_settings.anthropic_model == 'claude-3-opus-20240229' %}selected{% endif %}>Claude 3 Opus (Most Capable Legacy)</option>
                                            <option value="claude-3-sonnet-20240229" {% if global_admin_settings.anthropic_model == 'claude-3-sonnet-20240229' %}selected{% endif %}>Claude 3 Sonnet (Balanced Legacy)</option>
                                            <option value="claude-3-haiku-20240307" {% if global_admin_settings.anthropic_model == 'claude-3-haiku-20240307' %}selected{% endif %}>Claude 3 Haiku (Fast Legacy)</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="mt-4">
                                    <label for="anthropic_max_tokens" class="block text-sm font-medium text-gray-700 mb-2">Max Tokens per Request</label>
                                    <input type="number" id="anthropic_max_tokens" name="anthropic_max_tokens" 
                                           value="{{ global_admin_settings.anthropic_max_tokens|default:1000 }}"
                                           min="100" max="4000"
                                           class="w-32 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <p class="text-xs text-gray-500 mt-1">Higher values allow longer responses but cost more tokens</p>
                                </div>
                            </div>

                            <div class="border-t pt-4">
                                <div class="flex items-center space-x-4">
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" name="test_anthropic_ai" class="sr-only peer">
                                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                        <span class="ml-3 text-sm font-medium text-gray-700">Test connection when saving</span>
                                    </label>
                                </div>
                                
                                {% if global_admin_settings.anthropic_is_tested %}
                                    <div class="mt-4 p-3 bg-green-50 border border-green-200 rounded-md">
                                        <div class="flex items-center">
                                            <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                            <span class="text-sm text-green-800">
                                                Last test successful on {{ global_admin_settings.anthropic_last_test_date|date:"M d, Y \a\t H:i" }}
                                            </span>
                                        </div>
                                    </div>
                                {% elif global_admin_settings.anthropic_test_error %}
                                    <div class="mt-4 p-3 bg-red-50 border border-red-200 rounded-md">
                                        <div class="flex items-start">
                                            <i class="fas fa-exclamation-triangle text-red-600 mr-2 mt-1"></i>
                                            <div class="flex-1">
                                                <span class="text-sm text-red-800 font-medium">Connection test failed:</span>
                                                <p class="text-sm text-red-700 mt-1 whitespace-pre-line">{{ global_admin_settings.anthropic_test_error }}</p>
                                            </div>
                                        </div>
                                    </div>
                                {% endif %}
                            </div>

                            <!-- Save Button -->
                            <div class="flex justify-end">
                                <button type="submit" class="text-white px-6 py-2 rounded-md font-medium" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                                    <i class="fas fa-brain mr-2"></i>Save Anthropic AI Settings
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {% endif %}
    

    {% if is_globaladmin %}
    {% endif %}

                </div>

<!-- Edit Zoom Integration Modal -->
{% if zoom_integration and zoom_integration.id %}
<div id="editZoomIntegrationModal" class="modal hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50" style="display:none;">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Edit Zoom Integration</h3>
            <div class="mt-2 px-7 py-3">
                <!-- Zoom Integration Edit Form -->
                <form action="{% url 'account_settings:edit_integration' integration_type='zoom' integration_id=zoom_integration.id %}" method="post">
                    {% csrf_token %}
                    <div class="mb-4">
                        <label for="zoom-name" class="block text-sm font-medium text-gray-700 text-left">Name</label>
                        <input type="text" id="zoom-name" name="name" value="{{ zoom_integration.name }}" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                    </div>
                    <div class="mb-4">
                        <label for="zoom-api-key" class="block text-sm font-medium text-gray-700 text-left">Client ID</label>
                        <input type="text" id="zoom-api-key" name="api_key" value="{{ zoom_integration.api_key }}" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                    </div>
                    <div class="mb-4">
                        <label for="zoom-api-secret" class="block text-sm font-medium text-gray-700 text-left">Client Secret</label>
                        <input type="password" id="zoom-api-secret" name="api_secret" value="{{ zoom_integration.api_secret }}" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                    </div>
                    <div class="mb-4">
                        <label for="zoom-account-id" class="block text-sm font-medium text-gray-700 text-left">Account ID</label>
                        <input type="text" id="zoom-account-id" name="account_id" value="{{ zoom_integration.account_id }}" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                    </div>
                    <div class="mb-4">
                        <label class="flex items-center space-x-3">
                            <input type="checkbox" name="is_active" {% if zoom_integration.is_active %}checked{% endif %} class="form-checkbox h-5 w-5 text-blue-600">
                            <span class="text-sm font-medium text-gray-700">Active</span>
                        </label>
                    </div>
                    <div class="items-center px-4 py-3">
                        <button type="button" class="modal-close px-4 py-2 bg-gray-200 text-gray-800 text-base font-medium rounded-md w-1/3 shadow-sm hover:bg-gray-300">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 text-white text-base font-medium rounded-md w-1/3 shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                            Save
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
{% endif %} 

<script>
// Inject Django URLs for use by JavaScript
window.BACKUP_LIST_URL = "{% url 'account_settings:get_backups' %}";
window.LOAD_BUSINESS_DATA_URL = "{% url 'account_settings:load_business_data' %}";
window.LOAD_BRANCHES_DATA_URL = "{% url 'account_settings:load_branches_data' %}";

document.addEventListener('DOMContentLoaded', function() {
    // Force hide all modals on page load again (for extra safety)
    hideAllModals();
    
    // Modal handling
    const modalCloseButtons = document.querySelectorAll('.modal-close');
    const integrationEditButtons = document.querySelectorAll('.integration-edit-btn');

    // Close modal when clicking close button
    modalCloseButtons.forEach(button => {
        button.addEventListener('click', function() {
            hideAllModals();
        });
    });

    // Close modal when clicking outside
    window.addEventListener('click', function(event) {
        if (event.target.classList.contains('modal')) {
            hideAllModals();
        }
    });
    
    // Close modal when pressing ESC key
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            hideAllModals();
        }
    });

    // Open modal when clicking edit button
    integrationEditButtons.forEach(button => {
        button.addEventListener('click', function() {
            const targetModalId = this.getAttribute('data-target');
            if (targetModalId) {
                showModal(targetModalId);
            }
        });
    });

    // Additional handling for branch limits modal
    const cancelEditLimitsBtn = document.getElementById('cancelEditLimits');
    const saveBranchLimitsBtn = document.getElementById('saveBranchLimits');
    
    if (cancelEditLimitsBtn) {
        cancelEditLimitsBtn.addEventListener('click', hideAllModals);
    }
    
    if (saveBranchLimitsBtn) {
        saveBranchLimitsBtn.addEventListener('click', function() {
            const form = document.getElementById('branchLimitsForm');
            const formData = new FormData(form);
            const branchId = document.getElementById('branchIdInput').value;
            
            if (!branchId) {
                alert('Error: Branch ID not found');
                return;
            }
            
            // Show loading state
            saveBranchLimitsBtn.disabled = true;
            saveBranchLimitsBtn.textContent = 'Saving...';
            
            // Submit via AJAX
            fetch(`/account/branch-limits/${branchId}/update/`, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    hideAllModals();
                    // Refresh the page to show updated data
                    window.location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while saving branch limits');
            })
            .finally(() => {
                // Reset button state
                saveBranchLimitsBtn.disabled = false;
                saveBranchLimitsBtn.textContent = 'Save';
            });
        });
    }



    // SharePoint Setup Help Toggle Functions
    function toggleAzureHelp() {
        const helpSection = document.getElementById('azureHelpSection');
        if (helpSection) {
            helpSection.classList.toggle('hidden');
        }
    }
    
    function toggleSharePointHelp() {
        const helpSection = document.getElementById('sharepointHelpSection');
        if (helpSection) {
            helpSection.classList.toggle('hidden');
        }
    }
    
    function togglePowerBIHelp() {
        const helpSection = document.getElementById('powerbiHelpSection');
        if (helpSection) {
            helpSection.classList.toggle('hidden');
        }
    }
    
    // Copy to clipboard function
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(function() {
            // Show temporary success message
            const event = window.event;
            const button = event.target.closest('button');
            const originalText = button.innerHTML;
            button.innerHTML = '✅ Copied!';
            button.classList.add('bg-green-100', 'text-green-700');
            button.classList.remove('bg-blue-100', 'text-blue-700');
            
            setTimeout(() => {
                button.innerHTML = originalText;
                button.classList.remove('bg-green-100', 'text-green-700');
                button.classList.add('bg-blue-100', 'text-blue-700');
            }, 2000);
        }).catch(function(err) {
            console.error('Failed to copy: ', err);
            alert('Failed to copy to clipboard. Please copy manually.');
        });
    }
    
    // SharePoint Integration Functions
    function toggleSharePointEditMode() {
        const viewMode = document.getElementById('sharepoint-view-mode');
        const editMode = document.getElementById('sharepoint-edit-mode');
        
        if (viewMode && editMode) {
            // Toggle visibility
            if (viewMode.classList.contains('hidden')) {
                // Currently in edit mode, switch to view mode
                viewMode.classList.remove('hidden');
                editMode.classList.add('hidden');
            } else {
                // Currently in view mode, switch to edit mode
                viewMode.classList.add('hidden');
                editMode.classList.remove('hidden');
            }
        }
    }
    
    function testSharePointConnection() {
        // Show loading state
        const button = event.target;
        const originalText = button.innerHTML;
        button.innerHTML = '🔄 Testing Connection...';
        button.disabled = true;
        
        fetch('/account/test-sharepoint-connection/', {
            method: 'POST',
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                let message = `✅ SharePoint Connection Successful!\n\nSite: ${data.site_title || 'N/A'}\nConnection: ${data.connection_status}\nLast Tested: ${new Date().toLocaleString()}`;
                
                if (data.manual_setup_required) {
                    message += '\n\n📋 Manual Setup Required\n\nPlease follow the detailed setup guide below to configure SharePoint lists and libraries.';
                }
                
                alert(message);
                
                // Show manual setup guide if required
                if (data.manual_setup_required) {
                    showManualSetupGuide();
                }
            } else {
                alert(`❌ SharePoint Connection Failed:\n\n${data.error}`);
            }
        })
        .catch(error => {
            console.error('Error testing SharePoint connection:', error);
            alert('❌ An error occurred while testing the connection. Please try again.');
        })
        .finally(() => {
            // Reset button state
            button.innerHTML = originalText;
            button.disabled = false;
        });
    }
    
    function testSharePointConnectionInEdit() {
        // Get form values from edit form
        const tenantId = document.getElementById('edit_sharepoint_tenant_id').value;
        const clientId = document.getElementById('edit_sharepoint_client_id').value;
        const clientSecret = document.getElementById('edit_sharepoint_client_secret').value;
        const siteUrl = document.getElementById('edit_sharepoint_site_url').value;
        
        if (!tenantId || !clientId || !siteUrl) {
            alert('Please fill in Tenant ID, Client ID, and Site URL before testing.');
            return;
        }
        
        // Show loading state
        const button = event.target;
        const originalText = button.innerHTML;
        button.innerHTML = '🔄 Testing Connection...';
        button.disabled = true;
        
        // Create test data
        const testData = {
            tenant_id: tenantId,
            client_id: clientId,
            client_secret: clientSecret,
            site_url: siteUrl
        };
        
        fetch('/account/test-sharepoint-connection/', {
            method: 'POST',
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(testData)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                let message = `✅ SharePoint Connection Successful!\n\nSite: ${data.site_title || 'N/A'}\nConnection: ${data.connection_status}\nLast Tested: ${new Date().toLocaleString()}`;
                
                if (data.manual_setup_required) {
                    message += '\n\n📋 Manual Setup Required\n\nPlease follow the detailed setup guide below to configure SharePoint lists and libraries.';
                }
                
                alert(message);
                
                // Show manual setup guide if required
                if (data.manual_setup_required) {
                    showManualSetupGuide();
                }
            } else {
                alert(`❌ SharePoint Connection Failed:\n\n${data.error}`);
            }
        })
        .catch(error => {
            console.error('Error testing SharePoint connection:', error);
            alert('❌ An error occurred while testing the connection. Please try again.');
        })
        .finally(() => {
            // Reset button state
            button.innerHTML = originalText;
            button.disabled = false;
        });
    }
    
    // SharePoint Manual Setup Guide
    function showManualSetupGuide() {
        // Fetch dynamic setup data
        fetch('/account/sharepoint-manual-setup-guide/', {
            method: 'GET',
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                displayManualSetupModal(data);
            } else {
                alert('Error loading setup guide: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error loading manual setup guide:', error);
            alert('Error loading setup guide. Please try again.');
        });
    }
    
    function displayManualSetupModal(data) {
        // Create modal HTML
        const modalHTML = generateSetupModalHTML(data);
        
        // Remove existing modal if present
        const existingModal = document.getElementById('sharepoint-setup-modal');
        if (existingModal) {
            existingModal.remove();
        }
        
        // Add modal to document
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        // Show modal
        const modal = document.getElementById('sharepoint-setup-modal');
        modal.classList.remove('hidden');
        
        // Add event listeners
        modal.querySelector('.modal-close').addEventListener('click', () => {
            modal.classList.add('hidden');
            setTimeout(() => modal.remove(), 300);
        });
        
        // Copy code functionality
        modal.querySelectorAll('.copy-code-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const codeElement = this.parentElement.querySelector('code');
                navigator.clipboard.writeText(codeElement.textContent).then(() => {
                    this.textContent = 'Copied!';
                    this.classList.add('bg-green-500');
                    setTimeout(() => {
                        this.textContent = 'Copy';
                        this.classList.remove('bg-green-500');
                    }, 2000);
                });
            });
        });
    }
    
    // Toggle columns visibility function
    function toggleColumns(listId) {
        const columnsDiv = document.getElementById(`columns-${listId}`);
        const chevron = document.getElementById(`chevron-${listId}`);
        
        if (columnsDiv && chevron) {
            if (columnsDiv.classList.contains('hidden')) {
                columnsDiv.classList.remove('hidden');
                chevron.classList.add('rotate-180');
            } else {
                columnsDiv.classList.add('hidden');
                chevron.classList.remove('rotate-180');
            }
        }
    }
    
    // Make toggleColumns globally available
    window.toggleColumns = toggleColumns;
    
    function generateSetupModalHTML(data) {
        const lists = data.setup_data.lists;
        const libraries = data.setup_data.libraries;
        const siteUrl = data.site_url;
        const branchName = data.branch_name;
        
        let listsHTML = '';
        lists.forEach((list, index) => {
            let columnsHTML = '';
            list.columns.forEach((column, colIndex) => {
                const requiredBadge = column.required ? 
                    '<span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 ml-2">Required</span>' : 
                    '<span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 ml-2">Optional</span>';
                
                const choicesHTML = column.choices ? `
                    <div class="mt-2">
                        <span class="text-xs font-medium text-gray-700">Choices:</span>
                        <div class="flex flex-wrap gap-1 mt-1">
                            ${column.choices.map(choice => 
                                `<span class="inline-flex items-center px-2 py-1 rounded text-xs bg-blue-100 text-blue-800">${choice}</span>`
                            ).join('')}
                        </div>
                    </div>
                ` : '';
                
                columnsHTML += `
                    <div class="border-l-4 border-blue-200 pl-4 py-3 mb-3 bg-gray-50 rounded-r">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h6 class="font-semibold text-gray-900 flex items-center">
                                    ${column.name}
                                    ${requiredBadge}
                                </h6>
                                <p class="text-sm text-blue-600 mt-1">${column.type}</p>
                                <p class="text-sm text-gray-600 mt-2 leading-relaxed">${column.description}</p>
                                ${choicesHTML}
                            </div>
                        </div>
                    </div>
                `;
            });
            
            listsHTML += `
                <div class="mb-8 border border-gray-200 rounded-lg overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-blue-100 p-4 border-b">
                        <h4 class="text-lg font-semibold text-blue-700 flex items-center">
                            <span class="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm mr-3">${index + 1}</span>
                            Create List: "${list.name}"
                        </h4>
                        <p class="text-blue-600 mt-2">${list.description}</p>
                    </div>
                    
                    <div class="p-4">
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
                            <h5 class="font-semibold text-blue-800 mb-3 flex items-center">
                                <i class="fas fa-list-ol mr-2"></i>Creation Steps:
                            </h5>
                            <ol class="list-decimal list-inside text-sm text-blue-700 space-y-2">
                                <li>Go to your SharePoint site: <code class="bg-white px-2 py-1 rounded border text-blue-800">${siteUrl}</code></li>
                                <li>Click <strong>"New"</strong> → <strong>"List"</strong></li>
                                <li>Choose <strong>"Blank list"</strong></li>
                                <li>Name: <code class="bg-white px-2 py-1 rounded border text-blue-800">${list.name}</code></li>
                                <li>Description: <em>${list.description}</em></li>
                                <li>Click <strong>"Create"</strong></li>
                            </ol>
                        </div>
                        
                        <div class="mb-4">
                            <button type="button" onclick="toggleColumns('list-${index}')" class="flex items-center justify-between w-full p-3 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors">
                                <h5 class="font-semibold text-gray-800 flex items-center">
                                    <i class="fas fa-columns mr-2"></i>
                                    Required Columns (${list.columns.length})
                                </h5>
                                <i class="fas fa-chevron-down transform transition-transform" id="chevron-list-${index}"></i>
                            </button>
                            <div id="columns-list-${index}" class="mt-3 space-y-2 hidden">
                                ${columnsHTML}
                            </div>
                        </div>
                        
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                            <div class="flex items-start">
                                <i class="fas fa-lightbulb text-yellow-600 mr-2 mt-0.5"></i>
                                <div>
                                    <p class="text-sm text-yellow-800 font-medium">Setup Tips:</p>
                                    <ul class="text-sm text-yellow-700 mt-1 space-y-1">
                                        <li>• For Choice columns, add each option one by one</li>
                                        <li>• Use "Date and Time" format for date columns</li>
                                        <li>• Mark required columns as mandatory in SharePoint</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });
        
        let librariesHTML = '';
        libraries.forEach((library, index) => {
            const featuresHTML = library.features ? `
                <div class="mt-3">
                    <span class="text-xs font-medium text-green-700">Key Features:</span>
                    <div class="flex flex-wrap gap-1 mt-1">
                        ${library.features.map(feature => 
                            `<span class="inline-flex items-center px-2 py-1 rounded text-xs bg-green-100 text-green-800">${feature}</span>`
                        ).join('')}
                    </div>
                </div>
            ` : '';
            
            librariesHTML += `
                <div class="mb-6 border border-gray-200 rounded-lg overflow-hidden">
                    <div class="bg-gradient-to-r from-green-50 to-green-100 p-4 border-b">
                        <h4 class="text-lg font-semibold text-green-700 flex items-center">
                            <span class="bg-green-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm mr-3">${lists.length + index + 1}</span>
                            Create Document Library: "${library.name}"
                        </h4>
                        <p class="text-green-600 mt-2">${library.description}</p>
                    </div>
                    
                    <div class="p-4">
                        <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
                            <h5 class="font-semibold text-green-800 mb-3 flex items-center">
                                <i class="fas fa-folder-plus mr-2"></i>Creation Steps:
                            </h5>
                            <ol class="list-decimal list-inside text-sm text-green-700 space-y-2">
                                <li>Go to your SharePoint site: <code class="bg-white px-2 py-1 rounded border text-green-800">${siteUrl}</code></li>
                                <li>Click <strong>"New"</strong> → <strong>"Document library"</strong></li>
                                <li>Name: <code class="bg-white px-2 py-1 rounded border text-green-800">${library.name}</code></li>
                                <li>Description: <em>${library.description}</em></li>
                                <li>Click <strong>"Create"</strong></li>
                            </ol>
                        </div>
                        
                        <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                            <div class="flex items-start">
                                <i class="fas fa-folder text-green-600 mr-2 mt-0.5"></i>
                                <div class="flex-1">
                                    <p class="text-sm text-green-800 font-medium">Library Purpose:</p>
                                    <p class="text-sm text-green-700 mt-1">This library will store and manage your LMS ${library.name.toLowerCase()} files with automatic organization and metadata.</p>
                                    ${featuresHTML}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });
        
        return `
            <div id="sharepoint-setup-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-2 sm:p-4">
                <div class="bg-white rounded-lg shadow-xl w-full max-w-7xl max-h-[95vh] flex flex-col">
                    <div class="sticky top-0 bg-white border-b border-gray-200 p-4 sm:p-6 rounded-t-lg">
                        <div class="flex justify-between items-start">
                            <div class="flex-1 mr-4">
                                <h2 class="text-xl sm:text-2xl font-bold text-gray-900 flex items-center">
                                    <i class="fas fa-share-alt text-blue-500 mr-3"></i>
                                    SharePoint Manual Setup Guide
                                </h2>
                                <p class="text-gray-600 mt-2 text-sm sm:text-base">Follow these steps to manually configure SharePoint for <strong>${branchName}</strong> LMS integration</p>
                            </div>
                            <button class="modal-close text-gray-400 hover:text-gray-600 text-2xl flex-shrink-0 w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100">&times;</button>
                        </div>
                    </div>
                    
                    <div class="flex-1 overflow-y-auto">
                    
                        <div class="p-4 sm:p-6">
                            <!-- Progress Tracker -->
                            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4 mb-6">
                                <h3 class="font-semibold text-blue-800 mb-3 flex items-center">
                                    <i class="fas fa-tasks text-blue-600 mr-2"></i>
                                    Setup Progress
                                </h3>
                                <div class="text-sm text-blue-700 mb-3">Track your progress through the setup process:</div>
                                <div class="space-y-2">
                                    <div class="flex items-center text-sm">
                                        <div class="w-4 h-4 bg-gray-300 rounded-full mr-3 flex items-center justify-center">
                                            <i class="fas fa-circle text-xs text-gray-500"></i>
                                        </div>
                                        <span>Create ${lists.length} SharePoint Lists</span>
                                    </div>
                                    <div class="flex items-center text-sm">
                                        <div class="w-4 h-4 bg-gray-300 rounded-full mr-3 flex items-center justify-center">
                                            <i class="fas fa-circle text-xs text-gray-500"></i>
                                        </div>
                                        <span>Create ${libraries.length} Document Libraries</span>
                                    </div>
                                    <div class="flex items-center text-sm">
                                        <div class="w-4 h-4 bg-gray-300 rounded-full mr-3 flex items-center justify-center">
                                            <i class="fas fa-circle text-xs text-gray-500"></i>
                                        </div>
                                        <span>Test & Verify Integration</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                                <h3 class="font-semibold text-blue-800 mb-3 flex items-center">
                                    <i class="fas fa-clipboard-check text-blue-600 mr-2"></i>
                                    Prerequisites
                                </h3>
                                <ul class="text-sm text-blue-700 space-y-2">
                                    <li class="flex items-center"><i class="fas fa-check-circle text-green-500 mr-2"></i> SharePoint connection test passed</li>
                                    <li class="flex items-center"><i class="fas fa-check-circle text-green-500 mr-2"></i> Azure AD app configured with proper permissions</li>
                                    <li class="flex items-center"><i class="fas fa-check-circle text-green-500 mr-2"></i> Access to SharePoint site: <code class="bg-white px-2 py-1 rounded border text-blue-800">${siteUrl}</code></li>
                                </ul>
                            </div>
                            
                            <div class="mb-8">
                                <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
                                    <i class="fas fa-list text-blue-500 mr-3"></i>
                                    Lists to Create
                                </h3>
                                <p class="text-gray-600 mb-6 text-sm sm:text-base">Create these lists with the exact column specifications to ensure proper data synchronization:</p>
                                ${listsHTML}
                            </div>
                            
                            <div class="mb-8">
                                <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
                                    <i class="fas fa-folder-open text-green-500 mr-3"></i>
                                    Document Libraries to Create
                                </h3>
                                <p class="text-gray-600 mb-6 text-sm sm:text-base">Create these document libraries for file storage and management:</p>
                                ${librariesHTML}
                            </div>
                            
                            <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
                                <h3 class="font-semibold text-green-800 mb-3 flex items-center">
                                    <i class="fas fa-party-horn text-green-600 mr-2"></i>
                                    After Setup
                                </h3>
                                <p class="text-sm text-green-700 mb-3">Once you've created all lists and libraries:</p>
                                <ol class="list-decimal list-inside text-sm text-green-700 space-y-2">
                                    <li>Save your SharePoint integration settings in LMS</li>
                                    <li>Enable the sync options you need</li>
                                    <li>Test the integration again to verify everything works</li>
                                    <li>Your LMS data will automatically sync to SharePoint!</li>
                                </ol>
                            </div>
                            
                            <div class="bg-amber-50 border border-amber-200 rounded-lg p-4">
                                <h3 class="font-semibold text-amber-800 mb-3 flex items-center">
                                    <i class="fas fa-exclamation-triangle text-amber-600 mr-2"></i>
                                    Important Notes
                                </h3>
                                <ul class="text-sm text-amber-700 space-y-2">
                                    <li class="flex items-start"><i class="fas fa-arrow-right text-amber-600 mr-2 mt-0.5"></i> Column names must match exactly (case-sensitive)</li>
                                    <li class="flex items-start"><i class="fas fa-arrow-right text-amber-600 mr-2 mt-0.5"></i> Choice columns must include all specified options</li>
                                    <li class="flex items-start"><i class="fas fa-arrow-right text-amber-600 mr-2 mt-0.5"></i> Required columns must be marked as required in SharePoint</li>
                                    <li class="flex items-start"><i class="fas fa-arrow-right text-amber-600 mr-2 mt-0.5"></i> If you change LMS field names later, update SharePoint columns accordingly</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    // Manual SharePoint Sync Functions
    let currentSyncTaskId = null;
    let syncStatusInterval = null;

    function startManualSync(direction) {
        const button = document.getElementById(direction === 'to_sharepoint' ? 'sync-to-sharepoint-btn' : 'sync-from-sharepoint-btn');
        const statusDiv = document.getElementById('sync-status');
        const resultDiv = document.getElementById('sync-result');
        const statusText = document.getElementById('sync-status-text');
        const progressBar = document.getElementById('sync-progress-bar');
        
        // Show status and hide result
        statusDiv.classList.remove('hidden');
        resultDiv.classList.add('hidden');
        
        // Disable both sync buttons
        document.getElementById('sync-to-sharepoint-btn').disabled = true;
        document.getElementById('sync-from-sharepoint-btn').disabled = true;
        
        // Update status text
        const directionLabel = direction === 'to_sharepoint' ? 'LMS → SharePoint' : 'SharePoint → LMS';
        statusText.textContent = `Starting ${directionLabel} synchronization...`;
        
        // Reset progress bar
        progressBar.style.width = '0%';
        
        // Start sync
        fetch('/account/sharepoint-sync/', {
            method: 'POST',
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                direction: direction,
                sync_type: 'all'
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                currentSyncTaskId = data.task_id;
                
                // Check if this is a synchronous sync (no Celery)
                if (data.is_async === false) {
                    // Handle synchronous sync - already completed
                    statusText.textContent = `${directionLabel} sync completed`;
                    progressBar.style.width = '100%';
                    
                    // Show success result immediately
                    setTimeout(() => {
                        showSyncSuccess(data.result);
                        // Re-enable buttons
                        document.getElementById('sync-to-sharepoint-btn').disabled = false;
                        document.getElementById('sync-from-sharepoint-btn').disabled = false;
                    }, 1000);
                } else {
                    // Handle asynchronous sync - start polling
                    statusText.textContent = `${directionLabel} sync in progress...`;
                    progressBar.style.width = '25%';
                    
                    // Start polling for status
                    startSyncStatusPolling();
                }
            } else {
                showSyncError(data.error || 'Failed to start sync');
            }
        })
        .catch(error => {
            console.error('Error starting sync:', error);
            showSyncError('Network error occurred while starting sync');
        });
    }

    function startSyncStatusPolling() {
        if (!currentSyncTaskId) return;
        
        syncStatusInterval = setInterval(() => {
            fetch(`/account/sharepoint-sync-status/${currentSyncTaskId}/`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const progressBar = document.getElementById('sync-progress-bar');
                const statusText = document.getElementById('sync-status-text');
                
                if (data.ready) {
                    // Task completed
                    clearInterval(syncStatusInterval);
                    syncStatusInterval = null;
                    currentSyncTaskId = null;
                    
                    if (data.success) {
                        showSyncSuccess(data.result);
                        progressBar.style.width = '100%';
                    } else {
                        showSyncError(data.error || 'Sync failed');
                    }
                    
                    // Re-enable buttons
                    document.getElementById('sync-to-sharepoint-btn').disabled = false;
                    document.getElementById('sync-from-sharepoint-btn').disabled = false;
                } else {
                    // Still running
                    if (data.status === 'PROGRESS') {
                        progressBar.style.width = '50%';
                        statusText.textContent = 'Processing data...';
                    } else if (data.status === 'PENDING') {
                        progressBar.style.width = '25%';
                        statusText.textContent = 'Waiting in queue...';
                    } else {
                        progressBar.style.width = '75%';
                        statusText.textContent = 'Finalizing sync...';
                    }
                }
            })
            .catch(error => {
                console.error('Error checking sync status:', error);
                clearInterval(syncStatusInterval);
                showSyncError('Error monitoring sync progress');
                
                // Re-enable buttons
                document.getElementById('sync-to-sharepoint-btn').disabled = false;
                document.getElementById('sync-from-sharepoint-btn').disabled = false;
            });
        }, 2000); // Poll every 2 seconds
    }

    function showSyncSuccess(result) {
        const statusDiv = document.getElementById('sync-status');
        const resultDiv = document.getElementById('sync-result');
        
        statusDiv.classList.add('hidden');
        resultDiv.classList.remove('hidden');
        
        let processed = result?.processed || 0;
        let created = result?.created || 0;
        let updated = result?.updated || 0;
        let errors = result?.errors || 0;
        
        resultDiv.innerHTML = `
            <div class="bg-green-50 border border-green-200 rounded-lg p-3">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-green-800">Sync Completed Successfully!</h3>
                        <div class="mt-2 text-sm text-green-700">
                            <p><strong>Processed:</strong> ${processed} records</p>
                            <p><strong>Created:</strong> ${created} • <strong>Updated:</strong> ${updated}</p>
                            ${errors > 0 ? `<p class="text-orange-600"><strong>Errors:</strong> ${errors}</p>` : ''}
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        // Auto-hide result after 10 seconds
        setTimeout(() => {
            resultDiv.classList.add('hidden');
        }, 10000);
    }

    function showSyncError(error) {
        const statusDiv = document.getElementById('sync-status');
        const resultDiv = document.getElementById('sync-result');
        
        statusDiv.classList.add('hidden');
        resultDiv.classList.remove('hidden');
        
        resultDiv.innerHTML = `
            <div class="bg-red-50 border border-red-200 rounded-lg p-3">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-red-800">Sync Failed</h3>
                        <div class="mt-2 text-sm text-red-700">
                            <p>${error}</p>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        // Re-enable buttons
        document.getElementById('sync-to-sharepoint-btn').disabled = false;
        document.getElementById('sync-from-sharepoint-btn').disabled = false;
    }

    // Make functions globally available
    window.toggleAzureHelp = toggleAzureHelp;
    window.toggleSharePointHelp = toggleSharePointHelp;
    window.togglePowerBIHelp = togglePowerBIHelp;
    window.copyToClipboard = copyToClipboard;
    window.toggleSharePointEditMode = toggleSharePointEditMode;
    window.testSharePointConnection = testSharePointConnection;
    window.testSharePointConnectionInEdit = testSharePointConnectionInEdit;
    window.showManualSetupGuide = showManualSetupGuide;
    window.startManualSync = startManualSync;

    // Additional handling for business limits modal
    const cancelEditBusinessLimitsBtn = document.getElementById('cancelEditBusinessLimits');
    const saveBusinessLimitsBtn = document.getElementById('saveBusinessLimits');
    
    if (cancelEditBusinessLimitsBtn) {
        cancelEditBusinessLimitsBtn.addEventListener('click', hideAllModals);
    }
    
    if (saveBusinessLimitsBtn) {
        saveBusinessLimitsBtn.addEventListener('click', function() {
            const form = document.getElementById('businessLimitsForm');
            const formData = new FormData(form);
            const businessId = document.getElementById('businessIdInput').value;
            
            if (!businessId) {
                alert('Error: Business ID not found');
                return;
            }
            
            // Show loading state
            saveBusinessLimitsBtn.disabled = true;
            saveBusinessLimitsBtn.textContent = 'Saving...';
            
            // Submit via AJAX
            fetch(`/account/business-limits/${businessId}/update/`, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    hideAllModals();
                    // Refresh the page to show updated data
                    window.location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while saving business limits');
            })
            .finally(() => {
                // Reset button state
                saveBusinessLimitsBtn.disabled = false;
                saveBusinessLimitsBtn.textContent = 'Save';
            });
        });
    }

    // Storage Management Modal Event Handlers
    const cancelStorageManagementBtn = document.getElementById('cancelStorageManagement');
    const saveStorageSettingsBtn = document.getElementById('saveStorageSettings');

    if (cancelStorageManagementBtn) {
        cancelStorageManagementBtn.addEventListener('click', hideAllModals);
    }

    if (saveStorageSettingsBtn) {
        saveStorageSettingsBtn.addEventListener('click', function() {
            const form = document.getElementById('storageManagementForm');
            const formData = new FormData(form);
            const branchId = document.getElementById('storageBranchId').value;

            if (!branchId) {
                alert('Error: Branch ID not found');
                return;
            }

            // Show loading state
            saveStorageSettingsBtn.disabled = true;
            saveStorageSettingsBtn.textContent = 'Saving...';

            // Submit via AJAX
            fetch(`/account/storage/manage/${branchId}/`, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    hideAllModals();
                    // Refresh the page to show updated data
                    window.location.reload();
                } else {
                    alert('Error: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while saving storage settings');
            })
            .finally(() => {
                // Reset button state
                saveStorageSettingsBtn.disabled = false;
                saveStorageSettingsBtn.textContent = 'Save Changes';
            });
        });
    }

    // Additional event handling for accordion sections if needed
    // console.log removed for production
    
    // Load job lists when data management section is opened
    if (window.location.hash === '#data_management' || new URLSearchParams(window.location.search).get('tab') === 'data_management') {
        // console.log removed for production
        loadExportJobs();
        loadImportJobs();
        // Only load backups for superadmin users
        {% if user.role == 'superadmin' %}
        loadBackups();
        {% endif %}
    }
    
    // Removed old Alpine.js initialization - using simplified accordion controller instead
});

// Zoom Integration Functions
function testZoomConnection() {
    // Show loading state
    const button = event.target;
    const originalText = button.textContent;
    button.textContent = 'Testing...';
    button.disabled = true;
    
    fetch('/account/test-zoom-connection/', {
        method: 'POST',
        headers: {
            'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
            'Content-Type': 'application/json'
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert(`✅ Connection successful!\n\nUser Email: ${data.user_email}\nUser Type: ${data.user_type}\nAccount ID: ${data.account_id}`);
        } else {
            alert(`❌ Connection failed:\n\n${data.error}`);
        }
    })
    .catch(error => {
        console.error('Error testing Zoom connection:', error);
        alert('❌ An error occurred while testing the connection. Please try again.');
    })
    .finally(() => {
        // Reset button state
        button.textContent = originalText;
        button.disabled = false;
    });
}

// SCORM Integration Functions
function toggleScormEditMode() {
    const editMode = document.getElementById('scorm-edit-mode');
    const detailsView = editMode.previousElementSibling; // The integration details view
    
    if (editMode.classList.contains('hidden')) {
        editMode.classList.remove('hidden');
        if (detailsView) detailsView.style.display = 'none';
    } else {
        editMode.classList.add('hidden');
        if (detailsView) detailsView.style.display = 'block';
    }
}

function cancelScormEdit() {
    const editMode = document.getElementById('scorm-edit-mode');
    const detailsView = editMode.previousElementSibling;
    
    editMode.classList.add('hidden');
    if (detailsView) detailsView.style.display = 'block';
}

function testScormConnection() {
    // Show loading state
    const button = event.target;
    const originalText = button.textContent;
    button.textContent = 'Testing...';
    button.disabled = true;
    
    // console.log removed for production
    
    // Get CSRF token - try multiple methods
    let csrfValue = null;
    
    // Method 1: Try to get from any form on the page
    const csrfToken = document.querySelector('[name=csrfmiddlewaretoken]');
    if (csrfToken && csrfToken.value) {
        csrfValue = csrfToken.value;
        // console.log removed for production
    } else {
        // Method 2: Try to get from cookies
        const cookies = document.cookie.split(';');
        for (let cookie of cookies) {
            const [name, value] = cookie.trim().split('=');
            if (name === 'csrftoken') {
                csrfValue = value;
                // console.log removed for production
                break;
            }
        }
    }
    
    // Method 3: Try to get from meta tag (if available)
    if (!csrfValue) {
        const metaToken = document.querySelector('meta[name=csrf-token]');
        if (metaToken && metaToken.content) {
            csrfValue = metaToken.content;
            // console.log removed for production
        }
    }
    
    if (!csrfValue) {
        console.error('CSRF token not found in form, cookies, or meta tag');
        console.error('Available form elements:', document.querySelectorAll('input[name]'));
        console.error('Available cookies:', document.cookie);
        console.error('Available meta tags:', document.querySelectorAll('meta[name]'));
        alert('❌ Security token not found. Please refresh the page and try again.');
        button.textContent = originalText;
        button.disabled = false;
        return;
    }
    
    // console.log removed for production
    
    // Create AbortController for timeout
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout
    
    fetch('/account/test-scorm-connection/', {
        method: 'POST',
        headers: {
            'X-CSRFToken': csrfValue,
            'Content-Type': 'application/json'
        },
        signal: controller.signal
    })
    .then(response => {
        // console.log removed for production
        // console.log removed for production
        // console.log removed for production
        // console.log removed for production
        // console.log removed for production
        
        if (!response.ok) {
            const status = response.status || 'Unknown';
            const statusText = response.statusText || 'Unknown Error';
            throw new Error(`HTTP ${status}: ${statusText}`);
        }
        
        // Use response.json() instead of response.text() for better error handling
        return response.json();
    })
    .then(data => {
        // console.log removed for production
        
        if (data.success) {
            alert("✅ Native SCORM is ready - no connection test needed!"); else if (error.name === 'TypeError' && error.message.includes('fetch')) {
            alert('❌ Network error: Unable to reach the server. Please check your internet connection and try again.');
        } else if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {
            alert('❌ Network error: Failed to fetch. Please check your internet connection and try again.');
        } else if (error.message.includes('HTTP 404')) {
            alert('❌ Server error: Connection test endpoint not found. Please contact support.');
        } else if (error.message.includes('HTTP 500')) {
            alert('❌ Server error: Internal server error occurred. Please try again later or contact support.');
        } else if (error.message.includes('HTTP 403')) {
            alert('❌ Security error: Access forbidden. Please refresh the page and try again.');
        } else if (error.message.includes('HTTP undefined')) {
            alert('❌ Connection error: Unable to establish connection to server. Please check your internet connection and try again.');
        } else {
            alert(`❌ An error occurred while testing the connection.\n\nError: ${error.message}\n\nPlease try again or contact support if the problem persists.`);
        }
    })
    .finally(() => {
        // Clear timeout and reset button state
        clearTimeout(timeoutId);
        button.textContent = originalText;
        button.disabled = false;
    });
}

function toggleScormAdvancedSettings() {
    const advancedSettings = document.getElementById('scorm-advanced-settings');
    if (advancedSettings.classList.contains('hidden')) {
        advancedSettings.classList.remove('hidden');
    } else {
        advancedSettings.classList.add('hidden');
    }
}

function toggleNewScormAdvancedSettings() {
    const advancedSettings = document.getElementById('new-scorm-advanced-settings');
    if (advancedSettings.classList.contains('hidden')) {
        advancedSettings.classList.remove('hidden');
    } else {
        advancedSettings.classList.add('hidden');
    }
}


// Data Management Functions
function startExport() {
    const exportType = document.getElementById('export_type').value;
    const includeFiles = document.getElementById('include_files').checked;
    
    const formData = new FormData();
    formData.append('export_type', exportType);
    formData.append('include_files', includeFiles);
    formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);
    
    fetch('/account/export/start/', {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert(data.message);
            // Start polling for job status
            pollJobStatus(data.job_id, 'export');
            loadExportJobs();
        } else {
            alert('Error: ' + data.error);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while starting export');
    });
}

function startImport() {
    const importType = document.getElementById('import_type').value;
    const replaceExisting = document.getElementById('replace_existing').checked;
    const importFile = document.getElementById('import_file').files[0];
    
    if (!importFile) {
        alert('Please select a file to import');
        return;
    }
    
    const formData = new FormData();
    formData.append('import_type', importType);
    formData.append('replace_existing', replaceExisting);
    formData.append('import_file', importFile);
    formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);
    
    fetch('/account/import/start/', {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert(data.message);
            // Clear the file input
            document.getElementById('import_file').value = '';
            // Start polling for job status
            pollJobStatus(data.job_id, 'import');
            loadImportJobs();
        } else {
            alert('Error: ' + data.error);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while starting import');
    });
}

function createBackup() {
    const description = document.getElementById('backup_description').value || 'Manual backup';
    
    const formData = new FormData();
    formData.append('description', description);
    formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);
    
    fetch('/account/backup/create/', {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert(data.message);
            document.getElementById('backup_description').value = '';
            // Reload backup list after creation
            loadBackups();
        } else {
            alert('Error: ' + data.error);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while creating backup');
    });
}

function loadBackups() {
    // console.log removed for production
    const container = document.getElementById('backup_list');
    
    if (!container) {
        console.error('Backup list container not found');
        return;
    }
    
    // Show loading state
    container.innerHTML = '<p class="text-gray-500 text-sm">Loading backups...</p>';
    
    fetch(window.BACKUP_LIST_URL)
    .then(response => {
        // console.log removed for production
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        return response.json();
    })
    .then(data => {
        // console.log removed for production
        if (data.success) {
            container.innerHTML = '';
            
            if (data.backups.length === 0) {
                container.innerHTML = '<p class="text-gray-500 text-sm">No backups found</p>';
                return;
            }
            
            data.backups.forEach(backup => {
                const backupElement = createBackupElement(backup);
                container.appendChild(backupElement);
            });
            
            // console.log removed for production
        } else {
            container.innerHTML = `<p class="text-red-500 text-sm">Error: ${data.error || 'Unknown error'}</p>`;
        }
    })
    .catch(error => {
        console.error('Error loading backups:', error);
        container.innerHTML = `<p class="text-red-500 text-sm">Error loading backups: ${error.message}</p>`;
    });
}

function createBackupElement(backup) {
    const div = document.createElement('div');
    div.className = 'border rounded-lg p-3 bg-gray-50';
    
    const createdAt = new Date(backup.created_at).toLocaleString();
    const fileSize = formatFileSize(backup.file_size);
    
    let content = `
        <div class="flex justify-between items-start mb-2">
            <div class="flex-1">
                <h6 class="font-medium text-sm">${backup.file_name}</h6>
                <p class="text-xs text-gray-600">${backup.description || 'No description'}</p>
            </div>
            <span class="px-2 py-1 text-xs rounded-full ${backup.file_exists ? 'text-green-600 bg-green-100' : 'text-red-600 bg-red-100'}">
                ${backup.file_exists ? 'Available' : 'Missing'}
            </span>
        </div>
        <div class="flex justify-between items-center text-xs text-gray-500">
            <div>
                <span>${backup.backup_type.charAt(0).toUpperCase() + backup.backup_type.slice(1)} • ${fileSize} • ${createdAt}</span>
                <br>
                <span>Created by: ${backup.created_by}</span>
            </div>
            <div class="flex gap-2">
    `;
    
    if (backup.file_exists && backup.download_url) {
        content += `
            <a href="${backup.download_url}" class="text-blue-600 hover:text-blue-800 font-medium">
                <i class="fas fa-download mr-1"></i>Download
            </a>
        `;
    }
    
    content += `
            <button onclick="deleteBackup(${backup.id})" class="text-red-600 hover:text-red-800 font-medium">
                <i class="fas fa-trash mr-1"></i>Delete
            </button>
        </div>
    </div>
    `;
    
    div.innerHTML = content;
    return div;
}

function deleteBackup(backupId) {
    if (!confirm('Are you sure you want to delete this backup? This action cannot be undone.')) {
        return;
    }
    
    const formData = new FormData();
    formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);
    
    fetch(`/account/backup/delete/${backupId}/`, {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            alert(data.message);
            loadBackups(); // Reload the backup list
        } else {
            alert('Error: ' + data.error);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while deleting backup');
    });
}

function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// Utility function for fetch with retry logic
async function fetchWithRetry(url, options = {}, retries = 3, delay = 1000) {
    for (let i = 0; i < retries; i++) {
        try {
            const response = await fetch(url, options);
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            return await response.json();
        } catch (error) {
            console.warn(`Fetch attempt ${i + 1} failed:`, error.message);
            if (i === retries - 1) throw error;
            
            // Wait before retrying with exponential backoff
            await new Promise(resolve => setTimeout(resolve, delay * Math.pow(2, i)));
        }
    }
}

// Business Settings Functions
async function loadBusinessSettings() {
    // console.log removed for production
    const container = document.querySelector('[data-section-id="business"] .accordion-content tbody');
    
    if (!container) {
        console.error('Business settings container not found');
        return;
    }
    
    // Show loading state with spinner
    container.innerHTML = `
        <tr>
            <td colspan="4" class="px-6 py-8 text-center">
                <div class="flex items-center justify-center space-x-2">
                    <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600"></div>
                    <span class="text-sm text-gray-600">Loading business data...</span>
                </div>
            </td>
        </tr>
    `;
    
    try {
        const data = await fetchWithRetry(window.LOAD_BUSINESS_DATA_URL);
        // console.log removed for production
        
        if (data.success) {
            container.innerHTML = '';
            
            if (data.businesses.length === 0) {
                container.innerHTML = '<tr><td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">No businesses found</td></tr>';
                return;
            }
            
            data.businesses.forEach(businessData => {
                const row = createBusinessRow(businessData);
                container.appendChild(row);
            });
            
            // console.log removed for production
        } else {
            throw new Error(data.error || 'Unknown error from server');
        }
    } catch (error) {
        console.error('Error loading business data:', error);
        container.innerHTML = `
            <tr>
                <td colspan="4" class="px-6 py-4 text-center">
                    <div class="text-red-500 text-sm mb-2">
                        <i class="fas fa-exclamation-triangle mr-1"></i>
                        Error loading business data: ${error.message}
                    </div>
                    <button onclick="loadBusinessSettings()" class="px-3 py-1 text-white text-xs rounded" style="background-color: #1c2260;" onmouseover="this.style.backgroundColor='#181f56'" onmouseout="this.style.backgroundColor='#1c2260'">
                        <i class="fas fa-redo mr-1"></i>Retry
                    </button>
                </td>
            </tr>
        `;
    }
}

function createBusinessRow(businessData) {
    const tr = document.createElement('tr');
    tr.className = 'business-row';
    tr.setAttribute('data-business-id', businessData.business.id);
    
    tr.innerHTML = `
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm font-medium text-gray-900">${businessData.business.name}</div>
            <div class="text-xs text-gray-500">Created: ${new Date(businessData.business.created_at).toLocaleDateString()}</div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex flex-col space-y-2">
                <div>
                    <div class="text-sm text-gray-900">Users: ${businessData.usage_data.users.current} / ${businessData.usage_data.users.limit}</div>
                    <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                        <div class="bg-blue-600 h-2 rounded-full" style="width: ${businessData.usage_data.users.percentage}%"></div>
                    </div>
                </div>
                <div>
                    <div class="text-sm text-gray-900">Branches: ${businessData.usage_data.branches.current} / ${businessData.usage_data.branches.limit}</div>
                    <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                        <div class="bg-green-600 h-2 rounded-full" style="width: ${businessData.usage_data.branches.percentage}%"></div>
                    </div>
                </div>
            </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-xs text-gray-500">
                <div>User Limit: ${businessData.business_limits.total_user_limit}</div>
                <div>Branch Limit: ${businessData.business_limits.branch_creation_limit}</div>
            </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
            <button type="button" class="text-blue-600 hover:text-blue-900 edit-business-limits" 
                    data-business-id="${businessData.business.id}"
                    data-business-name="${businessData.business.name}"
                    data-user-limit="${businessData.business_limits.total_user_limit}"
                    data-branch-limit="${businessData.business_limits.branch_creation_limit}"
                    data-current-users="${businessData.usage_data.users.current}"
                    data-current-branches="${businessData.usage_data.branches.current}"
                    onclick="openBusinessLimitsModal(this)">
                Edit Limits
            </button>
        </td>
    `;
    
    return tr;
}

// Branches Settings Functions
async function loadBranchesSettings() {
    // console.log removed for production
    const container = document.querySelector('[data-section-id="branches"] .accordion-content tbody');
    
    if (!container) {
        console.error('Branches settings container not found');
        return;
    }
    
    // Show loading state with spinner
    container.innerHTML = `
        <tr>
            <td colspan="3" class="px-6 py-8 text-center">
                <div class="flex items-center justify-center space-x-2">
                    <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-green-600"></div>
                    <span class="text-sm text-gray-600">Loading branches data...</span>
                </div>
            </td>
        </tr>
    `;
    
    try {
        const data = await fetchWithRetry(window.LOAD_BRANCHES_DATA_URL);
        // console.log removed for production
        
        if (data.success) {
            container.innerHTML = '';
            
            if (data.branches.length === 0) {
                container.innerHTML = '<tr><td colspan="3" class="px-6 py-4 text-center text-sm text-gray-500">No branches found</td></tr>';
                return;
            }
            
            // Create branches list HTML
            const branchesHtml = createBranchesHtml(data.branches);
            container.innerHTML = branchesHtml;
            
            // console.log removed for production
        } else {
            throw new Error(data.error || 'Unknown error from server');
        }
    } catch (error) {
        console.error('Error loading branches data:', error);
        container.innerHTML = `
            <tr>
                <td colspan="3" class="px-6 py-4 text-center">
                    <div class="text-red-500 text-sm mb-2">
                        <i class="fas fa-exclamation-triangle mr-1"></i>
                        Error loading branches data: ${error.message}
                    </div>
                    <button onclick="loadBranchesSettings()" class="px-3 py-1 bg-green-500 text-white text-xs rounded hover:bg-green-600">
                        <i class="fas fa-redo mr-1"></i>Retry
                    </button>
                </td>
            </tr>
        `;
    }
}

function createBranchesHtml(branches) {
    return branches.map(branchData => `
        <tr class="branch-row" data-branch-id="${branchData.branch.id}">
            <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">${branchData.branch.name}</div>
                <div class="text-xs text-gray-500">Created: ${new Date(branchData.branch.created_at).toLocaleDateString()}</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex flex-col">
                    <div class="text-sm text-gray-900">
                        ${branchData.usage_data.total.current} / ${branchData.user_limits.user_limit}
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-3 mt-1">
                        <div class="bg-blue-600 h-3 rounded-full" style="width: ${branchData.usage_data.total.percentage}%"></div>
                    </div>
                    <div class="text-xs text-gray-500 mt-1">
                        Admins: ${branchData.usage_data.admin.current} | 
                        Instructors: ${branchData.usage_data.instructor.current} | 
                        Learners: ${branchData.usage_data.learner.current}
                    </div>
                </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <button type="button" class="text-blue-600 hover:text-blue-900 edit-branch-limits" 
                        data-branch-id="${branchData.branch.id}"
                        data-branch-name="${branchData.branch.name}"
                        data-total-limit="${branchData.user_limits.user_limit}"
                        data-total-current="${branchData.usage_data.total.current}"
                        onclick="openBranchLimitsModal(this)">
                    Edit Limits
                </button>
            </td>
        </tr>
    `).join('');
}

function loadExportJobs() {
    fetch('/account/export/jobs/')
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            const container = document.getElementById('export_jobs');
            container.innerHTML = '';
            
            if (data.jobs.length === 0) {
                container.innerHTML = '<p class="text-gray-500 text-sm">No export jobs found</p>';
                return;
            }
            
            data.jobs.forEach(job => {
                const jobElement = createJobElement(job, 'export');
                container.appendChild(jobElement);
            });
        }
    })
    .catch(error => {
        console.error('Error loading export jobs:', error);
    });
}

function loadImportJobs() {
    fetch('/account/import/jobs/')
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            const container = document.getElementById('import_jobs');
            container.innerHTML = '';
            
            if (data.jobs.length === 0) {
                container.innerHTML = '<p class="text-gray-500 text-sm">No import jobs found</p>';
                return;
            }
            
            data.jobs.forEach(job => {
                const jobElement = createJobElement(job, 'import');
                container.appendChild(jobElement);
            });
        }
    })
    .catch(error => {
        console.error('Error loading import jobs:', error);
    });
}

function createJobElement(job, type) {
    const div = document.createElement('div');
    div.className = 'border rounded-lg p-3 bg-gray-50';
    
    const statusColors = {
        'pending': 'text-yellow-600 bg-yellow-100',
        'processing': 'text-blue-600 bg-blue-100',
        'completed': 'text-green-600 bg-green-100',
        'failed': 'text-red-600 bg-red-100',
        'partial': 'text-orange-600 bg-orange-100'
    };
    
    const statusClass = statusColors[job.status] || 'text-gray-600 bg-gray-100';
    const createdAt = new Date(job.created_at).toLocaleString();
    
    let content = `
        <div class="flex justify-between items-start mb-2">
            <h6 class="font-medium text-sm">${job[type + '_type'].charAt(0).toUpperCase() + job[type + '_type'].slice(1)} ${type.charAt(0).toUpperCase() + type.slice(1)}</h6>
            <span class="px-2 py-1 text-xs rounded-full ${statusClass}">${job.status.charAt(0).toUpperCase() + job.status.slice(1)}</span>
        </div>
        <p class="text-xs text-gray-600 mb-2">${createdAt}</p>
    `;
    
    if (type === 'export' && job.status === 'completed') {
        content += `
            <div class="flex justify-between items-center">
                <span class="text-xs text-gray-500">${job.record_count} records</span>
                <a href="${job.download_url}" class="text-blue-600 hover:text-blue-800 text-xs font-medium">
                    <i class="fas fa-download mr-1"></i>Download
                </a>
            </div>
        `;
    } else if (type === 'import' && job.status === 'completed') {
        content += `
            <div class="text-xs text-gray-500">
                Created: ${job.records_created}, Updated: ${job.records_updated}
                ${job.records_failed > 0 ? `, Failed: ${job.records_failed}` : ''}
            </div>
        `;
    } else if (job.status === 'failed' && job.error_message) {
        content += `<p class="text-xs text-red-600 mt-1">${job.error_message}</p>`;
    }
    
    div.innerHTML = content;
    return div;
}

function pollJobStatus(jobId, type) {
    const poll = () => {
        fetch(`/account/${type}/status/${jobId}/`)
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                if (data.status === 'processing' || data.status === 'pending') {
                    // Continue polling
                    setTimeout(poll, 3000);
                } else {
                    // Job completed (success, failed, or partial)
                    if (type === 'export') {
                        loadExportJobs();
                    } else {
                        loadImportJobs();
                    }
                    
                    if (data.status === 'completed') {
                        alert(`${type.charAt(0).toUpperCase() + type.slice(1)} completed successfully!`);
                    } else if (data.status === 'failed') {
                        alert(`${type.charAt(0).toUpperCase() + type.slice(1)} failed: ${data.error_message || 'Unknown error'}`);
                    } else if (data.status === 'partial') {
                        alert(`${type.charAt(0).toUpperCase() + type.slice(1)} completed with some errors. Check the job details for more information.`);
                    }
                }
            }
        })
        .catch(error => {
            console.error('Error polling job status:', error);
        });
    };
    
    // Start polling after a short delay
    setTimeout(poll, 2000);
}

// Form validation and UI updates

// Character counter updates
function updateCharacterCount(textareaId, counterId, maxLength) {
    const textarea = document.getElementById(textareaId);
    const counter = document.getElementById(counterId);
    
    if (textarea && counter) {
        const currentLength = textarea.value.length;
        counter.textContent = currentLength;
        
        // Update styling based on character count
        if (currentLength > maxLength * 0.9) {
            counter.parentElement.className = 'text-xs text-orange-500 mt-1';
        } else if (currentLength > maxLength * 0.8) {
            counter.parentElement.className = 'text-xs text-yellow-500 mt-1';
        } else {
            counter.parentElement.className = 'text-xs text-gray-500 mt-1';
        }
    }
}



// Initialize functionality
document.addEventListener('DOMContentLoaded', function() {
    // Account settings initialization code can go here if needed
    
    // AI Token Modal Event Handlers
    const aiTokenUnlimited = document.getElementById('aiTokenUnlimited');
    const aiTokenLimitGroup = document.getElementById('aiTokenLimitGroup');
    const cancelAITokenModalBtn = document.getElementById('cancelAITokenModal');
    const saveAITokenLimitsBtn = document.getElementById('saveAITokenLimits');
    
    // Handle unlimited checkbox toggle
    if (aiTokenUnlimited && aiTokenLimitGroup) {
        aiTokenUnlimited.addEventListener('change', function() {
            aiTokenLimitGroup.style.display = this.checked ? 'none' : 'block';
        });
    }
    
    // Handle modal close buttons
    if (cancelAITokenModalBtn) {
        cancelAITokenModalBtn.addEventListener('click', closeAITokenModal);
    }
    
    // Handle save button
    if (saveAITokenLimitsBtn) {
        saveAITokenLimitsBtn.addEventListener('click', function() {
            saveAITokenLimits();
        });
    }
    
    // Handle modal backdrop click
    const aiTokenModal = document.getElementById('aiTokenManagementModal');
    if (aiTokenModal) {
        aiTokenModal.addEventListener('click', function(e) {
            if (e.target === this) {
                closeAITokenModal();
            }
        });
    }
});

// AI Token Management Modal Functions
function openAITokenModal(branchId, branchName) {
    // console.log removed for production
    
    // Hide all other modals first
    hideAllModals();
    
    // Get the modal elements
    const modal = document.getElementById('aiTokenManagementModal');
    const branchNameDisplay = document.getElementById('aiTokenBranchNameDisplay');
    const branchIdInput = document.getElementById('aiTokenBranchId');
    const loadingState = document.getElementById('aiTokenLoadingState');
    const modalContent = document.getElementById('aiTokenModalContent');
    
    if (!modal) {
        console.error("AI Token modal element not found!");
        return;
    }
    
    // Set branch info
    if (branchNameDisplay) branchNameDisplay.textContent = `Managing AI tokens for: ${branchName}`;
    if (branchIdInput) branchIdInput.value = branchId;
    
    // Show loading state and hide content
    if (loadingState) loadingState.classList.remove('hidden');
    if (modalContent) modalContent.classList.add('hidden');
    
    // Show modal
    modal.classList.remove('hidden');
    modal.style.display = 'block';
    
    // Load token data for this branch
    loadAITokenData(branchId);
}

function closeAITokenModal() {
    const modal = document.getElementById('aiTokenManagementModal');
    if (modal) {
        modal.classList.add('hidden');
        modal.style.display = 'none';
    }
}

async function loadAITokenData(branchId) {
    try {
        // console.log removed for production
        
        // Make AJAX request to get token data
        const response = await fetch(`/tinymce/manage-branch-tokens/${branchId}/data/`, {
            method: 'GET',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'Content-Type': 'application/json',
            },
            credentials: 'same-origin'
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        // console.log removed for production
        
        // Update modal content with data
        updateAITokenModalContent(data);
        
        // Hide loading state and show content
        const loadingState = document.getElementById('aiTokenLoadingState');
        const modalContent = document.getElementById('aiTokenModalContent');
        if (loadingState) loadingState.classList.add('hidden');
        if (modalContent) modalContent.classList.remove('hidden');
        
    } catch (error) {
        console.error('Error loading AI token data:', error);
        
        // Show error message
        const loadingState = document.getElementById('aiTokenLoadingState');
        if (loadingState) {
            loadingState.innerHTML = `
                <div class="flex items-center justify-center py-8">
                    <div class="text-center">
                        <i class="fas fa-exclamation-triangle text-red-600 text-2xl mb-2"></i>
                        <p class="text-sm text-gray-600">Error loading token data: ${error.message}</p>
                        <button onclick="loadAITokenData(${branchId})" class="mt-2 text-purple-600 hover:text-purple-800 text-sm underline">
                            Try Again
                        </button>
                    </div>
                </div>
            `;
        }
    }
}

function updateAITokenModalContent(data) {
    // Update statistics
    document.getElementById('aiTokenCurrentUsage').textContent = data.current_usage || 0;
    document.getElementById('aiTokenMonthlyLimit').textContent = data.is_unlimited ? '∞' : (data.monthly_limit || 0);
    document.getElementById('aiTokenRemaining').textContent = data.is_unlimited ? '∞' : (data.remaining_tokens || 0);
    document.getElementById('aiTokenActiveUsers').textContent = data.user_count || 0;
    
    // Update progress bar
    const progressBar = document.getElementById('aiTokenProgressBar');
    const progressText = document.getElementById('aiTokenUsageText');
    const progressContainer = document.getElementById('aiTokenProgressContainer');
    
    if (data.is_unlimited) {
        progressContainer.classList.add('hidden');
    } else {
        progressContainer.classList.remove('hidden');
        const percentage = data.usage_percentage || 0;
        progressBar.style.width = `${Math.min(percentage, 100)}%`;
        
        // Update progress bar color based on usage
        progressBar.className = 'h-3 rounded-full transition-all duration-300';
        if (percentage >= 90) {
            progressBar.classList.add('bg-red-600');
        } else if (percentage >= 75) {
            progressBar.classList.add('bg-yellow-600');
        } else {
            progressBar.classList.add('bg-blue-600');
        }
        
        progressText.textContent = `${percentage.toFixed(1)}% of monthly limit used`;
    }
    
    // Update form values
    document.getElementById('aiTokenUnlimited').checked = data.is_unlimited || false;
    document.getElementById('aiTokenMonthlyLimitInput').value = data.monthly_limit || 10000;
    
    // Show/hide limit input based on unlimited status
    const limitGroup = document.getElementById('aiTokenLimitGroup');
    if (limitGroup) {
        limitGroup.style.display = data.is_unlimited ? 'none' : 'block';
    }
    
    // Update recent usage
    updateRecentUsage(data.recent_usage || []);
}

function updateRecentUsage(recentUsage) {
    const container = document.getElementById('aiTokenRecentUsage');
    if (!container) return;
    
    if (recentUsage.length === 0) {
        container.innerHTML = '<p class="text-sm text-gray-500 text-center">No recent usage activity.</p>';
        return;
    }
    
    const usageHTML = recentUsage.map(usage => {
        const statusIcon = usage.success ? '✓' : '✗';
        const statusClass = usage.success ? 'text-green-600' : 'text-red-600';
        const timeAgo = formatTimeAgo(usage.created_at);
        
        return `
            <div class="border-b border-gray-200 pb-2 mb-2 last:border-b-0">
                <div class="flex justify-between items-center">
                    <div>
                        <strong class="text-sm">${usage.user__username}</strong> - ${usage.tokens_used} tokens
                        <span class="${statusClass} ml-1">${statusIcon}</span>
                    </div>
                    <small class="text-gray-500">${timeAgo}</small>
                </div>
                <div class="text-xs text-gray-600 mt-1">
                    ${truncateText(usage.prompt_text, 80)}
                </div>
                ${!usage.success && usage.error_message ? 
                    `<div class="text-xs text-red-600 mt-1"><strong>Error:</strong> ${truncateText(usage.error_message, 60)}</div>` : 
                    ''
                }
            </div>
        `;
    }).join('');
    
    container.innerHTML = usageHTML;
}

async function saveAITokenLimits() {
    const branchId = document.getElementById('aiTokenBranchId').value;
    const isUnlimited = document.getElementById('aiTokenUnlimited').checked;
    const monthlyLimit = document.getElementById('aiTokenMonthlyLimitInput').value;
    
    const saveButton = document.getElementById('saveAITokenLimits');
    const originalText = saveButton.textContent;
    
    if (!isUnlimited && (!monthlyLimit || monthlyLimit <= 0)) {
        // Show validation error in button
        saveButton.textContent = 'Invalid limit';
        saveButton.classList.remove('bg-purple-600');
        saveButton.classList.add('bg-red-600');
        
        setTimeout(() => {
            saveButton.textContent = originalText;
            saveButton.classList.remove('bg-red-600');
            saveButton.classList.add('bg-purple-600');
            saveButton.disabled = false;
        }, 2000);
        
        return;
    }
    saveButton.textContent = 'Saving...';
    saveButton.disabled = true;
    
    try {
        const formData = new FormData();
        formData.append('action', 'update_limits');
        formData.append('is_unlimited', isUnlimited ? 'on' : '');
        formData.append('monthly_token_limit', monthlyLimit);
        formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);
        
        const response = await fetch(`/tinymce/manage-branch-tokens/${branchId}/`, {
            method: 'POST',
            body: formData,
            credentials: 'same-origin'
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        // Show subtle success indication
        const limitText = isUnlimited ? "unlimited" : `${parseInt(monthlyLimit).toLocaleString()} tokens/month`;
        // console.log removed for production
        
        // Show success in button text briefly
        saveButton.textContent = '✓ Saved';
        saveButton.classList.remove('bg-purple-600', 'hover:bg-purple-700');
        saveButton.classList.add('bg-green-600');
        
        // Auto-close the modal after successful save
        setTimeout(() => {
            closeAITokenModal();
            
            // Refresh the AI tokens section to show updated data
            const activeSection = document.querySelector('[data-section-id="ai_tokens"]');
            if (activeSection && activeSection.querySelector('.accordion-content').style.display !== 'none') {
                // Trigger a refresh of the AI tokens table data
                location.reload(); // Simple reload for now, could be optimized with AJAX refresh
            }
        }, 800); // Close after 800ms for smoother experience
        
    } catch (error) {
        console.error('Error saving token limits:', error);
        
        // Show error in button text briefly
        saveButton.textContent = '✗ Error';
        saveButton.classList.remove('bg-purple-600', 'hover:bg-purple-700');
        saveButton.classList.add('bg-red-600');
        
        // Reset button after 2 seconds
        setTimeout(() => {
            saveButton.textContent = originalText;
            saveButton.classList.remove('bg-red-600');
            saveButton.classList.add('bg-purple-600', 'hover:bg-purple-700');
            saveButton.disabled = false;
        }, 2000);
    } finally {
        // Don't reset immediately for success/error states
        if (!saveButton.textContent.includes('✓') && !saveButton.textContent.includes('✗')) {
            saveButton.textContent = originalText;
            saveButton.disabled = false;
        }
    }
}

// Helper functions
function formatTimeAgo(dateString) {
    const now = new Date();
    const date = new Date(dateString);
    const diffInSeconds = Math.floor((now - date) / 1000);
    
    if (diffInSeconds < 60) return `${diffInSeconds} seconds ago`;
    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;
    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;
    return `${Math.floor(diffInSeconds / 86400)} days ago`;
}

function truncateText(text, maxLength) {
    if (!text) return '';
    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;
}

// Legacy function name for backward compatibility
function openManageTokensPopup(url) {
    // Extract branch ID from URL
    const matches = url.match(/\/manage-branch-tokens\/(\d+)\//);
    if (matches && matches[1]) {
        const branchId = matches[1];
        // Get branch name from the manage link's data attributes
        const branchName = event.target.getAttribute('data-branch-name') || 'Unknown Branch';
        openAITokenModal(branchId, branchName);
    } else {
        console.error('Could not extract branch ID from URL:', url);
        // Silently fail without popup - just log the error
    }
}



</script>
{% endblock %}
