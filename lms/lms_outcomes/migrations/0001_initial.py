# Generated by Django 4.2.19 on 2025-09-23 08:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Outcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=350)),
                (
                    "friendly_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("friendly_description", models.TextField(blank=True, null=True)),
                ("criterion", models.TextField(blank=True, null=True)),
                ("proficiency_ratings", models.JSONField(blank=True, null=True)),
                ("mastery_points", models.IntegerField(default=3)),
                (
                    "calculation_method",
                    models.CharField(
                        choices=[
                            ("weighted_average", "Weighted Average"),
                            ("decaying_average", "Decaying Average"),
                            ("n_times", "n Number of Times"),
                            ("most_recent", "Most Recent Score"),
                            ("highest", "Highest score"),
                            ("average", "Average"),
                            ("no_point", "No Point"),
                        ],
                        default="weighted_average",
                        max_length=20,
                    ),
                ),
                ("last_item_weight", models.IntegerField(default=65)),
                ("times_to_achieve", models.IntegerField(default=5)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="OutcomeAlignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("assignment", "Assignment"),
                            ("quiz", "Quiz"),
                            ("discussion", "Discussion"),
                        ],
                        max_length=20,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="OutcomeEvaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        help_text="Calculated score based on the outcome's calculation method"
                    ),
                ),
                (
                    "proficiency_level",
                    models.CharField(
                        blank=True,
                        help_text="Text description of proficiency level (e.g., 'Mastery', 'Near Mastery')",
                        max_length=100,
                    ),
                ),
                ("calculation_date", models.DateTimeField(auto_now=True)),
                (
                    "evidence_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of evidence items used in calculation",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-calculation_date"],
            },
        ),
        migrations.CreateModel(
            name="OutcomeGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="RubricCriterionOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.FloatField(
                        default=1.0,
                        help_text="Weight of this criterion in the outcome calculation (0.0-1.0)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
