# Generated by Django 4.2.19 on 2025-09-23 08:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("branches", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AITokenUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tokens_used",
                    models.PositiveIntegerField(
                        help_text="Number of tokens consumed in this request"
                    ),
                ),
                (
                    "prompt_text",
                    models.TextField(
                        help_text="The prompt used for AI generation (truncated for privacy)"
                    ),
                ),
                (
                    "response_length",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Length of generated response in characters",
                    ),
                ),
                (
                    "model_used",
                    models.CharField(
                        default="claude-3-opus-20240229",
                        help_text="AI model used for generation",
                        max_length=100,
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the AI generation was successful",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if generation failed",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "AI Token Usage",
                "verbose_name_plural": "AI Token Usage Records",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BranchAITokenLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "monthly_token_limit",
                    models.PositiveIntegerField(
                        default=10000,
                        help_text="Maximum number of AI tokens allowed per month for this branch",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "is_unlimited",
                    models.BooleanField(
                        default=False,
                        help_text="If enabled, this branch has unlimited AI token usage",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "branch",
                    models.OneToOneField(
                        help_text="The branch these AI token limits apply to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_token_limits",
                        to="branches.branch",
                    ),
                ),
            ],
            options={
                "verbose_name": "Branch AI Token Limit",
                "verbose_name_plural": "Branch AI Token Limits",
                "ordering": ["branch__name"],
            },
        ),
    ]
