# Generated by Django 4.2.9 on 2025-07-13 08:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import lms_rubrics.models

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("conferences", "0002_initial"),
        ("discussions", "0004_discussion_instructions"),
        ("assignments", "0036_update_feedback_labels"),
        ("lms_rubrics", "0013_populate_rubric_history")
    ]

    operations = [
        migrations.CreateModel(
            name="RubricOverallFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback",
                    models.TextField(
                        blank=True,
                        help_text="Text feedback from instructor about the overall rubric evaluation",
                    ),
                ),
                (
                    "audio_feedback",
                    models.FileField(
                        blank=True,
                        help_text="Audio feedback file (mp3, wav, m4a, etc.)",
                        null=True,
                        upload_to=lms_rubrics.models.rubric_feedback_file_path,
                    ),
                ),
                (
                    "video_feedback",
                    models.FileField(
                        blank=True,
                        help_text="Video feedback file (mp4, mov, avi, etc.)",
                        null=True,
                        upload_to=lms_rubrics.models.rubric_feedback_file_path,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_private",
                    models.BooleanField(
                        default=False,
                        help_text="Whether feedback is visible to the student or only to instructors",
                    ),
                ),
                (
                    "conference",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related conference if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rubric_overall_feedback",
                        to="conferences.conference",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The instructor who created this feedback",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="given_rubric_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "discussion",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related discussion if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rubric_overall_feedback",
                        to="discussions.discussion",
                    ),
                ),
                (
                    "rubric",
                    models.ForeignKey(
                        help_text="The rubric this feedback is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overall_feedback",
                        to="lms_rubrics.rubric",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        help_text="The student who is receiving this feedback",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_rubric_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related assignment submission if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rubric_overall_feedback",
                        to="assignments.assignmentsubmission",
                    ),
                )
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["submission", "student"],
                        name="lms_rubrics_submiss_1d0c61_idx",
                    ),
                    models.Index(
                        fields=["discussion", "student"],
                        name="lms_rubrics_discuss_88f760_idx",
                    ),
                    models.Index(
                        fields=["conference", "student"],
                        name="lms_rubrics_confere_d3ffb1_idx",
                    ),
                    models.Index(
                        fields=["rubric", "student"],
                        name="lms_rubrics_rubric__614acd_idx",
                    ),
                    models.Index(
                        fields=["created_by", "-created_at"],
                        name="lms_rubrics_created_ee8bed_idx",
                    )
                ],
                "unique_together": {
                    ("discussion", "student"),
                    ("conference", "student"),
                    ("submission", "student")
                }
            },
        )
    ]
