# Generated by Django 4.2.19 on 2025-09-23 08:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        ("categories", "0001_initial"),
        ("conferences", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("groups", "0001_initial"),
        ("discussions", "0001_initial"),
        ("assignments", "0003_initial"),
        ("branches", "0002_initial"),
        ("quiz", "0001_initial"),
        ("certificates", "0002_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="topicprogress",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="topic_progress",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="assignment",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated assignment for Assignment type topics",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assignment_topics",
                to="assignments.assignment",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="conference",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated conference for ILT/Conference type topics",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="topics",
                to="conferences.conference",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="discussion",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated discussion for Discussion type topics",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="topics",
                to="discussions.discussion",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="quiz",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated quiz for Quiz type topics",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="topics",
                to="quiz.quiz",
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="restricted_learners",
            field=models.ManyToManyField(
                blank=True,
                help_text="Learners who are restricted from viewing this topic",
                related_name="restricted_topics",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="topic",
            name="section",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional section to organize topics",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="topics",
                to="courses.section",
            ),
        ),
        migrations.AddField(
            model_name="section",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sections",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="learningobjective",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="learning_objectives",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="discussion",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="discussion",
            name="likes",
            field=models.ManyToManyField(
                blank=True,
                related_name="liked_topic_discussions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="discussion",
            name="topic",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="topic_discussion",
                to="courses.topic",
            ),
        ),
        migrations.AddField(
            model_name="coursetopic",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="courses.course"
            ),
        ),
        migrations.AddField(
            model_name="coursetopic",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="courses.topic"
            ),
        ),
        migrations.AddField(
            model_name="coursefeature",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="features",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="courseenrollment",
            name="course",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="courseenrollment",
            name="source_course",
            field=models.ForeignKey(
                blank=True,
                help_text="The course that caused this auto-enrollment (for prerequisite relationships)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="caused_enrollments",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="courseenrollment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="coursecompletionrequirement",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="completion_requirements",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="coursecompletionrequirement",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="required_for_completion",
                to="courses.topic",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="accessible_groups",
            field=models.ManyToManyField(
                blank=True,
                related_name="accessible_courses",
                through="groups.CourseGroupAccess",
                to="groups.branchgroup",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="branch",
            field=models.ForeignKey(
                blank=True,
                help_text="The branch this course belongs to.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="courses",
                to="branches.branch",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="courses",
                to="categories.coursecategory",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="certificate_template",
            field=models.ForeignKey(
                blank=True,
                help_text="Certificate template to use for this course",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="courses",
                to="certificates.certificatetemplate",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="enrolled_users",
            field=models.ManyToManyField(
                blank=True,
                help_text="The learners enrolled in this course.",
                related_name="enrolled_courses",
                through="courses.CourseEnrollment",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="instructor",
            field=models.ForeignKey(
                help_text="The instructor assigned to this course.",
                limit_choices_to={"role": "instructor"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instructor_courses",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="prerequisites",
            field=models.ManyToManyField(
                blank=True,
                help_text="Courses that must be completed before enrolling",
                related_name="required_for",
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="topics",
            field=models.ManyToManyField(
                blank=True,
                related_name="courses",
                through="courses.CourseTopic",
                to="courses.topic",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="discussion",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="courses.discussion",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="likes",
            field=models.ManyToManyField(
                blank=True,
                related_name="liked_topic_comments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="replies",
                to="courses.comment",
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="comment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="courses.comment",
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="discussion",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="courses.discussion",
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["user", "topic"], name="courses_top_user_id_fca8be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["user", "completed"], name="courses_top_user_id_bd9787_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["topic", "completed"], name="courses_top_topic_i_aeb791_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["completed", "completed_at"],
                name="courses_top_complet_6aee43_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["user", "last_accessed"], name="courses_top_user_id_6da118_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["user", "completed", "last_score"],
                name="courses_top_user_id_5d0f1c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="topicprogress",
            index=models.Index(
                fields=["topic", "user", "completed"],
                name="courses_top_topic_i_f2e021_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="topicprogress",
            unique_together={("user", "topic")},
        ),
        migrations.AlterUniqueTogether(
            name="coursetopic",
            unique_together={("course", "topic")},
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["user", "completed"], name="courses_cou_user_id_bebda2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["course", "completed"], name="courses_cou_course__ac2b26_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["completed", "completion_date"],
                name="courses_cou_complet_9fd96c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["user", "course", "completed"],
                name="courses_cou_user_id_f2ee7a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["enrolled_at"], name="courses_cou_enrolle_89b743_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["last_accessed"], name="courses_cou_last_ac_16cf56_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["user", "enrolled_at"], name="courses_cou_user_id_a0bc85_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="courseenrollment",
            index=models.Index(
                fields=["completion_date"], name="courses_cou_complet_3ae2fe_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="courseenrollment",
            unique_together={("course", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="coursecompletionrequirement",
            unique_together={("course", "topic")},
        ),
    ]
