# Generated by Django 3.2.25 on 2025-10-08 05:38

from django.db import migrations


def add_certificate_expiry_notification_type(apps, schema_editor):
    """Add certificate expiry notification type"""
    NotificationType = apps.get_model('lms_notifications', 'NotificationType')
    
    # Create certificate expiry notification type if it doesn't exist
    NotificationType.objects.get_or_create(
        name='certificate_expiry_reminder',
        defaults={
            'display_name': 'Certificate Expiry Reminder',
            'description': 'Notification sent when a certificate is about to expire',
            'is_active': True,
            'can_be_disabled': True,
            'available_to_roles': [],  # Available to all roles
            'default_email_enabled': True,
            'default_web_enabled': True,
        }
    )


def remove_certificate_expiry_notification_type(apps, schema_editor):
    """Remove certificate expiry notification type"""
    NotificationType = apps.get_model('lms_notifications', 'NotificationType')
    NotificationType.objects.filter(name='certificate_expiry_reminder').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('lms_notifications', '0004_notificationsettings_certificate_expiry_reminder_days'),
    ]

    operations = [
        migrations.RunPython(
            add_certificate_expiry_notification_type,
            remove_certificate_expiry_notification_type
        ),
    ]
