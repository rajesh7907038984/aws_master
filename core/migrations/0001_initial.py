# Generated by Django 3.2.25 on 2025-10-29 09:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='BranchStorageLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_limit_bytes', models.BigIntegerField(default=1073741824, help_text='Maximum storage allowed in bytes for this branch', validators=[django.core.validators.MinValueValidator(0)])),
                ('is_unlimited', models.BooleanField(default=False, help_text='If enabled, this branch has unlimited storage')),
                ('warning_threshold_percent', models.PositiveIntegerField(default=80, help_text='Warning threshold as percentage of limit (e.g., 80 for 80%)', validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Branch Storage Limit',
                'verbose_name_plural': 'Branch Storage Limits',
                'ordering': ['branch__name'],
            },
        ),
        migrations.CreateModel(
            name='FileStorageUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.TextField(help_text='Path to the uploaded file')),
                ('original_filename', models.CharField(help_text='Original name of the uploaded file', max_length=255)),
                ('file_size_bytes', models.BigIntegerField(help_text='Size of the file in bytes')),
                ('content_type', models.CharField(blank=True, help_text='MIME type of the file', max_length=100, null=True)),
                ('source_app', models.CharField(help_text="App that handled the upload (e.g., 'tinymce_editor', 'assignments')", max_length=50)),
                ('source_model', models.CharField(blank=True, help_text='Model that the file is associated with', max_length=100, null=True)),
                ('source_object_id', models.PositiveIntegerField(blank=True, help_text='ID of the object the file is associated with', null=True)),
                ('upload_session_id', models.CharField(blank=True, help_text='Session identifier for batch uploads', max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether the file has been deleted (for cleanup tracking)')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When the file was marked as deleted', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'File Storage Usage',
                'verbose_name_plural': 'File Storage Usage Records',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StorageQuotaWarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warning_type', models.CharField(choices=[('threshold', 'Warning Threshold Exceeded'), ('limit', 'Storage Limit Exceeded'), ('admin_notification', 'Admin Notification')], help_text='Type of warning issued', max_length=20)),
                ('usage_percentage', models.FloatField(help_text='Storage usage percentage when warning was issued')),
                ('usage_bytes', models.BigIntegerField(help_text='Storage usage in bytes when warning was issued')),
                ('limit_bytes', models.BigIntegerField(help_text='Storage limit in bytes at time of warning')),
                ('email_sent', models.BooleanField(default=False, help_text='Whether email notification was sent')),
                ('acknowledged', models.BooleanField(default=False, help_text='Whether the warning has been acknowledged')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(help_text='Branch that the warning is for', on_delete=django.db.models.deletion.CASCADE, related_name='storage_warnings', to='branches.branch')),
            ],
            options={
                'verbose_name': 'Storage Quota Warning',
                'verbose_name_plural': 'Storage Quota Warnings',
                'ordering': ['-created_at'],
            },
        ),
    ]
