# Generated by Django 3.2.25 on 2025-10-29 09:47

from django.db import migrations, models
import django.db.models.deletion
import lms_rubrics.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conferences', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('total_points', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RubricCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(validators=[lms_rubrics.models.validate_description])),
                ('points', models.FloatField(default=0)),
                ('position', models.PositiveIntegerField(default=0)),
                ('use_range', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='RubricEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField(default=0)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['criterion__position'],
            },
        ),
        migrations.CreateModel(
            name='RubricEvaluationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField(default=0)),
                ('comments', models.TextField(blank=True)),
                ('version', models.PositiveIntegerField(default=1, help_text='Version number of this evaluation')),
                ('evaluation_date', models.DateTimeField(help_text='When this evaluation was made')),
                ('is_current', models.BooleanField(default=False, help_text='Whether this is the current evaluation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['criterion__position', '-version'],
            },
        ),
        migrations.CreateModel(
            name='RubricRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Rating', max_length=255)),
                ('description', models.TextField(validators=[lms_rubrics.models.validate_description])),
                ('points', models.FloatField()),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='lms_rubrics.rubriccriterion')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='RubricOverallFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, help_text='Text feedback from instructor about the overall rubric evaluation')),
                ('audio_feedback', models.FileField(blank=True, help_text='Audio feedback file (mp3, wav, m4a, etc.)', null=True, upload_to=lms_rubrics.models.rubric_feedback_file_path)),
                ('video_feedback', models.FileField(blank=True, help_text='Video feedback file (mp4, mov, avi, etc.)', null=True, upload_to=lms_rubrics.models.rubric_feedback_file_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_private', models.BooleanField(default=False, help_text='Whether feedback is visible to the student or only to instructors')),
                ('conference', models.ForeignKey(blank=True, help_text='Related conference if applicable', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rubric_overall_feedback', to='conferences.conference')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
