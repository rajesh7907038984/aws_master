# Generated by Django 3.2.25 on 2025-10-07 01:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0003_branchuserlimits_total_limit'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0005_auto_20251004_1147'),
    ]

    operations = [
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Survey title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Survey description')),
                ('is_active', models.BooleanField(default=True, help_text='Is this survey active?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, help_text='Branch this survey belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='branches.branch')),
                ('created_by', models.ForeignKey(help_text='User who created this survey', on_delete=django.db.models.deletion.CASCADE, related_name='created_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SurveyField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Field label/question', max_length=255)),
                ('field_type', models.CharField(choices=[('text', 'Text Input'), ('textarea', 'Text Area'), ('rating', 'Star Rating'), ('number', 'Number'), ('email', 'Email')], default='text', help_text='Type of input field', max_length=20)),
                ('is_required', models.BooleanField(default=True, help_text='Is this field required?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order of field')),
                ('placeholder', models.CharField(blank=True, help_text='Placeholder text for input', max_length=255)),
                ('help_text', models.TextField(blank=True, help_text='Help text for the field')),
                ('max_rating', models.PositiveIntegerField(default=5, help_text='Maximum rating value (for rating fields)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('survey', models.ForeignKey(help_text='Survey this field belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='course_reviews.survey')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True, help_text='Text response')),
                ('rating_response', models.PositiveIntegerField(blank=True, help_text='Rating response (1-10)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(help_text='Course this response is related to', on_delete=django.db.models.deletion.CASCADE, related_name='survey_responses', to='courses.course')),
                ('survey_field', models.ForeignKey(help_text='Survey field this response is for', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='course_reviews.surveyfield')),
                ('user', models.ForeignKey(help_text='User who submitted this response', on_delete=django.db.models.deletion.CASCADE, related_name='survey_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_rating', models.DecimalField(decimal_places=2, help_text='Average rating from all rating fields', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('review_text', models.TextField(blank=True, help_text='Compiled review text')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True, help_text='Is this review published?')),
                ('course', models.ForeignKey(help_text='Course being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='courses.course')),
                ('survey', models.ForeignKey(help_text='Survey this review is based on', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_reviews', to='course_reviews.survey')),
                ('user', models.ForeignKey(help_text='User who submitted the review', on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.AddIndex(
            model_name='surveyresponse',
            index=models.Index(fields=['user', 'course'], name='course_revi_user_id_8e0673_idx'),
        ),
        migrations.AddIndex(
            model_name='surveyresponse',
            index=models.Index(fields=['course', 'submitted_at'], name='course_revi_course__38538d_idx'),
        ),
        migrations.AddIndex(
            model_name='surveyresponse',
            index=models.Index(fields=['survey_field'], name='course_revi_survey__5d3730_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='surveyresponse',
            unique_together={('survey_field', 'user', 'course')},
        ),
        migrations.AddIndex(
            model_name='surveyfield',
            index=models.Index(fields=['survey', 'order'], name='course_revi_survey__e78f66_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['is_active', 'branch'], name='course_revi_is_acti_1b03d6_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['created_by'], name='course_revi_created_b4e760_idx'),
        ),
        migrations.AddIndex(
            model_name='coursereview',
            index=models.Index(fields=['course', 'is_published'], name='course_revi_course__3e6095_idx'),
        ),
        migrations.AddIndex(
            model_name='coursereview',
            index=models.Index(fields=['user'], name='course_revi_user_id_ea2c01_idx'),
        ),
        migrations.AddIndex(
            model_name='coursereview',
            index=models.Index(fields=['average_rating'], name='course_revi_average_d09e71_idx'),
        ),
        migrations.AddIndex(
            model_name='coursereview',
            index=models.Index(fields=['-submitted_at'], name='course_revi_submitt_2a18a9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='coursereview',
            unique_together={('course', 'user', 'survey')},
        ),
    ]
