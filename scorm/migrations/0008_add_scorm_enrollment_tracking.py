# Generated by Django 3.2.25 on 2025-10-29 17:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0004_change_scorm_cascade'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('scorm', '0007_change_scorm_cascade'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScormAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.IntegerField(help_text='Sequential attempt number for this enrollment')),
                ('session_id', models.UUIDField(help_text='Unique session ID for this attempt', unique=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_commit_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('terminated', models.BooleanField(default=False, help_text='Whether LMSFinish/Terminate was called')),
                ('scorm_version', models.CharField(choices=[('1.2', 'SCORM 1.2'), ('2004', 'SCORM 2004')], default='1.2', max_length=10)),
                ('score_raw', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('score_min', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('score_max', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('score_scaled', models.DecimalField(blank=True, decimal_places=4, help_text='Scaled score (0-1 range) for SCORM 2004', max_digits=5, null=True)),
                ('completion_status', models.CharField(blank=True, help_text='SCORM completion status: completed, incomplete, not attempted, unknown', max_length=20, null=True)),
                ('success_status', models.CharField(blank=True, help_text='SCORM success status: passed, failed, unknown', max_length=20, null=True)),
                ('total_time', models.CharField(blank=True, help_text='SCORM time format (e.g., PT1H23M45S)', max_length=50, null=True)),
                ('total_time_seconds', models.IntegerField(default=0, help_text='Total time in seconds for easier querying')),
                ('lesson_location', models.TextField(blank=True, help_text='Current location in SCO (SCORM 1.2) or cmi.location (2004)', null=True)),
                ('suspend_data', models.TextField(blank=True, help_text='Suspend data for resuming session', null=True)),
                ('entry_mode', models.CharField(blank=True, help_text='Entry mode: ab-initio, resume, (SCORM 1.2/2004)', max_length=20, null=True)),
                ('exit_mode', models.CharField(blank=True, help_text='Exit mode: time-out, suspend, logout, normal, (SCORM 1.2/2004)', max_length=20, null=True)),
                ('cmi_data', models.JSONField(default=dict, help_text='Complete SCORM CMI data tree as sent by SCO')),
                ('interactions_data', models.JSONField(default=list, help_text='All cmi.interactions.n data')),
                ('objectives_data', models.JSONField(default=list, help_text='All cmi.objectives.n data')),
                ('comments_from_learner', models.JSONField(default=list, help_text='Comments from learner (cmi.comments_from_learner)')),
                ('comments_from_lms', models.JSONField(default=list, help_text='Comments from LMS (cmi.comments_from_lms)')),
                ('commit_count', models.IntegerField(default=0, help_text='Number of LMSCommit calls received')),
                ('last_sequence_number', models.IntegerField(default=0, help_text='Last sequence number for idempotency')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ScormEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('total_attempts', models.IntegerField(default=0)),
                ('best_score', models.DecimalField(blank=True, decimal_places=4, help_text='Best score across all attempts (raw score)', max_digits=7, null=True)),
                ('first_completion_date', models.DateTimeField(blank=True, help_text='Date of first successful completion', null=True)),
                ('last_completion_date', models.DateTimeField(blank=True, help_text='Date of most recent completion', null=True)),
                ('enrollment_status', models.CharField(choices=[('enrolled', 'Enrolled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('passed', 'Passed')], default='enrolled', max_length=20)),
                ('total_time_seconds', models.IntegerField(default=0, help_text='Total time spent across all attempts in seconds')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='scorm.scormpackage')),
                ('topic', models.ForeignKey(help_text='SCORM topic the learner is enrolled in', on_delete=django.db.models.deletion.CASCADE, related_name='scorm_enrollments', to='courses.topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorm_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_accessed'],
            },
        ),
        migrations.CreateModel(
            name='ScormCommitLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sequence_number', models.IntegerField()),
                ('cmi_snapshot', models.JSONField()),
                ('changes', models.JSONField(default=dict, help_text='Dictionary of changed CMI elements')),
                ('client_timestamp', models.CharField(blank=True, max_length=50, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commit_logs', to='scorm.scormattempt')),
            ],
            options={
                'ordering': ['sequence_number'],
            },
        ),
        migrations.AddField(
            model_name='scormattempt',
            name='enrollment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='scorm.scormenrollment'),
        ),
        migrations.AddField(
            model_name='scormattempt',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='scorm.scormpackage'),
        ),
        migrations.AddField(
            model_name='scormattempt',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorm_attempts', to='courses.topic'),
        ),
        migrations.AddField(
            model_name='scormattempt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorm_attempts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='scormenrollment',
            index=models.Index(fields=['user', 'topic'], name='scorm_scorm_user_id_213a73_idx'),
        ),
        migrations.AddIndex(
            model_name='scormenrollment',
            index=models.Index(fields=['enrollment_status'], name='scorm_scorm_enrollm_1d91e2_idx'),
        ),
        migrations.AddIndex(
            model_name='scormenrollment',
            index=models.Index(fields=['last_accessed'], name='scorm_scorm_last_ac_dc6aba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='scormenrollment',
            unique_together={('user', 'topic')},
        ),
        migrations.AddIndex(
            model_name='scormcommitlog',
            index=models.Index(fields=['attempt', 'sequence_number'], name='scorm_scorm_attempt_62c194_idx'),
        ),
        migrations.AddIndex(
            model_name='scormcommitlog',
            index=models.Index(fields=['timestamp'], name='scorm_scorm_timesta_2c2d61_idx'),
        ),
        migrations.AddIndex(
            model_name='scormattempt',
            index=models.Index(fields=['user', 'topic'], name='scorm_scorm_user_id_45edfb_idx'),
        ),
        migrations.AddIndex(
            model_name='scormattempt',
            index=models.Index(fields=['session_id'], name='scorm_scorm_session_a01e44_idx'),
        ),
        migrations.AddIndex(
            model_name='scormattempt',
            index=models.Index(fields=['enrollment', 'attempt_number'], name='scorm_scorm_enrollm_9d7327_idx'),
        ),
        migrations.AddIndex(
            model_name='scormattempt',
            index=models.Index(fields=['completed', 'started_at'], name='scorm_scorm_complet_1ca368_idx'),
        ),
        migrations.AddIndex(
            model_name='scormattempt',
            index=models.Index(fields=['user', 'completed'], name='scorm_scorm_user_id_f30952_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='scormattempt',
            unique_together={('enrollment', 'attempt_number')},
        ),
    ]
