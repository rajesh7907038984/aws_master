# Generated by Django 3.2.25 on 2025-10-29 05:00 (manual creation)

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scorm', '0018_merge_20251029_0446'),
    ]

    operations = [
        migrations.AddField(
            model_name='scormpackage',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='active', help_text='Control whether a SCORM package is live or hidden', max_length=20),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='size',
            field=models.BigIntegerField(blank=True, help_text='Store ZIP file size for quick lookup or quota management', null=True),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='entry_point',
            field=models.CharField(blank=True, help_text='Sometimes different from launch_url; identifies SCO start file from manifest', max_length=800),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='organization',
            field=models.CharField(blank=True, help_text='imsmanifest.xml may define multiple organizations; this stores the one used', max_length=800),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Optional manifest-level metadata (duration, keywords, vendor info, etc.)'),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='is_multi_sco',
            field=models.BooleanField(default=False, help_text='Indicates if the package has multiple SCOs (vs. a single SCO course)'),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='extract_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('extracted', 'Extracted'), ('failed', 'Failed')], default='pending', help_text='Useful for async extraction or background processing', max_length=20),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='runtime_api',
            field=models.CharField(choices=[('scorm_1_2', 'SCORM 1.2'), ('scorm_2004', 'SCORM 2004'), ('xapi', 'xAPI'), ('cmi5', 'CMI5')], default='scorm_1_2', help_text='Helps the player select the correct runtime handler', max_length=20),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='lms_launch_type',
            field=models.CharField(choices=[('iframe', 'Iframe'), ('new_window', 'New Window'), ('popup', 'Popup')], default='iframe', help_text='Controls how the course is displayed', max_length=20),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='duration_estimate',
            field=models.DurationField(blank=True, help_text='Optional â€” can be extracted from metadata or author-provided', null=True),
        ),
        migrations.AddField(
            model_name='scormpackage',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='Track which admin or instructor uploaded it', null=True, on_delete=models.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
