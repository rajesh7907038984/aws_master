# Generated by Django 3.2.25 on 2025-10-22 07:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('account_settings', '0004_auto_20251001_1548'),
        ('branches', '0001_initial'),
        ('users', '0002_auto_20251022_0734'),
    ]

    operations = [
        migrations.CreateModel(
            name='SCORMIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='SCORM Integration', max_length=255, help_text='Name for this integration configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('app_id', models.CharField(max_length=255, help_text='SCORM Cloud Application ID')),
                ('secret_key', models.CharField(max_length=255, help_text='SCORM Cloud Secret Key')),
                ('pens_key', models.CharField(blank=True, max_length=255, null=True, help_text='SCORM Cloud PENS (Package Exchange Notification Services) Key for notifications')),
                ('base_url', models.URLField(default='https://cloud.scorm.com/api/v2', help_text='SCORM Cloud API Base URL')),
                ('verify_ssl', models.BooleanField(default=True, help_text='Verify SSL certificates for SCORM Cloud API')),
                ('request_timeout', models.PositiveIntegerField(default=900, help_text='Request timeout in seconds (15 minutes default)')),
                ('upload_timeout', models.PositiveIntegerField(default=1800, help_text='Upload timeout in seconds (30 minutes default)')),
                ('max_upload_size', models.PositiveIntegerField(default=629145600, help_text='Maximum upload size in bytes (600MB default)')),
                ('is_tested', models.BooleanField(default=False, help_text='Whether SCORM Cloud configuration has been tested successfully')),
                ('last_test_date', models.DateTimeField(blank=True, null=True, help_text='Date when SCORM Cloud configuration was last tested')),
                ('test_error', models.TextField(blank=True, null=True, help_text='Last SCORM Cloud test error message if any')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scorm_integrations', to='branches.branch', help_text='The branch this SCORM integration belongs to')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scorm_integrations', to='users.customuser')),
            ],
            options={
                'verbose_name': 'SCORM Integration',
                'verbose_name_plural': 'SCORM Integrations',
            },
        ),
    ]