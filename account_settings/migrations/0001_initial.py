# Generated by Django 3.2.25 on 2025-10-29 09:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIControlSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(choices=[('lesson_planning', 'AI Lesson Planning'), ('assessment_generation', 'AI Assessment Generation'), ('automatic_grading', 'AI Automatic Grading'), ('personal_tutor', 'AI Personal Tutor'), ('content_recommendation', 'AI Content Recommendation'), ('chatbot_support', 'AI Chatbot Support'), ('plagiarism_detection', 'AI Plagiarism Detection'), ('analytics_insights', 'AI Analytics Insights')], max_length=50, unique=True)),
                ('is_enabled', models.BooleanField(default=False, help_text='Enable this AI feature system-wide')),
                ('is_beta', models.BooleanField(default=True, help_text='Mark this feature as beta')),
                ('api_endpoint', models.URLField(blank=True, help_text='API endpoint for this AI service', null=True)),
                ('api_key', models.CharField(blank=True, help_text='API key for AI service', max_length=255, null=True)),
                ('model_version', models.CharField(blank=True, help_text='AI model version', max_length=100, null=True)),
                ('daily_usage_limit', models.IntegerField(default=1000, help_text='Daily usage limit for this feature')),
                ('monthly_usage_limit', models.IntegerField(default=30000, help_text='Monthly usage limit for this feature')),
                ('available_to_globaladmin', models.BooleanField(default=True)),
                ('available_to_superadmin', models.BooleanField(default=True)),
                ('available_to_admin', models.BooleanField(default=False)),
                ('available_to_instructor', models.BooleanField(default=False)),
                ('available_to_learner', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Control Setting',
                'verbose_name_plural': 'AI Control Settings',
                'ordering': ['feature_name'],
            },
        ),
        migrations.CreateModel(
            name='DataBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_type', models.CharField(choices=[('manual', 'Manual Backup'), ('scheduled', 'Scheduled Backup'), ('pre_import', 'Pre-Import Backup')], max_length=20)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExportJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_type', models.CharField(choices=[('users', 'Users'), ('courses', 'Courses'), ('topics', 'Topics'), ('assignments', 'Assignments'), ('quizzes', 'Quizzes'), ('discussions', 'Discussions'), ('conferences', 'Conferences'), ('all', 'All Data')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_size', models.BigIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('record_count', models.IntegerField(blank=True, help_text='Number of records exported', null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('include_files', models.BooleanField(default=True, help_text='Include related files in export')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GlobalAdminSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_oauth_enabled', models.BooleanField(default=True, help_text='Enable Google OAuth for the entire system')),
                ('google_client_id', models.CharField(blank=True, help_text='Google OAuth Client ID', max_length=255, null=True)),
                ('google_client_secret', models.CharField(blank=True, help_text='Google OAuth Client Secret', max_length=255, null=True)),
                ('google_oauth_domains', models.TextField(blank=True, help_text='Allowed domains for Google OAuth (comma separated)', null=True)),
                ('microsoft_oauth_enabled', models.BooleanField(default=True, help_text='Enable Microsoft OAuth for the entire system')),
                ('microsoft_client_id', models.CharField(blank=True, help_text='Microsoft OAuth Client ID (Application ID)', max_length=255, null=True)),
                ('microsoft_client_secret', models.CharField(blank=True, help_text='Microsoft OAuth Client Secret', max_length=255, null=True)),
                ('microsoft_tenant_id', models.CharField(blank=True, help_text="Microsoft Tenant ID (optional, use 'common' for multi-tenant)", max_length=255, null=True)),
                ('microsoft_oauth_domains', models.TextField(blank=True, help_text='Allowed domains for Microsoft OAuth (comma separated)', null=True)),
                ('smtp_enabled', models.BooleanField(default=False, help_text='Enable custom SMTP configuration for all email sending')),
                ('smtp_host', models.CharField(blank=True, help_text='SMTP server hostname (e.g., smtp.gmail.com)', max_length=255, null=True)),
                ('smtp_port', models.PositiveIntegerField(default=587, help_text='SMTP server port (usually 587 for TLS, 465 for SSL, 25 for plain)')),
                ('smtp_username', models.CharField(blank=True, help_text='SMTP username/email address', max_length=255, null=True)),
                ('smtp_password', models.CharField(blank=True, help_text='SMTP password', max_length=255, null=True)),
                ('smtp_use_tls', models.BooleanField(default=True, help_text='Use TLS encryption (recommended)')),
                ('smtp_use_ssl', models.BooleanField(default=False, help_text='Use SSL encryption (alternative to TLS)')),
                ('smtp_from_email', models.EmailField(blank=True, help_text="Default 'From' email address for all notifications", max_length=254, null=True)),
                ('smtp_from_name', models.CharField(default='LMS Notifications', help_text="Display name for the 'From' field", max_length=255)),
                ('smtp_reply_to_email', models.EmailField(blank=True, help_text='Reply-to email address (optional)', max_length=254, null=True)),
                ('smtp_is_tested', models.BooleanField(default=False, help_text='Whether SMTP configuration has been tested successfully')),
                ('smtp_last_test_date', models.DateTimeField(blank=True, help_text='Date when SMTP configuration was last tested', null=True)),
                ('smtp_test_error', models.TextField(blank=True, help_text='Last SMTP test error message if any', null=True)),
                ('sharepoint_integration_enabled', models.BooleanField(default=False, help_text='Enable SharePoint integration system-wide')),
                ('sharepoint_sync_users', models.BooleanField(default=True, help_text='Enable user data synchronization with SharePoint')),
                ('sharepoint_sync_enrollments', models.BooleanField(default=True, help_text='Enable course enrollment synchronization with SharePoint')),
                ('sharepoint_sync_progress', models.BooleanField(default=True, help_text='Enable progress tracking synchronization to SharePoint')),
                ('teams_integration_enabled', models.BooleanField(default=False, help_text='Enable Microsoft Teams integration system-wide')),
                ('teams_sync_entra_groups', models.BooleanField(default=True, help_text='Enable Entra ID group synchronization with Teams')),
                ('teams_sync_meetings', models.BooleanField(default=True, help_text='Enable Teams meeting synchronization')),
                ('teams_sync_attendance', models.BooleanField(default=True, help_text='Enable Teams meeting attendance tracking')),
                ('sharepoint_sync_certificates', models.BooleanField(default=True, help_text='Enable completion certificates sync to SharePoint libraries')),
                ('sharepoint_sync_reports', models.BooleanField(default=True, help_text='Enable LMS analytics sync to Power BI via SharePoint')),
                ('sharepoint_sync_assessments', models.BooleanField(default=True, help_text='Enable assessment results sync to SharePoint & documents')),
                ('sharepoint_sync_interval', models.PositiveIntegerField(default=60, help_text='Sync interval in minutes for automatic synchronization')),
                ('sharepoint_auto_sync_enabled', models.BooleanField(default=False, help_text='Enable automatic scheduled synchronization')),
                ('order_management_enabled', models.BooleanField(default=False, help_text='Enable order management features system-wide')),
                ('anthropic_ai_enabled', models.BooleanField(default=False, help_text='Enable Anthropic AI content generation for TinyMCE editors system-wide')),
                ('anthropic_api_key', models.CharField(blank=True, help_text='Anthropic API Key for Claude AI content generation', max_length=255, null=True)),
                ('anthropic_model', models.CharField(default='claude-3-5-sonnet-20241022', help_text='Anthropic model to use for content generation', max_length=100)),
                ('anthropic_max_tokens', models.PositiveIntegerField(default=1000, help_text='Maximum tokens per AI request')),
                ('anthropic_is_tested', models.BooleanField(default=False, help_text='Whether Anthropic AI configuration has been tested successfully')),
                ('anthropic_last_test_date', models.DateTimeField(blank=True, help_text='Date when Anthropic AI configuration was last tested', null=True)),
                ('anthropic_test_error', models.TextField(blank=True, help_text='Last Anthropic AI test error message if any', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Global Admin Settings',
                'verbose_name_plural': 'Global Admin Settings',
            },
        ),
        migrations.CreateModel(
            name='ImportJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_type', models.CharField(choices=[('users', 'Users'), ('courses', 'Courses'), ('topics', 'Topics'), ('assignments', 'Assignments'), ('quizzes', 'Quizzes'), ('discussions', 'Discussions'), ('conferences', 'Conferences')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='pending', max_length=20)),
                ('file_path', models.CharField(max_length=500)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_created', models.IntegerField(default=0)),
                ('records_updated', models.IntegerField(default=0)),
                ('records_failed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('validation_errors', models.JSONField(default=dict, help_text='Detailed validation errors')),
                ('replace_existing', models.BooleanField(default=False, help_text='Replace existing records')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MenuControlSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_section', models.CharField(choices=[('dashboard', 'Dashboard'), ('user_management', 'User Management'), ('branch_portal', 'Branch Portal'), ('courses', 'Courses'), ('assignments', 'Assignments'), ('communication', 'Communication'), ('calendar', 'Calendar'), ('reports', 'Reports'), ('certificates', 'Certificates'), ('role_management', 'Role Management'), ('account_settings', 'Account & Settings'), ('subscription', 'Subscription')], max_length=50)),
                ('submenu_item', models.CharField(blank=True, choices=[('branches', 'Branches'), ('groups', 'Groups'), ('users', 'Users'), ('branch_dashboard', 'Branch Dashboard'), ('order_management', 'Order Management'), ('course_list', 'Course List'), ('categories', 'Categories'), ('outcomes', 'Outcomes'), ('messages', 'Messages'), ('discussions', 'Discussions'), ('conferences', 'Conferences'), ('notifications', 'Notifications'), ('reports_overview', 'Reports Overview'), ('user_reports', 'User Reports'), ('group_reports', 'Group Reports'), ('branch_reports', 'Branch Reports'), ('course_reports', 'Course Reports'), ('learning_activities', 'Learning Activities'), ('training_matrix', 'Training Matrix'), ('gradebook', 'Gradebook'), ('timeline', 'Timeline'), ('custom_reports', 'Custom Reports')], max_length=50, null=True)),
                ('visible_to_globaladmin', models.BooleanField(default=True)),
                ('visible_to_superadmin', models.BooleanField(default=True)),
                ('visible_to_admin', models.BooleanField(default=True)),
                ('visible_to_instructor', models.BooleanField(default=True)),
                ('visible_to_learner', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Menu Control Setting',
                'verbose_name_plural': 'Menu Control Settings',
                'ordering': ['menu_section', 'submenu_item'],
            },
        ),
        migrations.CreateModel(
            name='PayPalIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this integration configuration', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_id', models.CharField(max_length=255)),
                ('client_secret', models.CharField(max_length=255)),
                ('is_sandbox', models.BooleanField(default=True, help_text='Whether to use sandbox or live mode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(default='UTC', help_text='Default timezone for the portal', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Portal Settings',
                'verbose_name_plural': 'Portal Settings',
            },
        ),
        migrations.CreateModel(
            name='SharePointIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this integration configuration', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant_id', models.CharField(help_text='Microsoft Azure AD Tenant ID', max_length=255)),
                ('client_id', models.CharField(help_text='Azure App Registration Application (client) ID', max_length=255)),
                ('client_secret', models.CharField(help_text='Azure App Registration Client Secret', max_length=255)),
                ('site_url', models.URLField(help_text='SharePoint site URL (e.g., https://company.sharepoint.com/sites/sitename)')),
                ('user_list_name', models.CharField(default='LMS Users', help_text='SharePoint list name for user data', max_length=255)),
                ('enrollment_list_name', models.CharField(default='Course Enrollments', help_text='SharePoint list name for course enrollments', max_length=255)),
                ('progress_list_name', models.CharField(default='Learning Progress', help_text='SharePoint list name for progress tracking', max_length=255)),
                ('certificate_library_name', models.CharField(default='Certificates', help_text='SharePoint document library name for certificates', max_length=255)),
                ('reports_library_name', models.CharField(default='Reports', help_text='SharePoint document library name for reports', max_length=255)),
                ('assessment_library_name', models.CharField(default='Assessments', help_text='SharePoint document library name for assessment results', max_length=255)),
                ('powerbi_workspace_id', models.CharField(blank=True, help_text='Power BI workspace ID for analytics integration', max_length=255, null=True)),
                ('powerbi_dataset_id', models.CharField(blank=True, help_text='Power BI dataset ID for LMS analytics', max_length=255, null=True)),
                ('enable_user_sync', models.BooleanField(default=True, help_text='Enable user data synchronization')),
                ('enable_enrollment_sync', models.BooleanField(default=True, help_text='Enable enrollment synchronization')),
                ('enable_progress_sync', models.BooleanField(default=True, help_text='Enable progress synchronization')),
                ('enable_certificate_sync', models.BooleanField(default=True, help_text='Enable certificate synchronization')),
                ('enable_reports_sync', models.BooleanField(default=True, help_text='Enable reports synchronization')),
                ('enable_assessment_sync', models.BooleanField(default=True, help_text='Enable assessment synchronization')),
                ('access_token', models.TextField(blank=True, help_text='Current access token for SharePoint API', null=True)),
                ('token_expiry', models.DateTimeField(blank=True, help_text='Access token expiry time', null=True)),
                ('refresh_token', models.TextField(blank=True, help_text='Refresh token for token renewal', null=True)),
                ('last_sync_datetime', models.DateTimeField(blank=True, help_text='Last successful synchronization datetime', null=True)),
                ('last_sync_status', models.CharField(default='never', help_text='Status of last sync attempt', max_length=50)),
                ('sync_error_message', models.TextField(blank=True, help_text='Error message from last sync attempt', null=True)),
                ('total_synced_users', models.PositiveIntegerField(default=0, help_text='Total users synchronized')),
                ('total_synced_enrollments', models.PositiveIntegerField(default=0, help_text='Total enrollments synchronized')),
            ],
            options={
                'verbose_name': 'SharePoint Integration',
                'verbose_name_plural': 'SharePoint Integrations',
            },
        ),
        migrations.CreateModel(
            name='StripeIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this integration configuration', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('publishable_key', models.CharField(max_length=255)),
                ('secret_key', models.CharField(max_length=255)),
                ('webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('is_test_mode', models.BooleanField(default=True, help_text='Whether to use test mode or live mode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamsIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this integration configuration', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_id', models.CharField(max_length=255)),
                ('client_secret', models.CharField(max_length=255)),
                ('tenant_id', models.CharField(max_length=255)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZoomIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this integration configuration', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_key', models.CharField(max_length=255)),
                ('api_secret', models.CharField(max_length=255)),
                ('oauth_token', models.TextField(blank=True, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
                ('account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('branch', models.ForeignKey(blank=True, help_text='The branch this integration belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, to='branches.branch')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
