# Generated by Django 3.2.25 on 2025-10-24 04:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('conferences', '0003_initial'),
        ('groups', '0002_initial'),
        ('account_settings', '0008_increase_char_limits_to_800'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamsUserSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entra_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('entra_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('entra_display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sync_status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed'), ('conflict', 'Conflict')], default='pending', max_length=20)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True, null=True)),
                ('sync_metadata', models.JSONField(blank=True, default=dict)),
                ('entra_groups', models.JSONField(blank=True, default=list)),
                ('lms_groups', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_syncs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamsSyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(choices=[('entra_groups', 'Entra ID Groups Sync'), ('entra_users', 'Entra ID Users Sync'), ('meeting_attendance', 'Meeting Attendance Sync'), ('meeting_recordings', 'Meeting Recordings Sync'), ('meeting_chat', 'Meeting Chat Sync'), ('meeting_files', 'Meeting Files Sync'), ('full_sync', 'Full Teams Sync')], max_length=20)),
                ('status', models.CharField(choices=[('started', 'Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partial Success')], default='started', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(default=0)),
                ('items_processed', models.PositiveIntegerField(default=0)),
                ('items_created', models.PositiveIntegerField(default=0)),
                ('items_updated', models.PositiveIntegerField(default=0)),
                ('items_failed', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('sync_direction', models.CharField(choices=[('to_teams', 'To Teams'), ('from_teams', 'From Teams'), ('bidirectional', 'Bidirectional')], default='from_teams', max_length=20)),
                ('sync_metadata', models.JSONField(blank=True, default=dict)),
                ('api_response', models.JSONField(blank=True, default=dict)),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams_sync_logs', to=settings.AUTH_USER_MODEL)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='account_settings.teamsintegration')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamsMeetingSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teams_meeting_id', models.CharField(max_length=255, unique=True)),
                ('teams_meeting_url', models.URLField(blank=True, max_length=500, null=True)),
                ('attendance_synced', models.BooleanField(default=False)),
                ('recordings_synced', models.BooleanField(default=False)),
                ('chat_synced', models.BooleanField(default=False)),
                ('files_synced', models.BooleanField(default=False)),
                ('last_attendance_sync', models.DateTimeField(blank=True, null=True)),
                ('last_recording_sync', models.DateTimeField(blank=True, null=True)),
                ('last_chat_sync', models.DateTimeField(blank=True, null=True)),
                ('last_file_sync', models.DateTimeField(blank=True, null=True)),
                ('meeting_duration_minutes', models.PositiveIntegerField(default=0)),
                ('total_participants', models.PositiveIntegerField(default=0)),
                ('meeting_status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('ended', 'Ended'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('sync_errors', models.JSONField(blank=True, default=dict)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_syncs', to='conferences.conference')),
            ],
        ),
        migrations.CreateModel(
            name='EntraGroupMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entra_group_id', models.CharField(max_length=255)),
                ('entra_group_name', models.CharField(max_length=255)),
                ('entra_group_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_sync_enabled', models.BooleanField(default=True)),
                ('sync_frequency_minutes', models.PositiveIntegerField(default=60)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_status', models.CharField(choices=[('never', 'Never Synced'), ('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial Success')], default='never', max_length=20)),
                ('total_users_synced', models.PositiveIntegerField(default=0)),
                ('last_sync_users_count', models.PositiveIntegerField(default=0)),
                ('sync_error', models.TextField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entra_mappings', to='account_settings.teamsintegration')),
                ('lms_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entra_mappings', to='groups.branchgroup')),
            ],
        ),
        migrations.AddIndex(
            model_name='teamsusersync',
            index=models.Index(fields=['user'], name='teams_integ_user_id_60b6f4_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsusersync',
            index=models.Index(fields=['entra_user_id'], name='teams_integ_entra_u_7adce0_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsusersync',
            index=models.Index(fields=['sync_status'], name='teams_integ_sync_st_a69510_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teamsusersync',
            unique_together={('user', 'entra_user_id')},
        ),
        migrations.AddIndex(
            model_name='teamssynclog',
            index=models.Index(fields=['integration', 'sync_type'], name='teams_integ_integra_15d46e_idx'),
        ),
        migrations.AddIndex(
            model_name='teamssynclog',
            index=models.Index(fields=['status', 'started_at'], name='teams_integ_status_f4b001_idx'),
        ),
        migrations.AddIndex(
            model_name='teamssynclog',
            index=models.Index(fields=['started_at'], name='teams_integ_started_bddfe8_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsmeetingsync',
            index=models.Index(fields=['conference'], name='teams_integ_confere_99a98d_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsmeetingsync',
            index=models.Index(fields=['teams_meeting_id'], name='teams_integ_teams_m_d1fd91_idx'),
        ),
        migrations.AddIndex(
            model_name='teamsmeetingsync',
            index=models.Index(fields=['meeting_status'], name='teams_integ_meeting_28d3b3_idx'),
        ),
        migrations.AddIndex(
            model_name='entragroupmapping',
            index=models.Index(fields=['integration', 'is_active'], name='teams_integ_integra_b7027a_idx'),
        ),
        migrations.AddIndex(
            model_name='entragroupmapping',
            index=models.Index(fields=['lms_group'], name='teams_integ_lms_gro_b67e23_idx'),
        ),
        migrations.AddIndex(
            model_name='entragroupmapping',
            index=models.Index(fields=['last_sync_at'], name='teams_integ_last_sy_5d8a1c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='entragroupmapping',
            unique_together={('integration', 'entra_group_id')},
        ),
    ]
